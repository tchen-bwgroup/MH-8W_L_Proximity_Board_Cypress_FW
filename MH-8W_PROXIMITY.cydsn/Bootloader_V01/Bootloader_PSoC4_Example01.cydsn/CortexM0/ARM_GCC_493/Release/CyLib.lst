ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	1
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 2


  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 3


  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 108 0
  27              		.cfi_startproc
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 109 0
  29 0000 8021     		mov	r1, #128
  30 0002 034A     		ldr	r2, .L2
  31 0004 0906     		lsl	r1, r1, #24
  32 0006 1368     		ldr	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  33              		.loc 1 124 0
  34              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  35              		.loc 1 109 0
  36 0008 0B43     		orr	r3, r1
  37 000a 1360     		str	r3, [r2]
  38              		.loc 1 124 0
  39 000c 7047     		bx	lr
  40              	.L3:
  41 000e C046     		.align	2
  42              	.L2:
  43 0010 30000340 		.word	1073938480
  44              		.cfi_endproc
  45              	.LFE0:
  46              		.size	CySysClkImoStart, .-CySysClkImoStart
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 4


  47              		.section	.text.CySysClkImoStop,"ax",%progbits
  48              		.align	1
  49              		.global	CySysClkImoStop
  50              		.code	16
  51              		.thumb_func
  52              		.type	CySysClkImoStop, %function
  53              	CySysClkImoStop:
  54              	.LFB1:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  55              		.loc 1 140 0
  56              		.cfi_startproc
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  57              		.loc 1 149 0
  58 0000 024A     		ldr	r2, .L5
 150:Generated_Source\PSoC4/CyLib.c **** }
  59              		.loc 1 150 0
  60              		@ sp needed
 149:Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 149 0
  62 0002 1368     		ldr	r3, [r2]
  63 0004 5B00     		lsl	r3, r3, #1
  64 0006 5B08     		lsr	r3, r3, #1
  65 0008 1360     		str	r3, [r2]
  66              		.loc 1 150 0
  67 000a 7047     		bx	lr
  68              	.L6:
  69              		.align	2
  70              	.L5:
  71 000c 30000340 		.word	1073938480
  72              		.cfi_endproc
  73              	.LFE1:
  74              		.size	CySysClkImoStop, .-CySysClkImoStop
  75              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  76              		.align	1
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 5


  77              		.global	CySysClkWriteHfclkDirect
  78              		.code	16
  79              		.thumb_func
  80              		.type	CySysClkWriteHfclkDirect, %function
  81              	CySysClkWriteHfclkDirect:
  82              	.LFB2:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 6


 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 7


 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 8


 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 9


 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 10


 430:Generated_Source\PSoC4/CyLib.c **** {
  83              		.loc 1 430 0
  84              		.cfi_startproc
  85              	.LVL0:
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
  90              		.loc 1 430 0
  91 0002 041C     		mov	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  92              		.loc 1 434 0
  93 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  94              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  95              		.loc 1 437 0
  96 0008 0323     		mov	r3, #3
  97 000a 0449     		ldr	r1, .L8
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
  98              		.loc 1 454 0
  99              		@ sp needed
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 100              		.loc 1 437 0
 101 000c 0A68     		ldr	r2, [r1]
 102 000e 9A43     		bic	r2, r3
 103              	.LVL2:
 448:Generated_Source\PSoC4/CyLib.c ****     }
 104              		.loc 1 448 0
 105 0010 2340     		and	r3, r4
 106 0012 1343     		orr	r3, r2
 107              	.LVL3:
 451:Generated_Source\PSoC4/CyLib.c **** 
 108              		.loc 1 451 0
 109 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 110              		.loc 1 453 0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 11


 111 0016 FFF7FEFF 		bl	CyExitCriticalSection
 112              	.LVL4:
 113              	.LVL5:
 114              		.loc 1 454 0
 115 001a 10BD     		pop	{r4, pc}
 116              	.L9:
 117              		.align	2
 118              	.L8:
 119 001c 28000340 		.word	1073938472
 120              		.cfi_endproc
 121              	.LFE2:
 122              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 123              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 124              		.align	1
 125              		.global	CySysEnablePumpClock
 126              		.code	16
 127              		.thumb_func
 128              		.type	CySysEnablePumpClock, %function
 129              	CySysEnablePumpClock:
 130              	.LFB3:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 131              		.loc 1 474 0
 132              		.cfi_startproc
 133              	.LVL6:
 134 0000 10B5     		push	{r4, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 138 0002 094B     		ldr	r3, .L15
 139 0004 094C     		ldr	r4, .L15+4
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 12


 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 140              		.loc 1 487 0
 141 0006 C207     		lsl	r2, r0, #31
 142 0008 04D5     		bpl	.L11
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 143              		.loc 1 489 0
 144 000a 2268     		ldr	r2, [r4]
 145 000c 1968     		ldr	r1, [r3]
 146 000e 1201     		lsl	r2, r2, #4
 147 0010 0A43     		orr	r2, r1
 148 0012 06E0     		b	.L13
 149              	.L11:
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 150              		.loc 1 495 0
 151 0014 3021     		mov	r1, #48
 493:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 152              		.loc 1 493 0
 153 0016 1A68     		ldr	r2, [r3]
 154 0018 9206     		lsl	r2, r2, #26
 155 001a 920F     		lsr	r2, r2, #30
 156 001c 2260     		str	r2, [r4]
 157              		.loc 1 495 0
 158 001e 1A68     		ldr	r2, [r3]
 159 0020 8A43     		bic	r2, r1
 160              	.L13:
 161 0022 1A60     		str	r2, [r3]
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 162              		.loc 1 498 0
 163              		@ sp needed
 164 0024 10BD     		pop	{r4, pc}
 165              	.L16:
 166 0026 C046     		.align	2
 167              	.L15:
 168 0028 28000340 		.word	1073938472
 169 002c 00000000 		.word	.LANCHOR0
 170              		.cfi_endproc
 171              	.LFE3:
 172              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 173              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 174              		.align	1
 175              		.global	CySysClkGetSysclkSource
 176              		.code	16
 177              		.thumb_func
 178              		.type	CySysClkGetSysclkSource, %function
 179              	CySysClkGetSysclkSource:
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 13


 180              	.LFB4:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 181              		.loc 1 511 0
 182              		.cfi_startproc
 183 0000 10B5     		push	{r4, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 187              		.loc 1 515 0
 188 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 189              	.LVL7:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 190              		.loc 1 525 0
 191 0006 034B     		ldr	r3, .L18
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 192              		.loc 1 531 0
 193              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 194              		.loc 1 525 0
 195 0008 1C68     		ldr	r4, [r3]
 196              	.LVL8:
 528:Generated_Source\PSoC4/CyLib.c **** 
 197              		.loc 1 528 0
 198 000a FFF7FEFF 		bl	CyExitCriticalSection
 199              	.LVL9:
 525:Generated_Source\PSoC4/CyLib.c ****     }
 200              		.loc 1 525 0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 14


 201 000e 0320     		mov	r0, #3
 202 0010 2040     		and	r0, r4
 203              	.LVL10:
 204              		.loc 1 531 0
 205 0012 10BD     		pop	{r4, pc}
 206              	.L19:
 207              		.align	2
 208              	.L18:
 209 0014 28000340 		.word	1073938472
 210              		.cfi_endproc
 211              	.LFE4:
 212              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 213              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 214              		.align	1
 215              		.global	CySysClkWriteSysclkDiv
 216              		.code	16
 217              		.thumb_func
 218              		.type	CySysClkWriteSysclkDiv, %function
 219              	CySysClkWriteSysclkDiv:
 220              	.LFB5:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 221              		.loc 1 566 0
 222              		.cfi_startproc
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 15


 223              	.LVL11:
 224 0000 38B5     		push	{r3, r4, r5, lr}
 225              		.cfi_def_cfa_offset 16
 226              		.cfi_offset 3, -16
 227              		.cfi_offset 4, -12
 228              		.cfi_offset 5, -8
 229              		.cfi_offset 14, -4
 230              		.loc 1 566 0
 231 0002 041C     		mov	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 232              		.loc 1 569 0
 233 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 234              	.LVL12:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 235              		.loc 1 571 0
 236 0008 FF21     		mov	r1, #255
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 237              		.loc 1 573 0
 238 000a 054D     		ldr	r5, .L21
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 239              		.loc 1 571 0
 240 000c A301     		lsl	r3, r4, #6
 241              		.loc 1 573 0
 242 000e 2A68     		ldr	r2, [r5]
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 243              		.loc 1 571 0
 244 0010 0B40     		and	r3, r1
 245              		.loc 1 573 0
 246 0012 3F39     		sub	r1, r1, #63
 247 0014 8A43     		bic	r2, r1
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 248              		.loc 1 572 0
 249 0016 1343     		orr	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 250              		.loc 1 571 0
 251 0018 2B60     		str	r3, [r5]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 252              		.loc 1 576 0
 253 001a FFF7FEFF 		bl	CyExitCriticalSection
 254              	.LVL13:
 577:Generated_Source\PSoC4/CyLib.c **** }
 255              		.loc 1 577 0
 256              		@ sp needed
 257              	.LVL14:
 258 001e 38BD     		pop	{r3, r4, r5, pc}
 259              	.L22:
 260              		.align	2
 261              	.L21:
 262 0020 28000340 		.word	1073938472
 263              		.cfi_endproc
 264              	.LFE5:
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 16


 265              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 266              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 267              		.align	1
 268              		.global	CySysClkWriteImoFreq
 269              		.code	16
 270              		.thumb_func
 271              		.type	CySysClkWriteImoFreq, %function
 272              	CySysClkWriteImoFreq:
 273              	.LFB6:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 17


 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 18


 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 19


 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 20


 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 274              		.loc 1 829 0
 275              		.cfi_startproc
 276              	.LVL15:
 277 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 278              		.cfi_def_cfa_offset 24
 279              		.cfi_offset 3, -24
 280              		.cfi_offset 4, -20
 281              		.cfi_offset 5, -16
 282              		.cfi_offset 6, -12
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 21


 285              		.loc 1 842 0
 286 0002 1828     		cmp	r0, #24
 287 0004 04D0     		beq	.L24
 288              		.loc 1 842 0 is_stmt 0 discriminator 1
 289 0006 1023     		mov	r3, #16
 290 0008 021C     		mov	r2, r0
 291 000a 9A43     		bic	r2, r3
 292 000c 202A     		cmp	r2, #32
 293 000e 36D1     		bne	.L23
 294              	.L24:
 295 0010 041C     		mov	r4, r0
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 296              		.loc 1 851 0 is_stmt 1
 297 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 298              	.LVL16:
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 299              		.loc 1 882 0
 300 0016 0726     		mov	r6, #7
 851:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 22


 301              		.loc 1 851 0
 302 0018 071C     		mov	r7, r0
 303              	.LVL17:
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 304              		.loc 1 909 0
 305 001a 7F20     		mov	r0, #127
 882:Generated_Source\PSoC4/CyLib.c **** 
 306              		.loc 1 882 0
 307 001c 184D     		ldr	r5, .L30
 902:Generated_Source\PSoC4/CyLib.c **** 
 308              		.loc 1 902 0
 309 001e 194A     		ldr	r2, .L30+4
 882:Generated_Source\PSoC4/CyLib.c **** 
 310              		.loc 1 882 0
 311 0020 2B68     		ldr	r3, [r5]
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 312              		.loc 1 908 0
 313 0022 1949     		ldr	r1, .L30+8
 882:Generated_Source\PSoC4/CyLib.c **** 
 314              		.loc 1 882 0
 315 0024 B343     		bic	r3, r6
 316 0026 2B60     		str	r3, [r5]
 900:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 317              		.loc 1 900 0
 318 0028 184B     		ldr	r3, .L30+12
 319 002a E318     		add	r3, r4, r3
 320 002c 1B78     		ldrb	r3, [r3]
 321 002e DBB2     		uxtb	r3, r3
 322              	.LVL18:
 902:Generated_Source\PSoC4/CyLib.c **** 
 323              		.loc 1 902 0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 23


 324 0030 1360     		str	r3, [r2]
 905:Generated_Source\PSoC4/CyLib.c **** 
 325              		.loc 1 905 0
 326 0032 174A     		ldr	r2, .L30+16
 327 0034 1368     		ldr	r3, [r2]
 328              	.LVL19:
 329 0036 B343     		bic	r3, r6
 330 0038 1360     		str	r3, [r2]
 331              	.LVL20:
 332              		.loc 1 909 0
 333 003a 164A     		ldr	r2, .L30+20
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 334              		.loc 1 908 0
 335 003c 0B68     		ldr	r3, [r1]
 336              		.loc 1 909 0
 337 003e A218     		add	r2, r4, r2
 338 0040 1278     		ldrb	r2, [r2]
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 339              		.loc 1 908 0
 340 0042 8343     		bic	r3, r0
 341              		.loc 1 909 0
 342 0044 0240     		and	r2, r0
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 343              		.loc 1 908 0
 344 0046 1343     		orr	r3, r2
 345 0048 0B60     		str	r3, [r1]
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 346              		.loc 1 911 0
 347 004a 4D38     		sub	r0, r0, #77
 348 004c FFF7FEFF 		bl	CyDelayCycles
 349              	.LVL21:
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 350              		.loc 1 913 0
 351 0050 182C     		cmp	r4, #24
 352 0052 11D9     		bls	.L26
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 353              		.loc 1 917 0
 354 0054 231C     		mov	r3, r4
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 355              		.loc 1 916 0
 356 0056 2A68     		ldr	r2, [r5]
 357              		.loc 1 917 0
 358 0058 1C3B     		sub	r3, r3, #28
 359 005a 9B08     		lsr	r3, r3, #2
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 360              		.loc 1 916 0
 361 005c B243     		bic	r2, r6
 362              		.loc 1 917 0
 363 005e 3340     		and	r3, r6
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 364              		.loc 1 916 0
 365 0060 1343     		orr	r3, r2
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 24


 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 366              		.loc 1 919 0
 367 0062 3220     		mov	r0, #50
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 368              		.loc 1 916 0
 369 0064 2B60     		str	r3, [r5]
 370              		.loc 1 919 0
 371 0066 FFF7FEFF 		bl	CyDelayCycles
 372              	.LVL22:
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 373              		.loc 1 924 0
 374 006a 183C     		sub	r4, r4, #24
 375              	.LVL23:
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 376              		.loc 1 923 0
 377 006c 2868     		ldr	r0, [r5]
 378              		.loc 1 924 0
 379 006e A408     		lsr	r4, r4, #2
 380              	.LVL24:
 381 0070 3440     		and	r4, r6
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 382              		.loc 1 923 0
 383 0072 B043     		bic	r0, r6
 384 0074 0443     		orr	r4, r0
 385 0076 2C60     		str	r4, [r5]
 386              	.L26:
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 387              		.loc 1 942 0
 388 0078 381C     		mov	r0, r7
 389 007a FFF7FEFF 		bl	CyExitCriticalSection
 390              	.LVL25:
 391              	.L23:
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 25


 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 392              		.loc 1 949 0
 393              		@ sp needed
 394 007e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 395              	.L31:
 396              		.align	2
 397              	.L30:
 398 0080 080F0340 		.word	1073942280
 399 0084 0C0F0340 		.word	1073942284
 400 0088 180F0340 		.word	1073942296
 401 008c CDF1FF0F 		.word	268431821
 402 0090 100F0340 		.word	1073942288
 403 0094 B4F1FF0F 		.word	268431796
 404              		.cfi_endproc
 405              	.LFE6:
 406              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 407              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 408              		.align	1
 409              		.global	CySysClkWriteHfclkDiv
 410              		.code	16
 411              		.thumb_func
 412              		.type	CySysClkWriteHfclkDiv, %function
 413              	CySysClkWriteHfclkDiv:
 414              	.LFB7:
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 26


 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 415              		.loc 1 982 0
 416              		.cfi_startproc
 417              	.LVL26:
 418 0000 10B5     		push	{r4, lr}
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
 422              		.loc 1 982 0
 423 0002 041C     		mov	r4, r0
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 424              		.loc 1 985 0
 425 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 426              	.LVL27:
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 427              		.loc 1 989 0
 428 0008 0323     		mov	r3, #3
 429 000a 2340     		and	r3, r4
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 430              		.loc 1 987 0
 431 000c 0C24     		mov	r4, #12
 432              	.LVL28:
 433 000e 0449     		ldr	r1, .L33
 434              		.loc 1 989 0
 435 0010 9B00     		lsl	r3, r3, #2
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 436              		.loc 1 987 0
 437 0012 0A68     		ldr	r2, [r1]
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 438              		.loc 1 992 0
 439              		@ sp needed
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 440              		.loc 1 987 0
 441 0014 A243     		bic	r2, r4
 988:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 442              		.loc 1 988 0
 443 0016 1343     		orr	r3, r2
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 444              		.loc 1 987 0
 445 0018 0B60     		str	r3, [r1]
 991:Generated_Source\PSoC4/CyLib.c ****     }
 446              		.loc 1 991 0
 447 001a FFF7FEFF 		bl	CyExitCriticalSection
 448              	.LVL29:
 449              		.loc 1 992 0
 450 001e 10BD     		pop	{r4, pc}
 451              	.L34:
 452              		.align	2
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 27


 453              	.L33:
 454 0020 28000340 		.word	1073938472
 455              		.cfi_endproc
 456              	.LFE7:
 457              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 458              		.section	.text.CySysGetResetReason,"ax",%progbits
 459              		.align	1
 460              		.global	CySysGetResetReason
 461              		.code	16
 462              		.thumb_func
 463              		.type	CySysGetResetReason, %function
 464              	CySysGetResetReason:
 465              	.LFB8:
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 28


1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 29


1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 30


1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 31


1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 32


1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 33


1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 34


1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 35


1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 36


1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 37


1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 38


1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 39


1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 40


1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 41


1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 42


1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 43


1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 44


1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 45


2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 46


2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 47


2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2169:Generated_Source\PSoC4/CyLib.c ****     }
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 48


2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2185:Generated_Source\PSoC4/CyLib.c ****     }
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 466              		.loc 1 2209 0
 467              		.cfi_startproc
 468              	.LVL30:
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 469              		.loc 1 2212 0
 470 0000 1923     		mov	r3, #25
 471 0002 021C     		mov	r2, r0
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 472              		.loc 1 2213 0
 473 0004 0249     		ldr	r1, .L36
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 474              		.loc 1 2212 0
 475 0006 1A40     		and	r2, r3
 476              	.LVL31:
 477              		.loc 1 2213 0
 478 0008 0868     		ldr	r0, [r1]
 479              	.LVL32:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 49


 480              		.loc 1 2218 0
 481              		@ sp needed
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 482              		.loc 1 2213 0
 483 000a 1840     		and	r0, r3
 484              	.LVL33:
2215:Generated_Source\PSoC4/CyLib.c **** 
 485              		.loc 1 2215 0
 486 000c 0A60     		str	r2, [r1]
 487              		.loc 1 2218 0
 488 000e 7047     		bx	lr
 489              	.L37:
 490              		.align	2
 491              	.L36:
 492 0010 54000340 		.word	1073938516
 493              		.cfi_endproc
 494              	.LFE8:
 495              		.size	CySysGetResetReason, .-CySysGetResetReason
 496              		.section	.text.CyDisableInts,"ax",%progbits
 497              		.align	1
 498              		.global	CyDisableInts
 499              		.code	16
 500              		.thumb_func
 501              		.type	CyDisableInts, %function
 502              	CyDisableInts:
 503              	.LFB9:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 504              		.loc 1 2232 0
 505              		.cfi_startproc
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 506              		.loc 1 2239 0
 507 0000 0122     		mov	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 508              		.loc 1 2236 0
 509 0002 024B     		ldr	r3, .L39
 510              		.loc 1 2239 0
 511 0004 5242     		neg	r2, r2
2236:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 50


 512              		.loc 1 2236 0
 513 0006 1868     		ldr	r0, [r3]
 514              	.LVL34:
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 515              		.loc 1 2242 0
 516              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
 517              		.loc 1 2239 0
 518 0008 1A60     		str	r2, [r3]
 519              		.loc 1 2242 0
 520 000a 7047     		bx	lr
 521              	.L40:
 522              		.align	2
 523              	.L39:
 524 000c 80E100E0 		.word	-536813184
 525              		.cfi_endproc
 526              	.LFE9:
 527              		.size	CyDisableInts, .-CyDisableInts
 528              		.section	.text.CyEnableInts,"ax",%progbits
 529              		.align	1
 530              		.global	CyEnableInts
 531              		.code	16
 532              		.thumb_func
 533              		.type	CyEnableInts, %function
 534              	CyEnableInts:
 535              	.LFB10:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 536              		.loc 1 2255 0
 537              		.cfi_startproc
 538              	.LVL35:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 539              		.loc 1 2256 0
 540 0000 014B     		ldr	r3, .L42
2257:Generated_Source\PSoC4/CyLib.c **** }
 541              		.loc 1 2257 0
 542              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 543              		.loc 1 2256 0
 544 0002 1860     		str	r0, [r3]
 545              		.loc 1 2257 0
 546 0004 7047     		bx	lr
 547              	.L43:
 548 0006 C046     		.align	2
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 51


 549              	.L42:
 550 0008 00E100E0 		.word	-536813312
 551              		.cfi_endproc
 552              	.LFE10:
 553              		.size	CyEnableInts, .-CyEnableInts
 554              		.section	.text.CyIntSetSysVector,"ax",%progbits
 555              		.align	1
 556              		.global	CyIntSetSysVector
 557              		.code	16
 558              		.thumb_func
 559              		.type	CyIntSetSysVector, %function
 560              	CyIntSetSysVector:
 561              	.LFB11:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 562              		.loc 1 2280 0
 563              		.cfi_startproc
 564              	.LVL36:
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 565              		.loc 1 2287 0
 566 0000 8023     		mov	r3, #128
 567 0002 8000     		lsl	r0, r0, #2
 568              	.LVL37:
 569 0004 9B05     		lsl	r3, r3, #22
 570 0006 C318     		add	r3, r0, r3
 571 0008 1868     		ldr	r0, [r3]
 572              	.LVL38:
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 52


2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
 573              		.loc 1 2293 0
 574              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 575              		.loc 1 2290 0
 576 000a 1960     		str	r1, [r3]
 577              		.loc 1 2293 0
 578 000c 7047     		bx	lr
 579              		.cfi_endproc
 580              	.LFE11:
 581              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 582              		.section	.text.CyIntGetSysVector,"ax",%progbits
 583              		.align	1
 584              		.global	CyIntGetSysVector
 585              		.code	16
 586              		.thumb_func
 587              		.type	CyIntGetSysVector, %function
 588              	CyIntGetSysVector:
 589              	.LFB12:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 590              		.loc 1 2314 0
 591              		.cfi_startproc
 592              	.LVL39:
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 593              		.loc 1 2319 0
 594 0000 8023     		mov	r3, #128
 595 0002 8000     		lsl	r0, r0, #2
 596              	.LVL40:
 597 0004 9B05     		lsl	r3, r3, #22
 598 0006 C018     		add	r0, r0, r3
 599 0008 0068     		ldr	r0, [r0]
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 53


2320:Generated_Source\PSoC4/CyLib.c **** }
 600              		.loc 1 2320 0
 601              		@ sp needed
 602 000a 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE12:
 605              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 606              		.section	.text.CyIntSetVector,"ax",%progbits
 607              		.align	1
 608              		.global	CyIntSetVector
 609              		.code	16
 610              		.thumb_func
 611              		.type	CyIntSetVector, %function
 612              	CyIntSetVector:
 613              	.LFB13:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 614              		.loc 1 2336 0
 615              		.cfi_startproc
 616              	.LVL41:
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 617              		.loc 1 2343 0
 618 0000 024B     		ldr	r3, .L47
 619 0002 8000     		lsl	r0, r0, #2
 620              	.LVL42:
 621 0004 C318     		add	r3, r0, r3
 622 0006 1868     		ldr	r0, [r3]
 623              	.LVL43:
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
 624              		.loc 1 2349 0
 625              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 54


 626              		.loc 1 2346 0
 627 0008 1960     		str	r1, [r3]
 628              		.loc 1 2349 0
 629 000a 7047     		bx	lr
 630              	.L48:
 631              		.align	2
 632              	.L47:
 633 000c 40000020 		.word	536870976
 634              		.cfi_endproc
 635              	.LFE13:
 636              		.size	CyIntSetVector, .-CyIntSetVector
 637              		.section	.text.CyIntGetVector,"ax",%progbits
 638              		.align	1
 639              		.global	CyIntGetVector
 640              		.code	16
 641              		.thumb_func
 642              		.type	CyIntGetVector, %function
 643              	CyIntGetVector:
 644              	.LFB14:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 645              		.loc 1 2364 0
 646              		.cfi_startproc
 647              	.LVL44:
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 648              		.loc 1 2369 0
 649 0000 024B     		ldr	r3, .L50
 650 0002 8000     		lsl	r0, r0, #2
 651              	.LVL45:
 652 0004 C018     		add	r0, r0, r3
 653 0006 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** }
 654              		.loc 1 2370 0
 655              		@ sp needed
 656 0008 7047     		bx	lr
 657              	.L51:
 658 000a C046     		.align	2
 659              	.L50:
 660 000c 40000020 		.word	536870976
 661              		.cfi_endproc
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 55


 662              	.LFE14:
 663              		.size	CyIntGetVector, .-CyIntGetVector
 664              		.section	.text.CyIntSetPriority,"ax",%progbits
 665              		.align	1
 666              		.global	CyIntSetPriority
 667              		.code	16
 668              		.thumb_func
 669              		.type	CyIntSetPriority, %function
 670              	CyIntSetPriority:
 671              	.LFB15:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 672              		.loc 1 2383 0
 673              		.cfi_startproc
 674              	.LVL46:
 675 0000 38B5     		push	{r3, r4, r5, lr}
 676              		.cfi_def_cfa_offset 16
 677              		.cfi_offset 3, -16
 678              		.cfi_offset 4, -12
 679              		.cfi_offset 5, -8
 680              		.cfi_offset 14, -4
 681              		.loc 1 2383 0
 682 0002 041C     		mov	r4, r0
 683              	.LVL47:
 684 0004 0D1C     		mov	r5, r1
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 685              		.loc 1 2393 0
 686 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 687              	.LVL48:
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 688              		.loc 1 2395 0
 689 000a A308     		lsr	r3, r4, #2
 690 000c 074A     		ldr	r2, .L53
 691 000e 9B00     		lsl	r3, r3, #2
 692 0010 9B18     		add	r3, r3, r2
2391:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 56


 693              		.loc 1 2391 0
 694 0012 0322     		mov	r2, #3
 695 0014 1440     		and	r4, r2
 696              	.LVL49:
 697 0016 9440     		lsl	r4, r4, r2
 698 0018 0634     		add	r4, r4, #6
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 699              		.loc 1 2396 0
 700 001a A240     		lsl	r2, r2, r4
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 701              		.loc 1 2397 0
 702 001c A540     		lsl	r5, r5, r4
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 703              		.loc 1 2395 0
 704 001e 1968     		ldr	r1, [r3]
 705              	.LVL50:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
 706              		.loc 1 2401 0
 707              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 708              		.loc 1 2396 0
 709 0020 9143     		bic	r1, r2
 710              	.LVL51:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 711              		.loc 1 2397 0
 712 0022 2943     		orr	r1, r5
 713              	.LVL52:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 714              		.loc 1 2398 0
 715 0024 1960     		str	r1, [r3]
2400:Generated_Source\PSoC4/CyLib.c **** }
 716              		.loc 1 2400 0
 717 0026 FFF7FEFF 		bl	CyExitCriticalSection
 718              	.LVL53:
 719              		.loc 1 2401 0
 720 002a 38BD     		pop	{r3, r4, r5, pc}
 721              	.L54:
 722              		.align	2
 723              	.L53:
 724 002c 00E400E0 		.word	-536812544
 725              		.cfi_endproc
 726              	.LFE15:
 727              		.size	CyIntSetPriority, .-CyIntSetPriority
 728              		.section	.text.CyIntGetPriority,"ax",%progbits
 729              		.align	1
 730              		.global	CyIntGetPriority
 731              		.code	16
 732              		.thumb_func
 733              		.type	CyIntGetPriority, %function
 734              	CyIntGetPriority:
 735              	.LFB16:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 57


2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 736              		.loc 1 2417 0
 737              		.cfi_startproc
 738              	.LVL54:
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 739              		.loc 1 2422 0
 740 0000 8308     		lsr	r3, r0, #2
 741 0002 064A     		ldr	r2, .L56
 742 0004 9B00     		lsl	r3, r3, #2
 743 0006 9B18     		add	r3, r3, r2
 744 0008 1968     		ldr	r1, [r3]
 745              	.LVL55:
 746 000a 0322     		mov	r2, #3
 747 000c 031C     		mov	r3, r0
 748 000e 1340     		and	r3, r2
 749 0010 9340     		lsl	r3, r3, r2
 750 0012 0633     		add	r3, r3, #6
 751 0014 D940     		lsr	r1, r1, r3
 752              	.LVL56:
 753 0016 081C     		mov	r0, r1
 754              	.LVL57:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
 755              		.loc 1 2425 0
 756              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 757              		.loc 1 2424 0
 758 0018 1040     		and	r0, r2
 759              		.loc 1 2425 0
 760 001a 7047     		bx	lr
 761              	.L57:
 762              		.align	2
 763              	.L56:
 764 001c 00E400E0 		.word	-536812544
 765              		.cfi_endproc
 766              	.LFE16:
 767              		.size	CyIntGetPriority, .-CyIntGetPriority
 768              		.section	.text.CyIntEnable,"ax",%progbits
 769              		.align	1
 770              		.global	CyIntEnable
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 58


 771              		.code	16
 772              		.thumb_func
 773              		.type	CyIntEnable, %function
 774              	CyIntEnable:
 775              	.LFB17:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 776              		.loc 1 2438 0
 777              		.cfi_startproc
 778              	.LVL58:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 779              		.loc 1 2439 0
 780 0000 1F23     		mov	r3, #31
 781 0002 1840     		and	r0, r3
 782              	.LVL59:
 783 0004 1E3B     		sub	r3, r3, #30
 784 0006 8340     		lsl	r3, r3, r0
 785 0008 181C     		mov	r0, r3
 786 000a 014B     		ldr	r3, .L59
2440:Generated_Source\PSoC4/CyLib.c **** }
 787              		.loc 1 2440 0
 788              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 789              		.loc 1 2439 0
 790 000c 1860     		str	r0, [r3]
 791              		.loc 1 2440 0
 792 000e 7047     		bx	lr
 793              	.L60:
 794              		.align	2
 795              	.L59:
 796 0010 00E100E0 		.word	-536813312
 797              		.cfi_endproc
 798              	.LFE17:
 799              		.size	CyIntEnable, .-CyIntEnable
 800              		.section	.text.CyIntGetState,"ax",%progbits
 801              		.align	1
 802              		.global	CyIntGetState
 803              		.code	16
 804              		.thumb_func
 805              		.type	CyIntGetState, %function
 806              	CyIntGetState:
 807              	.LFB18:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 59


2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 808              		.loc 1 2456 0
 809              		.cfi_startproc
 810              	.LVL60:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 811              		.loc 1 2458 0
 812 0000 1F22     		mov	r2, #31
 813 0002 044B     		ldr	r3, .L62
 814 0004 1040     		and	r0, r2
 815              	.LVL61:
 816 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** }
 817              		.loc 1 2459 0
 818              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 819              		.loc 1 2458 0
 820 0008 C340     		lsr	r3, r3, r0
 821 000a 181C     		mov	r0, r3
 822 000c 0123     		mov	r3, #1
 823 000e 1840     		and	r0, r3
 824              		.loc 1 2459 0
 825 0010 7047     		bx	lr
 826              	.L63:
 827 0012 C046     		.align	2
 828              	.L62:
 829 0014 00E100E0 		.word	-536813312
 830              		.cfi_endproc
 831              	.LFE18:
 832              		.size	CyIntGetState, .-CyIntGetState
 833              		.section	.text.CyIntDisable,"ax",%progbits
 834              		.align	1
 835              		.global	CyIntDisable
 836              		.code	16
 837              		.thumb_func
 838              		.type	CyIntDisable, %function
 839              	CyIntDisable:
 840              	.LFB19:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 60


2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 841              		.loc 1 2472 0
 842              		.cfi_startproc
 843              	.LVL62:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 844              		.loc 1 2473 0
 845 0000 1F23     		mov	r3, #31
 846 0002 1840     		and	r0, r3
 847              	.LVL63:
 848 0004 1E3B     		sub	r3, r3, #30
 849 0006 8340     		lsl	r3, r3, r0
 850 0008 181C     		mov	r0, r3
 851 000a 014B     		ldr	r3, .L65
2474:Generated_Source\PSoC4/CyLib.c **** }
 852              		.loc 1 2474 0
 853              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 854              		.loc 1 2473 0
 855 000c 1860     		str	r0, [r3]
 856              		.loc 1 2474 0
 857 000e 7047     		bx	lr
 858              	.L66:
 859              		.align	2
 860              	.L65:
 861 0010 80E100E0 		.word	-536813184
 862              		.cfi_endproc
 863              	.LFE19:
 864              		.size	CyIntDisable, .-CyIntDisable
 865              		.section	.text.CyIntSetPending,"ax",%progbits
 866              		.align	1
 867              		.global	CyIntSetPending
 868              		.code	16
 869              		.thumb_func
 870              		.type	CyIntSetPending, %function
 871              	CyIntSetPending:
 872              	.LFB20:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 873              		.loc 1 2486 0
 874              		.cfi_startproc
 875              	.LVL64:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 876              		.loc 1 2487 0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 61


 877 0000 1F23     		mov	r3, #31
 878 0002 1840     		and	r0, r3
 879              	.LVL65:
 880 0004 1E3B     		sub	r3, r3, #30
 881 0006 8340     		lsl	r3, r3, r0
 882 0008 181C     		mov	r0, r3
 883 000a 014B     		ldr	r3, .L68
2488:Generated_Source\PSoC4/CyLib.c **** }
 884              		.loc 1 2488 0
 885              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 886              		.loc 1 2487 0
 887 000c 1860     		str	r0, [r3]
 888              		.loc 1 2488 0
 889 000e 7047     		bx	lr
 890              	.L69:
 891              		.align	2
 892              	.L68:
 893 0010 00E200E0 		.word	-536813056
 894              		.cfi_endproc
 895              	.LFE20:
 896              		.size	CyIntSetPending, .-CyIntSetPending
 897              		.section	.text.CyIntClearPending,"ax",%progbits
 898              		.align	1
 899              		.global	CyIntClearPending
 900              		.code	16
 901              		.thumb_func
 902              		.type	CyIntClearPending, %function
 903              	CyIntClearPending:
 904              	.LFB21:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 905              		.loc 1 2501 0
 906              		.cfi_startproc
 907              	.LVL66:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 908              		.loc 1 2502 0
 909 0000 1F23     		mov	r3, #31
 910 0002 1840     		and	r0, r3
 911              	.LVL67:
 912 0004 1E3B     		sub	r3, r3, #30
 913 0006 8340     		lsl	r3, r3, r0
 914 0008 181C     		mov	r0, r3
 915 000a 014B     		ldr	r3, .L71
2503:Generated_Source\PSoC4/CyLib.c **** }
 916              		.loc 1 2503 0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 62


 917              		@ sp needed
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 918              		.loc 1 2502 0
 919 000c 1860     		str	r0, [r3]
 920              		.loc 1 2503 0
 921 000e 7047     		bx	lr
 922              	.L72:
 923              		.align	2
 924              	.L71:
 925 0010 80E200E0 		.word	-536812928
 926              		.cfi_endproc
 927              	.LFE21:
 928              		.size	CyIntClearPending, .-CyIntClearPending
 929              		.section	.text.CyHalt,"ax",%progbits
 930              		.align	1
 931              		.global	CyHalt
 932              		.code	16
 933              		.thumb_func
 934              		.type	CyHalt, %function
 935              	CyHalt:
 936              	.LFB22:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 937              		.loc 1 2516 0
 938              		.cfi_startproc
 939              	.LVL68:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 940              		.loc 1 2525 0
 941              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 942 0000 01BE     		    bkpt    1
 943              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 944              		.loc 1 2529 0
 945              		.code	16
 946              		@ sp needed
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 63


 947 0002 7047     		bx	lr
 948              		.cfi_endproc
 949              	.LFE22:
 950              		.size	CyHalt, .-CyHalt
 951              		.section	.text.CySoftwareReset,"ax",%progbits
 952              		.align	1
 953              		.global	CySoftwareReset
 954              		.code	16
 955              		.thumb_func
 956              		.type	CySoftwareReset, %function
 957              	CySoftwareReset:
 958              	.LFB23:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 959              		.loc 1 2540 0
 960              		.cfi_startproc
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 961              		.loc 1 2545 0
 962 0000 034A     		ldr	r2, .L75
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 963              		.loc 1 2546 0
 964 0002 0449     		ldr	r1, .L75+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 965              		.loc 1 2545 0
 966 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 967              		.loc 1 2547 0
 968              		@ sp needed
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 969              		.loc 1 2545 0
 970 0006 9BB2     		uxth	r3, r3
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 971              		.loc 1 2546 0
 972 0008 0B43     		orr	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 973              		.loc 1 2545 0
 974 000a 1360     		str	r3, [r2]
 975              		.loc 1 2547 0
 976 000c 7047     		bx	lr
 977              	.L76:
 978 000e C046     		.align	2
 979              	.L75:
 980 0010 0CED00E0 		.word	-536810228
 981 0014 0400FA05 		.word	100270084
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 64


 982              		.cfi_endproc
 983              	.LFE23:
 984              		.size	CySoftwareReset, .-CySoftwareReset
 985              		.section	.text.CyDelay,"ax",%progbits
 986              		.align	1
 987              		.global	CyDelay
 988              		.code	16
 989              		.thumb_func
 990              		.type	CyDelay, %function
 991              	CyDelay:
 992              	.LFB24:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 993              		.loc 1 2560 0
 994              		.cfi_startproc
 995              	.LVL69:
 996 0000 10B5     		push	{r4, lr}
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 4, -8
 999              		.cfi_offset 14, -4
 1000 0002 041C     		mov	r4, r0
 1001              	.LVL70:
 1002              	.L78:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1003              		.loc 1 2561 0
 1004 0004 8022     		mov	r2, #128
 1005 0006 074B     		ldr	r3, .L81
 1006 0008 1202     		lsl	r2, r2, #8
 1007 000a 9442     		cmp	r4, r2
 1008 000c 05D9     		bls	.L80
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1009              		.loc 1 2566 0
 1010 000e 5868     		ldr	r0, [r3, #4]
 1011 0010 FFF7FEFF 		bl	CyDelayCycles
 1012              	.LVL71:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1013              		.loc 1 2567 0
 1014 0014 044B     		ldr	r3, .L81+4
 1015 0016 E418     		add	r4, r4, r3
 1016              	.LVL72:
 1017 0018 F4E7     		b	.L78
 1018              	.L80:
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 65


2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1019              		.loc 1 2570 0
 1020 001a 9868     		ldr	r0, [r3, #8]
2571:Generated_Source\PSoC4/CyLib.c **** }
 1021              		.loc 1 2571 0
 1022              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 1023              		.loc 1 2570 0
 1024 001c 6043     		mul	r0, r4
 1025 001e FFF7FEFF 		bl	CyDelayCycles
 1026              	.LVL73:
 1027              	.LVL74:
 1028              		.loc 1 2571 0
 1029 0022 10BD     		pop	{r4, pc}
 1030              	.L82:
 1031              		.align	2
 1032              	.L81:
 1033 0024 00000000 		.word	.LANCHOR0
 1034 0028 0080FFFF 		.word	-32768
 1035              		.cfi_endproc
 1036              	.LFE24:
 1037              		.size	CyDelay, .-CyDelay
 1038              		.section	.text.CyDelayUs,"ax",%progbits
 1039              		.align	1
 1040              		.global	CyDelayUs
 1041              		.code	16
 1042              		.thumb_func
 1043              		.type	CyDelayUs, %function
 1044              	CyDelayUs:
 1045              	.LFB25:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1046              		.loc 1 2583 0
 1047              		.cfi_startproc
 1048              	.LVL75:
 1049 0000 08B5     		push	{r3, lr}
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 3, -8
 1052              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1053              		.loc 1 2584 0
 1054 0002 034B     		ldr	r3, .L84
2585:Generated_Source\PSoC4/CyLib.c **** }
 1055              		.loc 1 2585 0
 1056              		@ sp needed
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 66


2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1057              		.loc 1 2584 0
 1058 0004 1B7B     		ldrb	r3, [r3, #12]
 1059 0006 5843     		mul	r0, r3
 1060              	.LVL76:
 1061 0008 FFF7FEFF 		bl	CyDelayCycles
 1062              	.LVL77:
 1063              		.loc 1 2585 0
 1064 000c 08BD     		pop	{r3, pc}
 1065              	.L85:
 1066 000e C046     		.align	2
 1067              	.L84:
 1068 0010 00000000 		.word	.LANCHOR0
 1069              		.cfi_endproc
 1070              	.LFE25:
 1071              		.size	CyDelayUs, .-CyDelayUs
 1072              		.global	__aeabi_uidiv
 1073              		.section	.text.CyDelayFreq,"ax",%progbits
 1074              		.align	1
 1075              		.global	CyDelayFreq
 1076              		.code	16
 1077              		.thumb_func
 1078              		.type	CyDelayFreq, %function
 1079              	CyDelayFreq:
 1080              	.LFB26:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1081              		.loc 1 2597 0
 1082              		.cfi_startproc
 1083              	.LVL78:
 1084 0000 38B5     		push	{r3, r4, r5, lr}
 1085              		.cfi_def_cfa_offset 16
 1086              		.cfi_offset 3, -16
 1087              		.cfi_offset 4, -12
 1088              		.cfi_offset 5, -8
 1089              		.cfi_offset 14, -4
 1090 0002 0C4C     		ldr	r4, .L89
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1091              		.loc 1 2598 0
 1092 0004 0028     		cmp	r0, #0
 1093 0006 01D0     		beq	.L87
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1094              		.loc 1 2600 0
 1095 0008 2061     		str	r0, [r4, #16]
 1096 000a 01E0     		b	.L88
 1097              	.L87:
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 67


2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1098              		.loc 1 2604 0
 1099 000c 0A4B     		ldr	r3, .L89+4
 1100 000e 2361     		str	r3, [r4, #16]
 1101              	.L88:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1102              		.loc 1 2607 0
 1103 0010 2569     		ldr	r5, [r4, #16]
 1104 0012 0A4B     		ldr	r3, .L89+8
 1105 0014 0A49     		ldr	r1, .L89+12
 1106 0016 E818     		add	r0, r5, r3
 1107              	.LVL79:
 1108 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1109              	.LVL80:
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1110              		.loc 1 2608 0
 1111 001c FA21     		mov	r1, #250
 1112 001e 094B     		ldr	r3, .L89+16
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1113              		.loc 1 2607 0
 1114 0020 2073     		strb	r0, [r4, #12]
 1115              		.loc 1 2608 0
 1116 0022 8900     		lsl	r1, r1, #2
 1117 0024 E818     		add	r0, r5, r3
 1118 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1119              	.LVL81:
 1120 002a A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1121              		.loc 1 2609 0
 1122 002c C003     		lsl	r0, r0, #15
 1123 002e 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1124              		.loc 1 2610 0
 1125              		@ sp needed
 1126 0030 38BD     		pop	{r3, r4, r5, pc}
 1127              	.L90:
 1128 0032 C046     		.align	2
 1129              	.L89:
 1130 0034 00000000 		.word	.LANCHOR0
 1131 0038 00127A00 		.word	8000000
 1132 003c 3F420F00 		.word	999999
 1133 0040 40420F00 		.word	1000000
 1134 0044 E7030000 		.word	999
 1135              		.cfi_endproc
 1136              	.LFE26:
 1137              		.size	CyDelayFreq, .-CyDelayFreq
 1138              		.section	.text.CySysTickInit,"ax",%progbits
 1139              		.align	1
 1140              		.global	CySysTickInit
 1141              		.code	16
 1142              		.thumb_func
 1143              		.type	CySysTickInit, %function
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 68


 1144              	CySysTickInit:
 1145              	.LFB28:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 1146              		.loc 1 2658 0
 1147              		.cfi_startproc
 1148              	.LVL82:
 1149 0000 10B5     		push	{r4, lr}
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 4, -8
 1152              		.cfi_offset 14, -4
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 69


2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1153              		.loc 1 2663 0
 1154 0002 0024     		mov	r4, #0
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1155              		.loc 1 2672 0
 1156 0004 FA21     		mov	r1, #250
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1157              		.loc 1 2663 0
 1158 0006 0B4B     		ldr	r3, .L92
 1159              	.LBB14:
 1160              	.LBB15:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1161              		.loc 1 2290 0
 1162 0008 0B4A     		ldr	r2, .L92+4
 1163              	.LBE15:
 1164              	.LBE14:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1165              		.loc 1 2663 0
 1166 000a 1C60     		str	r4, [r3]
 1167              	.LVL83:
 1168 000c 1C61     		str	r4, [r3, #16]
 1169 000e 5C60     		str	r4, [r3, #4]
 1170              	.LVL84:
 1171 0010 9C60     		str	r4, [r3, #8]
 1172              	.LVL85:
 1173 0012 DC60     		str	r4, [r3, #12]
 1174              	.LVL86:
 1175              	.LBB18:
 1176              	.LBB16:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1177              		.loc 1 2290 0
 1178 0014 094B     		ldr	r3, .L92+8
 1179              	.LVL87:
 1180              	.LBE16:
 1181              	.LBE18:
 1182              		.loc 1 2672 0
 1183 0016 8900     		lsl	r1, r1, #2
 1184              	.LBB19:
 1185              	.LBB17:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1186              		.loc 1 2290 0
 1187 0018 1A60     		str	r2, [r3]
 1188              	.LVL88:
 1189              	.LBE17:
 1190              	.LBE19:
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 70


 1191              		.loc 1 2672 0
 1192 001a 094B     		ldr	r3, .L92+12
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
 1193              		.loc 1 2675 0
 1194              		@ sp needed
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1195              		.loc 1 2672 0
 1196 001c 1869     		ldr	r0, [r3, #16]
 1197 001e FFF7FEFF 		bl	__aeabi_uidiv
 1198              	.LVL89:
 1199              	.LBB20:
 1200              	.LBB21:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1201              		.loc 1 2439 0
 1202 0022 8022     		mov	r2, #128
 1203              	.LBE21:
 1204              	.LBE20:
 1205              	.LBB24:
 1206              	.LBB25:
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2708:Generated_Source\PSoC4/CyLib.c **** }
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 71


2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2724:Generated_Source\PSoC4/CyLib.c **** }
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2740:Generated_Source\PSoC4/CyLib.c **** }
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1207              		.loc 1 2756 0
 1208 0024 074B     		ldr	r3, .L92+16
 1209              	.LBE25:
 1210              	.LBE24:
 1211              	.LBB27:
 1212              	.LBB22:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1213              		.loc 1 2439 0
 1214 0026 1202     		lsl	r2, r2, #8
 1215              	.LBE22:
 1216              	.LBE27:
 1217              	.LBB28:
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 72


 1218              	.LBB26:
 1219              		.loc 1 2756 0
 1220 0028 1860     		str	r0, [r3]
 1221              	.LBE26:
 1222              	.LBE28:
 1223              	.LBB29:
 1224              	.LBB30:
2757:Generated_Source\PSoC4/CyLib.c **** }
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2773:Generated_Source\PSoC4/CyLib.c **** }
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2789:Generated_Source\PSoC4/CyLib.c **** }
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 73


2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2846:Generated_Source\PSoC4/CyLib.c ****     }
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 74


2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2869:Generated_Source\PSoC4/CyLib.c **** }
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1225              		.loc 1 2881 0
 1226 002a 074B     		ldr	r3, .L92+20
 1227 002c 1C60     		str	r4, [r3]
 1228              	.LVL90:
 1229              	.LBE30:
 1230              	.LBE29:
 1231              	.LBB31:
 1232              	.LBB23:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1233              		.loc 1 2439 0
 1234 002e 074B     		ldr	r3, .L92+24
 1235 0030 1A60     		str	r2, [r3]
 1236              	.LBE23:
 1237              	.LBE31:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1238              		.loc 1 2675 0
 1239 0032 10BD     		pop	{r4, pc}
 1240              	.L93:
 1241              		.align	2
 1242              	.L92:
 1243 0034 00000000 		.word	.LANCHOR1
 1244 0038 00000000 		.word	CySysTickServiceCallbacks
 1245 003c 3C000020 		.word	536870972
 1246 0040 00000000 		.word	.LANCHOR0
 1247 0044 14E000E0 		.word	-536813548
 1248 0048 18E000E0 		.word	-536813544
 1249 004c 00E100E0 		.word	-536813312
 1250              		.cfi_endproc
 1251              	.LFE28:
 1252              		.size	CySysTickInit, .-CySysTickInit
 1253              		.section	.text.CySysTickStop,"ax",%progbits
 1254              		.align	1
 1255              		.global	CySysTickStop
 1256              		.code	16
 1257              		.thumb_func
 1258              		.type	CySysTickStop, %function
 1259              	CySysTickStop:
 1260              	.LFB30:
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 75


 1261              		.loc 1 2706 0
 1262              		.cfi_startproc
2707:Generated_Source\PSoC4/CyLib.c **** }
 1263              		.loc 1 2707 0
 1264 0000 0121     		mov	r1, #1
 1265 0002 024A     		ldr	r2, .L95
2708:Generated_Source\PSoC4/CyLib.c **** 
 1266              		.loc 1 2708 0
 1267              		@ sp needed
2707:Generated_Source\PSoC4/CyLib.c **** }
 1268              		.loc 1 2707 0
 1269 0004 1368     		ldr	r3, [r2]
 1270 0006 8B43     		bic	r3, r1
 1271 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** 
 1272              		.loc 1 2708 0
 1273 000a 7047     		bx	lr
 1274              	.L96:
 1275              		.align	2
 1276              	.L95:
 1277 000c 10E000E0 		.word	-536813552
 1278              		.cfi_endproc
 1279              	.LFE30:
 1280              		.size	CySysTickStop, .-CySysTickStop
 1281              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1282              		.align	1
 1283              		.global	CySysTickEnableInterrupt
 1284              		.code	16
 1285              		.thumb_func
 1286              		.type	CySysTickEnableInterrupt, %function
 1287              	CySysTickEnableInterrupt:
 1288              	.LFB31:
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1289              		.loc 1 2722 0
 1290              		.cfi_startproc
2723:Generated_Source\PSoC4/CyLib.c **** }
 1291              		.loc 1 2723 0
 1292 0000 0221     		mov	r1, #2
 1293 0002 024A     		ldr	r2, .L98
2724:Generated_Source\PSoC4/CyLib.c **** 
 1294              		.loc 1 2724 0
 1295              		@ sp needed
2723:Generated_Source\PSoC4/CyLib.c **** }
 1296              		.loc 1 2723 0
 1297 0004 1368     		ldr	r3, [r2]
 1298 0006 0B43     		orr	r3, r1
 1299 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** 
 1300              		.loc 1 2724 0
 1301 000a 7047     		bx	lr
 1302              	.L99:
 1303              		.align	2
 1304              	.L98:
 1305 000c 10E000E0 		.word	-536813552
 1306              		.cfi_endproc
 1307              	.LFE31:
 1308              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 76


 1309              		.section	.text.CySysTickEnable,"ax",%progbits
 1310              		.align	1
 1311              		.global	CySysTickEnable
 1312              		.code	16
 1313              		.thumb_func
 1314              		.type	CySysTickEnable, %function
 1315              	CySysTickEnable:
 1316              	.LFB29:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1317              		.loc 1 2689 0
 1318              		.cfi_startproc
 1319 0000 08B5     		push	{r3, lr}
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 3, -8
 1322              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1323              		.loc 1 2690 0
 1324 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1325              	.LVL91:
2691:Generated_Source\PSoC4/CyLib.c **** }
 1326              		.loc 1 2691 0
 1327 0006 0121     		mov	r1, #1
 1328 0008 024A     		ldr	r2, .L101
2692:Generated_Source\PSoC4/CyLib.c **** 
 1329              		.loc 1 2692 0
 1330              		@ sp needed
2691:Generated_Source\PSoC4/CyLib.c **** }
 1331              		.loc 1 2691 0
 1332 000a 1368     		ldr	r3, [r2]
 1333 000c 0B43     		orr	r3, r1
 1334 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1335              		.loc 1 2692 0
 1336 0010 08BD     		pop	{r3, pc}
 1337              	.L102:
 1338 0012 C046     		.align	2
 1339              	.L101:
 1340 0014 10E000E0 		.word	-536813552
 1341              		.cfi_endproc
 1342              	.LFE29:
 1343              		.size	CySysTickEnable, .-CySysTickEnable
 1344              		.section	.text.CySysTickStart,"ax",%progbits
 1345              		.align	1
 1346              		.global	CySysTickStart
 1347              		.code	16
 1348              		.thumb_func
 1349              		.type	CySysTickStart, %function
 1350              	CySysTickStart:
 1351              	.LFB27:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1352              		.loc 1 2629 0
 1353              		.cfi_startproc
 1354 0000 10B5     		push	{r4, lr}
 1355              		.cfi_def_cfa_offset 8
 1356              		.cfi_offset 4, -8
 1357              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 77


 1358              		.loc 1 2630 0
 1359 0002 054C     		ldr	r4, .L105
 1360 0004 6369     		ldr	r3, [r4, #20]
 1361 0006 002B     		cmp	r3, #0
 1362 0008 03D1     		bne	.L104
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1363              		.loc 1 2632 0
 1364 000a FFF7FEFF 		bl	CySysTickInit
 1365              	.LVL92:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1366              		.loc 1 2633 0
 1367 000e 0123     		mov	r3, #1
 1368 0010 6361     		str	r3, [r4, #20]
 1369              	.L104:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1370              		.loc 1 2636 0
 1371 0012 FFF7FEFF 		bl	CySysTickEnable
 1372              	.LVL93:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1373              		.loc 1 2637 0
 1374              		@ sp needed
 1375 0016 10BD     		pop	{r4, pc}
 1376              	.L106:
 1377              		.align	2
 1378              	.L105:
 1379 0018 00000000 		.word	.LANCHOR1
 1380              		.cfi_endproc
 1381              	.LFE27:
 1382              		.size	CySysTickStart, .-CySysTickStart
 1383              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1384              		.align	1
 1385              		.global	CySysTickDisableInterrupt
 1386              		.code	16
 1387              		.thumb_func
 1388              		.type	CySysTickDisableInterrupt, %function
 1389              	CySysTickDisableInterrupt:
 1390              	.LFB32:
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1391              		.loc 1 2738 0
 1392              		.cfi_startproc
2739:Generated_Source\PSoC4/CyLib.c **** }
 1393              		.loc 1 2739 0
 1394 0000 0221     		mov	r1, #2
 1395 0002 024A     		ldr	r2, .L108
2740:Generated_Source\PSoC4/CyLib.c **** 
 1396              		.loc 1 2740 0
 1397              		@ sp needed
2739:Generated_Source\PSoC4/CyLib.c **** }
 1398              		.loc 1 2739 0
 1399 0004 1368     		ldr	r3, [r2]
 1400 0006 8B43     		bic	r3, r1
 1401 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** 
 1402              		.loc 1 2740 0
 1403 000a 7047     		bx	lr
 1404              	.L109:
 1405              		.align	2
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 78


 1406              	.L108:
 1407 000c 10E000E0 		.word	-536813552
 1408              		.cfi_endproc
 1409              	.LFE32:
 1410              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1411              		.section	.text.CySysTickSetReload,"ax",%progbits
 1412              		.align	1
 1413              		.global	CySysTickSetReload
 1414              		.code	16
 1415              		.thumb_func
 1416              		.type	CySysTickSetReload, %function
 1417              	CySysTickSetReload:
 1418              	.LFB33:
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1419              		.loc 1 2755 0
 1420              		.cfi_startproc
 1421              	.LVL94:
2756:Generated_Source\PSoC4/CyLib.c **** }
 1422              		.loc 1 2756 0
 1423 0000 024B     		ldr	r3, .L111
 1424 0002 0002     		lsl	r0, r0, #8
 1425              	.LVL95:
 1426 0004 000A     		lsr	r0, r0, #8
 1427 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** 
 1428              		.loc 1 2757 0
 1429              		@ sp needed
 1430 0008 7047     		bx	lr
 1431              	.L112:
 1432 000a C046     		.align	2
 1433              	.L111:
 1434 000c 14E000E0 		.word	-536813548
 1435              		.cfi_endproc
 1436              	.LFE33:
 1437              		.size	CySysTickSetReload, .-CySysTickSetReload
 1438              		.section	.text.CySysTickGetReload,"ax",%progbits
 1439              		.align	1
 1440              		.global	CySysTickGetReload
 1441              		.code	16
 1442              		.thumb_func
 1443              		.type	CySysTickGetReload, %function
 1444              	CySysTickGetReload:
 1445              	.LFB34:
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1446              		.loc 1 2771 0
 1447              		.cfi_startproc
2772:Generated_Source\PSoC4/CyLib.c **** }
 1448              		.loc 1 2772 0
 1449 0000 024B     		ldr	r3, .L114
2773:Generated_Source\PSoC4/CyLib.c **** 
 1450              		.loc 1 2773 0
 1451              		@ sp needed
2772:Generated_Source\PSoC4/CyLib.c **** }
 1452              		.loc 1 2772 0
 1453 0002 1868     		ldr	r0, [r3]
 1454 0004 0002     		lsl	r0, r0, #8
 1455 0006 000A     		lsr	r0, r0, #8
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 79


2773:Generated_Source\PSoC4/CyLib.c **** 
 1456              		.loc 1 2773 0
 1457 0008 7047     		bx	lr
 1458              	.L115:
 1459 000a C046     		.align	2
 1460              	.L114:
 1461 000c 14E000E0 		.word	-536813548
 1462              		.cfi_endproc
 1463              	.LFE34:
 1464              		.size	CySysTickGetReload, .-CySysTickGetReload
 1465              		.section	.text.CySysTickGetValue,"ax",%progbits
 1466              		.align	1
 1467              		.global	CySysTickGetValue
 1468              		.code	16
 1469              		.thumb_func
 1470              		.type	CySysTickGetValue, %function
 1471              	CySysTickGetValue:
 1472              	.LFB35:
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1473              		.loc 1 2787 0
 1474              		.cfi_startproc
2788:Generated_Source\PSoC4/CyLib.c **** }
 1475              		.loc 1 2788 0
 1476 0000 024B     		ldr	r3, .L117
2789:Generated_Source\PSoC4/CyLib.c **** 
 1477              		.loc 1 2789 0
 1478              		@ sp needed
2788:Generated_Source\PSoC4/CyLib.c **** }
 1479              		.loc 1 2788 0
 1480 0002 1868     		ldr	r0, [r3]
 1481 0004 0002     		lsl	r0, r0, #8
 1482 0006 000A     		lsr	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** 
 1483              		.loc 1 2789 0
 1484 0008 7047     		bx	lr
 1485              	.L118:
 1486 000a C046     		.align	2
 1487              	.L117:
 1488 000c 18E000E0 		.word	-536813544
 1489              		.cfi_endproc
 1490              	.LFE35:
 1491              		.size	CySysTickGetValue, .-CySysTickGetValue
 1492              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1493              		.align	1
 1494              		.global	CySysTickGetCountFlag
 1495              		.code	16
 1496              		.thumb_func
 1497              		.type	CySysTickGetCountFlag, %function
 1498              	CySysTickGetCountFlag:
 1499              	.LFB36:
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1500              		.loc 1 2867 0
 1501              		.cfi_startproc
2868:Generated_Source\PSoC4/CyLib.c **** }
 1502              		.loc 1 2868 0
 1503 0000 024B     		ldr	r3, .L120
2869:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 80


 1504              		.loc 1 2869 0
 1505              		@ sp needed
2868:Generated_Source\PSoC4/CyLib.c **** }
 1506              		.loc 1 2868 0
 1507 0002 1868     		ldr	r0, [r3]
 1508 0004 C003     		lsl	r0, r0, #15
 1509 0006 C00F     		lsr	r0, r0, #31
2869:Generated_Source\PSoC4/CyLib.c **** 
 1510              		.loc 1 2869 0
 1511 0008 7047     		bx	lr
 1512              	.L121:
 1513 000a C046     		.align	2
 1514              	.L120:
 1515 000c 10E000E0 		.word	-536813552
 1516              		.cfi_endproc
 1517              	.LFE36:
 1518              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1519              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1520              		.align	1
 1521              		.code	16
 1522              		.thumb_func
 1523              		.type	CySysTickServiceCallbacks, %function
 1524              	CySysTickServiceCallbacks:
 1525              	.LFB40:
2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 81


2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 1526              		.loc 1 2952 0
 1527              		.cfi_startproc
 1528 0000 10B5     		push	{r4, lr}
 1529              		.cfi_def_cfa_offset 8
 1530              		.cfi_offset 4, -8
 1531              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1532              		.loc 1 2956 0
 1533 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1534              	.LVL96:
 1535 0006 0128     		cmp	r0, #1
 1536 0008 08D1     		bne	.L122
 1537 000a 0024     		mov	r4, #0
 1538              	.L123:
 1539              	.LBB34:
2957:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 82


2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1540              		.loc 1 2960 0
 1541 000c 044B     		ldr	r3, .L130
 1542 000e E358     		ldr	r3, [r4, r3]
 1543 0010 002B     		cmp	r3, #0
 1544 0012 00D0     		beq	.L124
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1545              		.loc 1 2962 0
 1546 0014 9847     		blx	r3
 1547              	.LVL97:
 1548              	.L124:
 1549 0016 0434     		add	r4, r4, #4
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1550              		.loc 1 2958 0
 1551 0018 142C     		cmp	r4, #20
 1552 001a F7D1     		bne	.L123
 1553              	.L122:
 1554              	.LBE34:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 1555              		.loc 1 2966 0
 1556              		@ sp needed
 1557 001c 10BD     		pop	{r4, pc}
 1558              	.L131:
 1559 001e C046     		.align	2
 1560              	.L130:
 1561 0020 00000000 		.word	.LANCHOR1
 1562              		.cfi_endproc
 1563              	.LFE40:
 1564              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1565              		.section	.text.CySysTickClear,"ax",%progbits
 1566              		.align	1
 1567              		.global	CySysTickClear
 1568              		.code	16
 1569              		.thumb_func
 1570              		.type	CySysTickClear, %function
 1571              	CySysTickClear:
 1572              	.LFB37:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1573              		.loc 1 2880 0
 1574              		.cfi_startproc
2881:Generated_Source\PSoC4/CyLib.c **** }
 1575              		.loc 1 2881 0
 1576 0000 0022     		mov	r2, #0
 1577 0002 014B     		ldr	r3, .L133
2882:Generated_Source\PSoC4/CyLib.c **** 
 1578              		.loc 1 2882 0
 1579              		@ sp needed
2881:Generated_Source\PSoC4/CyLib.c **** }
 1580              		.loc 1 2881 0
 1581 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 83


 1582              		.loc 1 2882 0
 1583 0006 7047     		bx	lr
 1584              	.L134:
 1585              		.align	2
 1586              	.L133:
 1587 0008 18E000E0 		.word	-536813544
 1588              		.cfi_endproc
 1589              	.LFE37:
 1590              		.size	CySysTickClear, .-CySysTickClear
 1591              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1592              		.align	1
 1593              		.global	CySysTickSetCallback
 1594              		.code	16
 1595              		.thumb_func
 1596              		.type	CySysTickSetCallback, %function
 1597              	CySysTickSetCallback:
 1598              	.LFB38:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1599              		.loc 1 2915 0
 1600              		.cfi_startproc
 1601              	.LVL98:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1602              		.loc 1 2918 0
 1603 0000 024A     		ldr	r2, .L136
 1604 0002 8300     		lsl	r3, r0, #2
 1605 0004 9858     		ldr	r0, [r3, r2]
 1606              	.LVL99:
2921:Generated_Source\PSoC4/CyLib.c **** 
 1607              		.loc 1 2921 0
 1608              		@ sp needed
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1609              		.loc 1 2919 0
 1610 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 1611              		.loc 1 2921 0
 1612 0008 7047     		bx	lr
 1613              	.L137:
 1614 000a C046     		.align	2
 1615              	.L136:
 1616 000c 00000000 		.word	.LANCHOR1
 1617              		.cfi_endproc
 1618              	.LFE38:
 1619              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1620              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1621              		.align	1
 1622              		.global	CySysTickGetCallback
 1623              		.code	16
 1624              		.thumb_func
 1625              		.type	CySysTickGetCallback, %function
 1626              	CySysTickGetCallback:
 1627              	.LFB39:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1628              		.loc 1 2939 0
 1629              		.cfi_startproc
 1630              	.LVL100:
2940:Generated_Source\PSoC4/CyLib.c **** }
 1631              		.loc 1 2940 0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 84


 1632 0000 014B     		ldr	r3, .L139
 1633 0002 8000     		lsl	r0, r0, #2
 1634              	.LVL101:
 1635 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 1636              		.loc 1 2941 0
 1637              		@ sp needed
 1638 0006 7047     		bx	lr
 1639              	.L140:
 1640              		.align	2
 1641              	.L139:
 1642 0008 00000000 		.word	.LANCHOR1
 1643              		.cfi_endproc
 1644              	.LFE39:
 1645              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1646              		.section	.text.CyGetUniqueId,"ax",%progbits
 1647              		.align	1
 1648              		.global	CyGetUniqueId
 1649              		.code	16
 1650              		.thumb_func
 1651              		.type	CyGetUniqueId, %function
 1652              	CyGetUniqueId:
 1653              	.LFB41:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 1654              		.loc 1 2984 0
 1655              		.cfi_startproc
 1656              	.LVL102:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1657              		.loc 1 2986 0
 1658 0000 134B     		ldr	r3, .L142
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2995:Generated_Source\PSoC4/CyLib.c **** #else
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 85


2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 1659              		.loc 1 3006 0
 1660              		@ sp needed
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1661              		.loc 1 2986 0
 1662 0002 1B78     		ldrb	r3, [r3]
 1663 0004 DAB2     		uxtb	r2, r3
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1664              		.loc 1 2987 0
 1665 0006 134B     		ldr	r3, .L142+4
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1666              		.loc 1 2986 0
 1667 0008 0260     		str	r2, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1668              		.loc 1 2987 0
 1669 000a 1B78     		ldrb	r3, [r3]
 1670 000c 1B02     		lsl	r3, r3, #8
 1671 000e 1343     		orr	r3, r2
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1672              		.loc 1 2988 0
 1673 0010 114A     		ldr	r2, .L142+8
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1674              		.loc 1 2987 0
 1675 0012 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1676              		.loc 1 2988 0
 1677 0014 1278     		ldrb	r2, [r2]
 1678 0016 1204     		lsl	r2, r2, #16
 1679 0018 1343     		orr	r3, r2
2989:Generated_Source\PSoC4/CyLib.c **** 
 1680              		.loc 1 2989 0
 1681 001a 104A     		ldr	r2, .L142+12
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1682              		.loc 1 2988 0
 1683 001c 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c **** 
 1684              		.loc 1 2989 0
 1685 001e 1278     		ldrb	r2, [r2]
 1686 0020 1206     		lsl	r2, r2, #24
 1687 0022 1343     		orr	r3, r2
 1688 0024 0360     		str	r3, [r0]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1689              		.loc 1 2991 0
 1690 0026 0E4B     		ldr	r3, .L142+16
 1691 0028 1B78     		ldrb	r3, [r3]
 1692 002a DAB2     		uxtb	r2, r3
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 86


 1693              		.loc 1 2992 0
 1694 002c 0D4B     		ldr	r3, .L142+20
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1695              		.loc 1 2991 0
 1696 002e 4260     		str	r2, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1697              		.loc 1 2992 0
 1698 0030 1B78     		ldrb	r3, [r3]
 1699 0032 1B02     		lsl	r3, r3, #8
 1700 0034 1343     		orr	r3, r2
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1701              		.loc 1 2993 0
 1702 0036 0C4A     		ldr	r2, .L142+24
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1703              		.loc 1 2992 0
 1704 0038 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1705              		.loc 1 2993 0
 1706 003a 1278     		ldrb	r2, [r2]
 1707 003c 1204     		lsl	r2, r2, #16
 1708 003e 1343     		orr	r3, r2
2994:Generated_Source\PSoC4/CyLib.c **** #else
 1709              		.loc 1 2994 0
 1710 0040 0A4A     		ldr	r2, .L142+28
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1711              		.loc 1 2993 0
 1712 0042 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c **** #else
 1713              		.loc 1 2994 0
 1714 0044 1278     		ldrb	r2, [r2]
 1715 0046 1206     		lsl	r2, r2, #24
 1716 0048 1343     		orr	r3, r2
 1717 004a 4360     		str	r3, [r0, #4]
 1718              		.loc 1 3006 0
 1719 004c 7047     		bx	lr
 1720              	.L143:
 1721 004e C046     		.align	2
 1722              	.L142:
 1723 0050 78F1FF0F 		.word	268431736
 1724 0054 79F1FF0F 		.word	268431737
 1725 0058 7AF1FF0F 		.word	268431738
 1726 005c 7BF1FF0F 		.word	268431739
 1727 0060 7CF1FF0F 		.word	268431740
 1728 0064 7DF1FF0F 		.word	268431741
 1729 0068 7EF1FF0F 		.word	268431742
 1730 006c 7FF1FF0F 		.word	268431743
 1731              		.cfi_endproc
 1732              	.LFE41:
 1733              		.size	CyGetUniqueId, .-CyGetUniqueId
 1734              		.global	CySysClkPumpConfig
 1735              		.global	CySysTickInitVar
 1736              		.global	cydelay32kMs
 1737              		.global	cydelayFreqMhz
 1738              		.global	cydelayFreqKhz
 1739              		.global	cydelayFreqHz
 1740              		.data
 1741              		.align	2
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 87


 1742              		.set	.LANCHOR0,. + 0
 1743              		.type	CySysClkPumpConfig, %object
 1744              		.size	CySysClkPumpConfig, 4
 1745              	CySysClkPumpConfig:
 1746 0000 01000000 		.word	1
 1747              		.type	cydelay32kMs, %object
 1748              		.size	cydelay32kMs, 4
 1749              	cydelay32kMs:
 1750 0004 0000A00F 		.word	262144000
 1751              		.type	cydelayFreqKhz, %object
 1752              		.size	cydelayFreqKhz, 4
 1753              	cydelayFreqKhz:
 1754 0008 401F0000 		.word	8000
 1755              		.type	cydelayFreqMhz, %object
 1756              		.size	cydelayFreqMhz, 1
 1757              	cydelayFreqMhz:
 1758 000c 08       		.byte	8
 1759 000d 000000   		.space	3
 1760              		.type	cydelayFreqHz, %object
 1761              		.size	cydelayFreqHz, 4
 1762              	cydelayFreqHz:
 1763 0010 00127A00 		.word	8000000
 1764              		.bss
 1765              		.align	2
 1766              		.set	.LANCHOR1,. + 0
 1767              		.type	CySysTickCallbacks, %object
 1768              		.size	CySysTickCallbacks, 20
 1769              	CySysTickCallbacks:
 1770 0000 00000000 		.space	20
 1770      00000000 
 1770      00000000 
 1770      00000000 
 1770      00000000 
 1771              		.type	CySysTickInitVar, %object
 1772              		.size	CySysTickInitVar, 4
 1773              	CySysTickInitVar:
 1774 0014 00000000 		.space	4
 1775              		.text
 1776              	.Letext0:
 1777              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1778              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1779              		.section	.debug_info,"",%progbits
 1780              	.Ldebug_info0:
 1781 0000 680A0000 		.4byte	0xa68
 1782 0004 0400     		.2byte	0x4
 1783 0006 00000000 		.4byte	.Ldebug_abbrev0
 1784 000a 04       		.byte	0x4
 1785 000b 01       		.uleb128 0x1
 1786 000c 16000000 		.4byte	.LASF91
 1787 0010 01       		.byte	0x1
 1788 0011 41060000 		.4byte	.LASF92
 1789 0015 F6040000 		.4byte	.LASF93
 1790 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 1791 001d 00000000 		.4byte	0
 1792 0021 00000000 		.4byte	.Ldebug_line0
 1793 0025 02       		.uleb128 0x2
 1794 0026 01       		.byte	0x1
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 88


 1795 0027 06       		.byte	0x6
 1796 0028 6F010000 		.4byte	.LASF0
 1797 002c 02       		.uleb128 0x2
 1798 002d 01       		.byte	0x1
 1799 002e 08       		.byte	0x8
 1800 002f 53040000 		.4byte	.LASF1
 1801 0033 02       		.uleb128 0x2
 1802 0034 02       		.byte	0x2
 1803 0035 05       		.byte	0x5
 1804 0036 68040000 		.4byte	.LASF2
 1805 003a 02       		.uleb128 0x2
 1806 003b 02       		.byte	0x2
 1807 003c 07       		.byte	0x7
 1808 003d F5020000 		.4byte	.LASF3
 1809 0041 02       		.uleb128 0x2
 1810 0042 04       		.byte	0x4
 1811 0043 05       		.byte	0x5
 1812 0044 AE010000 		.4byte	.LASF4
 1813 0048 02       		.uleb128 0x2
 1814 0049 04       		.byte	0x4
 1815 004a 07       		.byte	0x7
 1816 004b 98020000 		.4byte	.LASF5
 1817 004f 02       		.uleb128 0x2
 1818 0050 08       		.byte	0x8
 1819 0051 05       		.byte	0x5
 1820 0052 61010000 		.4byte	.LASF6
 1821 0056 02       		.uleb128 0x2
 1822 0057 08       		.byte	0x8
 1823 0058 07       		.byte	0x7
 1824 0059 F5000000 		.4byte	.LASF7
 1825 005d 03       		.uleb128 0x3
 1826 005e 04       		.byte	0x4
 1827 005f 05       		.byte	0x5
 1828 0060 696E7400 		.ascii	"int\000"
 1829 0064 02       		.uleb128 0x2
 1830 0065 04       		.byte	0x4
 1831 0066 07       		.byte	0x7
 1832 0067 7C020000 		.4byte	.LASF8
 1833 006b 04       		.uleb128 0x4
 1834 006c D9010000 		.4byte	.LASF9
 1835 0070 02       		.byte	0x2
 1836 0071 B901     		.2byte	0x1b9
 1837 0073 2C000000 		.4byte	0x2c
 1838 0077 04       		.uleb128 0x4
 1839 0078 0F000000 		.4byte	.LASF10
 1840 007c 02       		.byte	0x2
 1841 007d BA01     		.2byte	0x1ba
 1842 007f 3A000000 		.4byte	0x3a
 1843 0083 04       		.uleb128 0x4
 1844 0084 02020000 		.4byte	.LASF11
 1845 0088 02       		.byte	0x2
 1846 0089 BB01     		.2byte	0x1bb
 1847 008b 48000000 		.4byte	0x48
 1848 008f 02       		.uleb128 0x2
 1849 0090 04       		.byte	0x4
 1850 0091 04       		.byte	0x4
 1851 0092 EF030000 		.4byte	.LASF12
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 89


 1852 0096 02       		.uleb128 0x2
 1853 0097 08       		.byte	0x8
 1854 0098 04       		.byte	0x4
 1855 0099 F5010000 		.4byte	.LASF13
 1856 009d 02       		.uleb128 0x2
 1857 009e 01       		.byte	0x1
 1858 009f 08       		.byte	0x8
 1859 00a0 BE040000 		.4byte	.LASF14
 1860 00a4 04       		.uleb128 0x4
 1861 00a5 47040000 		.4byte	.LASF15
 1862 00a9 02       		.byte	0x2
 1863 00aa 6302     		.2byte	0x263
 1864 00ac B0000000 		.4byte	0xb0
 1865 00b0 05       		.uleb128 0x5
 1866 00b1 6B000000 		.4byte	0x6b
 1867 00b5 04       		.uleb128 0x4
 1868 00b6 63030000 		.4byte	.LASF16
 1869 00ba 02       		.byte	0x2
 1870 00bb 6502     		.2byte	0x265
 1871 00bd C1000000 		.4byte	0xc1
 1872 00c1 05       		.uleb128 0x5
 1873 00c2 83000000 		.4byte	0x83
 1874 00c6 04       		.uleb128 0x4
 1875 00c7 C3040000 		.4byte	.LASF17
 1876 00cb 02       		.byte	0x2
 1877 00cc 7502     		.2byte	0x275
 1878 00ce D2000000 		.4byte	0xd2
 1879 00d2 06       		.uleb128 0x6
 1880 00d3 04       		.byte	0x4
 1881 00d4 D8000000 		.4byte	0xd8
 1882 00d8 07       		.uleb128 0x7
 1883 00d9 02       		.uleb128 0x2
 1884 00da 04       		.byte	0x4
 1885 00db 07       		.byte	0x7
 1886 00dc 85030000 		.4byte	.LASF18
 1887 00e0 08       		.uleb128 0x8
 1888 00e1 0B040000 		.4byte	.LASF19
 1889 00e5 03       		.byte	0x3
 1890 00e6 F5       		.byte	0xf5
 1891 00e7 D2000000 		.4byte	0xd2
 1892 00eb 09       		.uleb128 0x9
 1893 00ec A4040000 		.4byte	.LASF94
 1894 00f0 01       		.byte	0x1
 1895 00f1 870B     		.2byte	0xb87
 1896 00f3 01       		.byte	0x1
 1897 00f4 03010000 		.4byte	0x103
 1898 00f8 0A       		.uleb128 0xa
 1899 00f9 6900     		.ascii	"i\000"
 1900 00fb 01       		.byte	0x1
 1901 00fc 890B     		.2byte	0xb89
 1902 00fe 83000000 		.4byte	0x83
 1903 0102 00       		.byte	0
 1904 0103 0B       		.uleb128 0xb
 1905 0104 74060000 		.4byte	.LASF55
 1906 0108 01       		.byte	0x1
 1907 0109 C20A     		.2byte	0xac2
 1908 010b 01       		.byte	0x1
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 90


 1909 010c 1D010000 		.4byte	0x11d
 1910 0110 0C       		.uleb128 0xc
 1911 0111 52020000 		.4byte	.LASF43
 1912 0115 01       		.byte	0x1
 1913 0116 C20A     		.2byte	0xac2
 1914 0118 83000000 		.4byte	0x83
 1915 011c 00       		.byte	0
 1916 011d 0D       		.uleb128 0xd
 1917 011e 89020000 		.4byte	.LASF95
 1918 0122 01       		.byte	0x1
 1919 0123 3F0B     		.2byte	0xb3f
 1920 0125 01       		.byte	0x1
 1921 0126 0E       		.uleb128 0xe
 1922 0127 30060000 		.4byte	.LASF20
 1923 012b 01       		.byte	0x1
 1924 012c 6B       		.byte	0x6b
 1925 012d 00000000 		.4byte	.LFB0
 1926 0131 14000000 		.4byte	.LFE0-.LFB0
 1927 0135 01       		.uleb128 0x1
 1928 0136 9C       		.byte	0x9c
 1929 0137 0E       		.uleb128 0xe
 1930 0138 AA020000 		.4byte	.LASF21
 1931 013c 01       		.byte	0x1
 1932 013d 8B       		.byte	0x8b
 1933 013e 00000000 		.4byte	.LFB1
 1934 0142 10000000 		.4byte	.LFE1-.LFB1
 1935 0146 01       		.uleb128 0x1
 1936 0147 9C       		.byte	0x9c
 1937 0148 0F       		.uleb128 0xf
 1938 0149 AD000000 		.4byte	.LASF24
 1939 014d 01       		.byte	0x1
 1940 014e AD01     		.2byte	0x1ad
 1941 0150 00000000 		.4byte	.LFB2
 1942 0154 20000000 		.4byte	.LFE2-.LFB2
 1943 0158 01       		.uleb128 0x1
 1944 0159 9C       		.byte	0x9c
 1945 015a A1010000 		.4byte	0x1a1
 1946 015e 10       		.uleb128 0x10
 1947 015f 90040000 		.4byte	.LASF26
 1948 0163 01       		.byte	0x1
 1949 0164 AD01     		.2byte	0x1ad
 1950 0166 83000000 		.4byte	0x83
 1951 016a 00000000 		.4byte	.LLST0
 1952 016e 11       		.uleb128 0x11
 1953 016f 8C010000 		.4byte	.LASF22
 1954 0173 01       		.byte	0x1
 1955 0174 AF01     		.2byte	0x1af
 1956 0176 6B000000 		.4byte	0x6b
 1957 017a 2C000000 		.4byte	.LLST1
 1958 017e 11       		.uleb128 0x11
 1959 017f 6D060000 		.4byte	.LASF23
 1960 0183 01       		.byte	0x1
 1961 0184 B001     		.2byte	0x1b0
 1962 0186 83000000 		.4byte	0x83
 1963 018a 3F000000 		.4byte	.LLST2
 1964 018e 12       		.uleb128 0x12
 1965 018f 08000000 		.4byte	.LVL1
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 91


 1966 0193 420A0000 		.4byte	0xa42
 1967 0197 12       		.uleb128 0x12
 1968 0198 1A000000 		.4byte	.LVL4
 1969 019c 4D0A0000 		.4byte	0xa4d
 1970 01a0 00       		.byte	0
 1971 01a1 0F       		.uleb128 0xf
 1972 01a2 4E030000 		.4byte	.LASF25
 1973 01a6 01       		.byte	0x1
 1974 01a7 D901     		.2byte	0x1d9
 1975 01a9 00000000 		.4byte	.LFB3
 1976 01ad 30000000 		.4byte	.LFE3-.LFB3
 1977 01b1 01       		.uleb128 0x1
 1978 01b2 9C       		.byte	0x9c
 1979 01b3 C6010000 		.4byte	0x1c6
 1980 01b7 13       		.uleb128 0x13
 1981 01b8 EE010000 		.4byte	.LASF27
 1982 01bc 01       		.byte	0x1
 1983 01bd D901     		.2byte	0x1d9
 1984 01bf 83000000 		.4byte	0x83
 1985 01c3 01       		.uleb128 0x1
 1986 01c4 50       		.byte	0x50
 1987 01c5 00       		.byte	0
 1988 01c6 14       		.uleb128 0x14
 1989 01c7 0E020000 		.4byte	.LASF35
 1990 01cb 01       		.byte	0x1
 1991 01cc FE01     		.2byte	0x1fe
 1992 01ce 83000000 		.4byte	0x83
 1993 01d2 00000000 		.4byte	.LFB4
 1994 01d6 18000000 		.4byte	.LFE4-.LFB4
 1995 01da 01       		.uleb128 0x1
 1996 01db 9C       		.byte	0x9c
 1997 01dc 13020000 		.4byte	0x213
 1998 01e0 11       		.uleb128 0x11
 1999 01e1 8C010000 		.4byte	.LASF22
 2000 01e5 01       		.byte	0x1
 2001 01e6 0002     		.2byte	0x200
 2002 01e8 6B000000 		.4byte	0x6b
 2003 01ec 5D000000 		.4byte	.LLST3
 2004 01f0 11       		.uleb128 0x11
 2005 01f1 A8030000 		.4byte	.LASF28
 2006 01f5 01       		.byte	0x1
 2007 01f6 0102     		.2byte	0x201
 2008 01f8 83000000 		.4byte	0x83
 2009 01fc 70000000 		.4byte	.LLST4
 2010 0200 12       		.uleb128 0x12
 2011 0201 06000000 		.4byte	.LVL7
 2012 0205 420A0000 		.4byte	0xa42
 2013 0209 12       		.uleb128 0x12
 2014 020a 0E000000 		.4byte	.LVL9
 2015 020e 4D0A0000 		.4byte	0xa4d
 2016 0212 00       		.byte	0
 2017 0213 0F       		.uleb128 0xf
 2018 0214 93050000 		.4byte	.LASF29
 2019 0218 01       		.byte	0x1
 2020 0219 3502     		.2byte	0x235
 2021 021b 00000000 		.4byte	.LFB5
 2022 021f 24000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 92


 2023 0223 01       		.uleb128 0x1
 2024 0224 9C       		.byte	0x9c
 2025 0225 5C020000 		.4byte	0x25c
 2026 0229 10       		.uleb128 0x10
 2027 022a 28060000 		.4byte	.LASF30
 2028 022e 01       		.byte	0x1
 2029 022f 3502     		.2byte	0x235
 2030 0231 83000000 		.4byte	0x83
 2031 0235 92000000 		.4byte	.LLST5
 2032 0239 11       		.uleb128 0x11
 2033 023a 8C010000 		.4byte	.LASF22
 2034 023e 01       		.byte	0x1
 2035 023f 3702     		.2byte	0x237
 2036 0241 6B000000 		.4byte	0x6b
 2037 0245 BE000000 		.4byte	.LLST6
 2038 0249 12       		.uleb128 0x12
 2039 024a 08000000 		.4byte	.LVL12
 2040 024e 420A0000 		.4byte	0xa42
 2041 0252 12       		.uleb128 0x12
 2042 0253 1E000000 		.4byte	.LVL13
 2043 0257 4D0A0000 		.4byte	0xa4d
 2044 025b 00       		.byte	0
 2045 025c 0F       		.uleb128 0xf
 2046 025d 27030000 		.4byte	.LASF31
 2047 0261 01       		.byte	0x1
 2048 0262 3C03     		.2byte	0x33c
 2049 0264 00000000 		.4byte	.LFB6
 2050 0268 98000000 		.4byte	.LFE6-.LFB6
 2051 026c 01       		.uleb128 0x1
 2052 026d 9C       		.byte	0x9c
 2053 026e E4020000 		.4byte	0x2e4
 2054 0272 10       		.uleb128 0x10
 2055 0273 7B010000 		.4byte	.LASF32
 2056 0277 01       		.byte	0x1
 2057 0278 3C03     		.2byte	0x33c
 2058 027a 83000000 		.4byte	0x83
 2059 027e D1000000 		.4byte	.LLST7
 2060 0282 11       		.uleb128 0x11
 2061 0283 8C010000 		.4byte	.LASF22
 2062 0287 01       		.byte	0x1
 2063 0288 3E03     		.2byte	0x33e
 2064 028a 6B000000 		.4byte	0x6b
 2065 028e 0A010000 		.4byte	.LLST8
 2066 0292 11       		.uleb128 0x11
 2067 0293 D2050000 		.4byte	.LASF33
 2068 0297 01       		.byte	0x1
 2069 0298 3F03     		.2byte	0x33f
 2070 029a 6B000000 		.4byte	0x6b
 2071 029e 1D010000 		.4byte	.LLST9
 2072 02a2 12       		.uleb128 0x12
 2073 02a3 16000000 		.4byte	.LVL16
 2074 02a7 420A0000 		.4byte	0xa42
 2075 02ab 15       		.uleb128 0x15
 2076 02ac 50000000 		.4byte	.LVL21
 2077 02b0 5E0A0000 		.4byte	0xa5e
 2078 02b4 BF020000 		.4byte	0x2bf
 2079 02b8 16       		.uleb128 0x16
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 93


 2080 02b9 01       		.uleb128 0x1
 2081 02ba 50       		.byte	0x50
 2082 02bb 02       		.uleb128 0x2
 2083 02bc 08       		.byte	0x8
 2084 02bd 32       		.byte	0x32
 2085 02be 00       		.byte	0
 2086 02bf 15       		.uleb128 0x15
 2087 02c0 6A000000 		.4byte	.LVL22
 2088 02c4 5E0A0000 		.4byte	0xa5e
 2089 02c8 D3020000 		.4byte	0x2d3
 2090 02cc 16       		.uleb128 0x16
 2091 02cd 01       		.uleb128 0x1
 2092 02ce 50       		.byte	0x50
 2093 02cf 02       		.uleb128 0x2
 2094 02d0 08       		.byte	0x8
 2095 02d1 32       		.byte	0x32
 2096 02d2 00       		.byte	0
 2097 02d3 17       		.uleb128 0x17
 2098 02d4 7E000000 		.4byte	.LVL25
 2099 02d8 4D0A0000 		.4byte	0xa4d
 2100 02dc 16       		.uleb128 0x16
 2101 02dd 01       		.uleb128 0x1
 2102 02de 50       		.byte	0x50
 2103 02df 02       		.uleb128 0x2
 2104 02e0 77       		.byte	0x77
 2105 02e1 00       		.sleb128 0
 2106 02e2 00       		.byte	0
 2107 02e3 00       		.byte	0
 2108 02e4 0F       		.uleb128 0xf
 2109 02e5 E0040000 		.4byte	.LASF34
 2110 02e9 01       		.byte	0x1
 2111 02ea D503     		.2byte	0x3d5
 2112 02ec 00000000 		.4byte	.LFB7
 2113 02f0 24000000 		.4byte	.LFE7-.LFB7
 2114 02f4 01       		.uleb128 0x1
 2115 02f5 9C       		.byte	0x9c
 2116 02f6 2D030000 		.4byte	0x32d
 2117 02fa 10       		.uleb128 0x10
 2118 02fb 28060000 		.4byte	.LASF30
 2119 02ff 01       		.byte	0x1
 2120 0300 D503     		.2byte	0x3d5
 2121 0302 83000000 		.4byte	0x83
 2122 0306 41010000 		.4byte	.LLST10
 2123 030a 11       		.uleb128 0x11
 2124 030b 8C010000 		.4byte	.LASF22
 2125 030f 01       		.byte	0x1
 2126 0310 D703     		.2byte	0x3d7
 2127 0312 6B000000 		.4byte	0x6b
 2128 0316 6D010000 		.4byte	.LLST11
 2129 031a 12       		.uleb128 0x12
 2130 031b 08000000 		.4byte	.LVL27
 2131 031f 420A0000 		.4byte	0xa42
 2132 0323 12       		.uleb128 0x12
 2133 0324 1E000000 		.4byte	.LVL29
 2134 0328 4D0A0000 		.4byte	0xa4d
 2135 032c 00       		.byte	0
 2136 032d 14       		.uleb128 0x14
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 94


 2137 032e E1020000 		.4byte	.LASF36
 2138 0332 01       		.byte	0x1
 2139 0333 A008     		.2byte	0x8a0
 2140 0335 83000000 		.4byte	0x83
 2141 0339 00000000 		.4byte	.LFB8
 2142 033d 14000000 		.4byte	.LFE8-.LFB8
 2143 0341 01       		.uleb128 0x1
 2144 0342 9C       		.byte	0x9c
 2145 0343 68030000 		.4byte	0x368
 2146 0347 10       		.uleb128 0x10
 2147 0348 61040000 		.4byte	.LASF37
 2148 034c 01       		.byte	0x1
 2149 034d A008     		.2byte	0x8a0
 2150 034f 83000000 		.4byte	0x83
 2151 0353 80010000 		.4byte	.LLST12
 2152 0357 11       		.uleb128 0x11
 2153 0358 78030000 		.4byte	.LASF38
 2154 035c 01       		.byte	0x1
 2155 035d A208     		.2byte	0x8a2
 2156 035f 83000000 		.4byte	0x83
 2157 0363 9E010000 		.4byte	.LLST13
 2158 0367 00       		.byte	0
 2159 0368 14       		.uleb128 0x14
 2160 0369 E7000000 		.4byte	.LASF39
 2161 036d 01       		.byte	0x1
 2162 036e B708     		.2byte	0x8b7
 2163 0370 83000000 		.4byte	0x83
 2164 0374 00000000 		.4byte	.LFB9
 2165 0378 10000000 		.4byte	.LFE9-.LFB9
 2166 037c 01       		.uleb128 0x1
 2167 037d 9C       		.byte	0x9c
 2168 037e 91030000 		.4byte	0x391
 2169 0382 18       		.uleb128 0x18
 2170 0383 A4000000 		.4byte	.LASF40
 2171 0387 01       		.byte	0x1
 2172 0388 B908     		.2byte	0x8b9
 2173 038a 83000000 		.4byte	0x83
 2174 038e 01       		.uleb128 0x1
 2175 038f 50       		.byte	0x50
 2176 0390 00       		.byte	0
 2177 0391 0F       		.uleb128 0xf
 2178 0392 1D010000 		.4byte	.LASF41
 2179 0396 01       		.byte	0x1
 2180 0397 CE08     		.2byte	0x8ce
 2181 0399 00000000 		.4byte	.LFB10
 2182 039d 0C000000 		.4byte	.LFE10-.LFB10
 2183 03a1 01       		.uleb128 0x1
 2184 03a2 9C       		.byte	0x9c
 2185 03a3 B6030000 		.4byte	0x3b6
 2186 03a7 13       		.uleb128 0x13
 2187 03a8 09020000 		.4byte	.LASF42
 2188 03ac 01       		.byte	0x1
 2189 03ad CE08     		.2byte	0x8ce
 2190 03af 83000000 		.4byte	0x83
 2191 03b3 01       		.uleb128 0x1
 2192 03b4 50       		.byte	0x50
 2193 03b5 00       		.byte	0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 95


 2194 03b6 19       		.uleb128 0x19
 2195 03b7 3C030000 		.4byte	.LASF96
 2196 03bb 01       		.byte	0x1
 2197 03bc E708     		.2byte	0x8e7
 2198 03be C6000000 		.4byte	0xc6
 2199 03c2 01       		.byte	0x1
 2200 03c3 F8030000 		.4byte	0x3f8
 2201 03c7 0C       		.uleb128 0xc
 2202 03c8 17030000 		.4byte	.LASF44
 2203 03cc 01       		.byte	0x1
 2204 03cd E708     		.2byte	0x8e7
 2205 03cf 6B000000 		.4byte	0x6b
 2206 03d3 0C       		.uleb128 0xc
 2207 03d4 A0030000 		.4byte	.LASF45
 2208 03d8 01       		.byte	0x1
 2209 03d9 E708     		.2byte	0x8e7
 2210 03db C6000000 		.4byte	0xc6
 2211 03df 1A       		.uleb128 0x1a
 2212 03e0 D9000000 		.4byte	.LASF46
 2213 03e4 01       		.byte	0x1
 2214 03e5 E908     		.2byte	0x8e9
 2215 03e7 C6000000 		.4byte	0xc6
 2216 03eb 1A       		.uleb128 0x1a
 2217 03ec 00000000 		.4byte	.LASF47
 2218 03f0 01       		.byte	0x1
 2219 03f1 EA08     		.2byte	0x8ea
 2220 03f3 F8030000 		.4byte	0x3f8
 2221 03f7 00       		.byte	0
 2222 03f8 06       		.uleb128 0x6
 2223 03f9 04       		.byte	0x4
 2224 03fa C6000000 		.4byte	0xc6
 2225 03fe 1B       		.uleb128 0x1b
 2226 03ff B6030000 		.4byte	0x3b6
 2227 0403 00000000 		.4byte	.LFB11
 2228 0407 0E000000 		.4byte	.LFE11-.LFB11
 2229 040b 01       		.uleb128 0x1
 2230 040c 9C       		.byte	0x9c
 2231 040d 32040000 		.4byte	0x432
 2232 0411 1C       		.uleb128 0x1c
 2233 0412 C7030000 		.4byte	0x3c7
 2234 0416 C0010000 		.4byte	.LLST14
 2235 041a 1D       		.uleb128 0x1d
 2236 041b D3030000 		.4byte	0x3d3
 2237 041f 01       		.uleb128 0x1
 2238 0420 51       		.byte	0x51
 2239 0421 1E       		.uleb128 0x1e
 2240 0422 DF030000 		.4byte	0x3df
 2241 0426 01       		.uleb128 0x1
 2242 0427 50       		.byte	0x50
 2243 0428 1F       		.uleb128 0x1f
 2244 0429 EB030000 		.4byte	0x3eb
 2245 042d 00000020 		.4byte	0x20000000
 2246 0431 00       		.byte	0
 2247 0432 14       		.uleb128 0x14
 2248 0433 7E040000 		.4byte	.LASF48
 2249 0437 01       		.byte	0x1
 2250 0438 0909     		.2byte	0x909
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 96


 2251 043a C6000000 		.4byte	0xc6
 2252 043e 00000000 		.4byte	.LFB12
 2253 0442 0C000000 		.4byte	.LFE12-.LFB12
 2254 0446 01       		.uleb128 0x1
 2255 0447 9C       		.byte	0x9c
 2256 0448 6D040000 		.4byte	0x46d
 2257 044c 10       		.uleb128 0x10
 2258 044d 17030000 		.4byte	.LASF44
 2259 0451 01       		.byte	0x1
 2260 0452 0909     		.2byte	0x909
 2261 0454 6B000000 		.4byte	0x6b
 2262 0458 E1010000 		.4byte	.LLST15
 2263 045c 20       		.uleb128 0x20
 2264 045d 00000000 		.4byte	.LASF47
 2265 0461 01       		.byte	0x1
 2266 0462 0B09     		.2byte	0x90b
 2267 0464 F8030000 		.4byte	0x3f8
 2268 0468 00000020 		.4byte	0x20000000
 2269 046c 00       		.byte	0
 2270 046d 14       		.uleb128 0x14
 2271 046e 08030000 		.4byte	.LASF49
 2272 0472 01       		.byte	0x1
 2273 0473 1F09     		.2byte	0x91f
 2274 0475 C6000000 		.4byte	0xc6
 2275 0479 00000000 		.4byte	.LFB13
 2276 047d 10000000 		.4byte	.LFE13-.LFB13
 2277 0481 01       		.uleb128 0x1
 2278 0482 9C       		.byte	0x9c
 2279 0483 C4040000 		.4byte	0x4c4
 2280 0487 10       		.uleb128 0x10
 2281 0488 17030000 		.4byte	.LASF44
 2282 048c 01       		.byte	0x1
 2283 048d 1F09     		.2byte	0x91f
 2284 048f 6B000000 		.4byte	0x6b
 2285 0493 02020000 		.4byte	.LLST16
 2286 0497 13       		.uleb128 0x13
 2287 0498 A0030000 		.4byte	.LASF45
 2288 049c 01       		.byte	0x1
 2289 049d 1F09     		.2byte	0x91f
 2290 049f C6000000 		.4byte	0xc6
 2291 04a3 01       		.uleb128 0x1
 2292 04a4 51       		.byte	0x51
 2293 04a5 18       		.uleb128 0x18
 2294 04a6 D9000000 		.4byte	.LASF46
 2295 04aa 01       		.byte	0x1
 2296 04ab 2109     		.2byte	0x921
 2297 04ad C6000000 		.4byte	0xc6
 2298 04b1 01       		.uleb128 0x1
 2299 04b2 50       		.byte	0x50
 2300 04b3 20       		.uleb128 0x20
 2301 04b4 00000000 		.4byte	.LASF47
 2302 04b8 01       		.byte	0x1
 2303 04b9 2209     		.2byte	0x922
 2304 04bb F8030000 		.4byte	0x3f8
 2305 04bf 00000020 		.4byte	0x20000000
 2306 04c3 00       		.byte	0
 2307 04c4 14       		.uleb128 0x14
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 97


 2308 04c5 1D040000 		.4byte	.LASF50
 2309 04c9 01       		.byte	0x1
 2310 04ca 3B09     		.2byte	0x93b
 2311 04cc C6000000 		.4byte	0xc6
 2312 04d0 00000000 		.4byte	.LFB14
 2313 04d4 10000000 		.4byte	.LFE14-.LFB14
 2314 04d8 01       		.uleb128 0x1
 2315 04d9 9C       		.byte	0x9c
 2316 04da FF040000 		.4byte	0x4ff
 2317 04de 10       		.uleb128 0x10
 2318 04df 17030000 		.4byte	.LASF44
 2319 04e3 01       		.byte	0x1
 2320 04e4 3B09     		.2byte	0x93b
 2321 04e6 6B000000 		.4byte	0x6b
 2322 04ea 23020000 		.4byte	.LLST17
 2323 04ee 20       		.uleb128 0x20
 2324 04ef 00000000 		.4byte	.LASF47
 2325 04f3 01       		.byte	0x1
 2326 04f4 3D09     		.2byte	0x93d
 2327 04f6 F8030000 		.4byte	0x3f8
 2328 04fa 00000020 		.4byte	0x20000000
 2329 04fe 00       		.byte	0
 2330 04ff 0F       		.uleb128 0xf
 2331 0500 DE030000 		.4byte	.LASF51
 2332 0504 01       		.byte	0x1
 2333 0505 4E09     		.2byte	0x94e
 2334 0507 00000000 		.4byte	.LFB15
 2335 050b 30000000 		.4byte	.LFE15-.LFB15
 2336 050f 01       		.uleb128 0x1
 2337 0510 9C       		.byte	0x9c
 2338 0511 78050000 		.4byte	0x578
 2339 0515 10       		.uleb128 0x10
 2340 0516 17030000 		.4byte	.LASF44
 2341 051a 01       		.byte	0x1
 2342 051b 4E09     		.2byte	0x94e
 2343 051d 6B000000 		.4byte	0x6b
 2344 0521 44020000 		.4byte	.LLST18
 2345 0525 10       		.uleb128 0x10
 2346 0526 1E030000 		.4byte	.LASF52
 2347 052a 01       		.byte	0x1
 2348 052b 4E09     		.2byte	0x94e
 2349 052d 6B000000 		.4byte	0x6b
 2350 0531 65020000 		.4byte	.LLST19
 2351 0535 11       		.uleb128 0x11
 2352 0536 8C010000 		.4byte	.LASF22
 2353 053a 01       		.byte	0x1
 2354 053b 5009     		.2byte	0x950
 2355 053d 6B000000 		.4byte	0x6b
 2356 0541 86020000 		.4byte	.LLST20
 2357 0545 11       		.uleb128 0x11
 2358 0546 FC010000 		.4byte	.LASF53
 2359 054a 01       		.byte	0x1
 2360 054b 5109     		.2byte	0x951
 2361 054d 83000000 		.4byte	0x83
 2362 0551 99020000 		.4byte	.LLST21
 2363 0555 11       		.uleb128 0x11
 2364 0556 52020000 		.4byte	.LASF43
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 98


 2365 055a 01       		.byte	0x1
 2366 055b 5209     		.2byte	0x952
 2367 055d 83000000 		.4byte	0x83
 2368 0561 B7020000 		.4byte	.LLST22
 2369 0565 12       		.uleb128 0x12
 2370 0566 0A000000 		.4byte	.LVL48
 2371 056a 420A0000 		.4byte	0xa42
 2372 056e 12       		.uleb128 0x12
 2373 056f 2A000000 		.4byte	.LVL53
 2374 0573 4D0A0000 		.4byte	0xa4d
 2375 0577 00       		.byte	0
 2376 0578 14       		.uleb128 0x14
 2377 0579 26020000 		.4byte	.LASF54
 2378 057d 01       		.byte	0x1
 2379 057e 7009     		.2byte	0x970
 2380 0580 6B000000 		.4byte	0x6b
 2381 0584 00000000 		.4byte	.LFB16
 2382 0588 20000000 		.4byte	.LFE16-.LFB16
 2383 058c 01       		.uleb128 0x1
 2384 058d 9C       		.byte	0x9c
 2385 058e B3050000 		.4byte	0x5b3
 2386 0592 10       		.uleb128 0x10
 2387 0593 17030000 		.4byte	.LASF44
 2388 0597 01       		.byte	0x1
 2389 0598 7009     		.2byte	0x970
 2390 059a 6B000000 		.4byte	0x6b
 2391 059e CA020000 		.4byte	.LLST23
 2392 05a2 11       		.uleb128 0x11
 2393 05a3 1E030000 		.4byte	.LASF52
 2394 05a7 01       		.byte	0x1
 2395 05a8 7209     		.2byte	0x972
 2396 05aa 6B000000 		.4byte	0x6b
 2397 05ae EB020000 		.4byte	.LLST24
 2398 05b2 00       		.byte	0
 2399 05b3 0B       		.uleb128 0xb
 2400 05b4 72040000 		.4byte	.LASF56
 2401 05b8 01       		.byte	0x1
 2402 05b9 8509     		.2byte	0x985
 2403 05bb 01       		.byte	0x1
 2404 05bc CD050000 		.4byte	0x5cd
 2405 05c0 0C       		.uleb128 0xc
 2406 05c1 17030000 		.4byte	.LASF44
 2407 05c5 01       		.byte	0x1
 2408 05c6 8509     		.2byte	0x985
 2409 05c8 6B000000 		.4byte	0x6b
 2410 05cc 00       		.byte	0
 2411 05cd 1B       		.uleb128 0x1b
 2412 05ce B3050000 		.4byte	0x5b3
 2413 05d2 00000000 		.4byte	.LFB17
 2414 05d6 14000000 		.4byte	.LFE17-.LFB17
 2415 05da 01       		.uleb128 0x1
 2416 05db 9C       		.byte	0x9c
 2417 05dc EA050000 		.4byte	0x5ea
 2418 05e0 1C       		.uleb128 0x1c
 2419 05e1 C0050000 		.4byte	0x5c0
 2420 05e5 0C030000 		.4byte	.LLST25
 2421 05e9 00       		.byte	0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 99


 2422 05ea 14       		.uleb128 0x14
 2423 05eb 53010000 		.4byte	.LASF57
 2424 05ef 01       		.byte	0x1
 2425 05f0 9709     		.2byte	0x997
 2426 05f2 6B000000 		.4byte	0x6b
 2427 05f6 00000000 		.4byte	.LFB18
 2428 05fa 18000000 		.4byte	.LFE18-.LFB18
 2429 05fe 01       		.uleb128 0x1
 2430 05ff 9C       		.byte	0x9c
 2431 0600 15060000 		.4byte	0x615
 2432 0604 10       		.uleb128 0x10
 2433 0605 17030000 		.4byte	.LASF44
 2434 0609 01       		.byte	0x1
 2435 060a 9709     		.2byte	0x997
 2436 060c 6B000000 		.4byte	0x6b
 2437 0610 2D030000 		.4byte	.LLST26
 2438 0614 00       		.byte	0
 2439 0615 0F       		.uleb128 0xf
 2440 0616 B7010000 		.4byte	.LASF58
 2441 061a 01       		.byte	0x1
 2442 061b A709     		.2byte	0x9a7
 2443 061d 00000000 		.4byte	.LFB19
 2444 0621 14000000 		.4byte	.LFE19-.LFB19
 2445 0625 01       		.uleb128 0x1
 2446 0626 9C       		.byte	0x9c
 2447 0627 3C060000 		.4byte	0x63c
 2448 062b 10       		.uleb128 0x10
 2449 062c 17030000 		.4byte	.LASF44
 2450 0630 01       		.byte	0x1
 2451 0631 A709     		.2byte	0x9a7
 2452 0633 6B000000 		.4byte	0x6b
 2453 0637 4E030000 		.4byte	.LLST27
 2454 063b 00       		.byte	0
 2455 063c 0F       		.uleb128 0xf
 2456 063d D1020000 		.4byte	.LASF59
 2457 0641 01       		.byte	0x1
 2458 0642 B509     		.2byte	0x9b5
 2459 0644 00000000 		.4byte	.LFB20
 2460 0648 14000000 		.4byte	.LFE20-.LFB20
 2461 064c 01       		.uleb128 0x1
 2462 064d 9C       		.byte	0x9c
 2463 064e 63060000 		.4byte	0x663
 2464 0652 10       		.uleb128 0x10
 2465 0653 17030000 		.4byte	.LASF44
 2466 0657 01       		.byte	0x1
 2467 0658 B509     		.2byte	0x9b5
 2468 065a 6B000000 		.4byte	0x6b
 2469 065e 6F030000 		.4byte	.LLST28
 2470 0662 00       		.byte	0
 2471 0663 0F       		.uleb128 0xf
 2472 0664 8E030000 		.4byte	.LASF60
 2473 0668 01       		.byte	0x1
 2474 0669 C409     		.2byte	0x9c4
 2475 066b 00000000 		.4byte	.LFB21
 2476 066f 14000000 		.4byte	.LFE21-.LFB21
 2477 0673 01       		.uleb128 0x1
 2478 0674 9C       		.byte	0x9c
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 100


 2479 0675 8A060000 		.4byte	0x68a
 2480 0679 10       		.uleb128 0x10
 2481 067a 17030000 		.4byte	.LASF44
 2482 067e 01       		.byte	0x1
 2483 067f C409     		.2byte	0x9c4
 2484 0681 6B000000 		.4byte	0x6b
 2485 0685 90030000 		.4byte	.LLST29
 2486 0689 00       		.byte	0
 2487 068a 0F       		.uleb128 0xf
 2488 068b 4C040000 		.4byte	.LASF61
 2489 068f 01       		.byte	0x1
 2490 0690 D309     		.2byte	0x9d3
 2491 0692 00000000 		.4byte	.LFB22
 2492 0696 04000000 		.4byte	.LFE22-.LFB22
 2493 069a 01       		.uleb128 0x1
 2494 069b 9C       		.byte	0x9c
 2495 069c AF060000 		.4byte	0x6af
 2496 06a0 13       		.uleb128 0x13
 2497 06a1 61040000 		.4byte	.LASF37
 2498 06a5 01       		.byte	0x1
 2499 06a6 D309     		.2byte	0x9d3
 2500 06a8 6B000000 		.4byte	0x6b
 2501 06ac 01       		.uleb128 0x1
 2502 06ad 50       		.byte	0x50
 2503 06ae 00       		.byte	0
 2504 06af 21       		.uleb128 0x21
 2505 06b0 2A010000 		.4byte	.LASF62
 2506 06b4 01       		.byte	0x1
 2507 06b5 EB09     		.2byte	0x9eb
 2508 06b7 00000000 		.4byte	.LFB23
 2509 06bb 18000000 		.4byte	.LFE23-.LFB23
 2510 06bf 01       		.uleb128 0x1
 2511 06c0 9C       		.byte	0x9c
 2512 06c1 0F       		.uleb128 0xf
 2513 06c2 E9050000 		.4byte	.LASF63
 2514 06c6 01       		.byte	0x1
 2515 06c7 FF09     		.2byte	0x9ff
 2516 06c9 00000000 		.4byte	.LFB24
 2517 06cd 2C000000 		.4byte	.LFE24-.LFB24
 2518 06d1 01       		.uleb128 0x1
 2519 06d2 9C       		.byte	0x9c
 2520 06d3 FA060000 		.4byte	0x6fa
 2521 06d7 10       		.uleb128 0x10
 2522 06d8 2C040000 		.4byte	.LASF64
 2523 06dc 01       		.byte	0x1
 2524 06dd FF09     		.2byte	0x9ff
 2525 06df 83000000 		.4byte	0x83
 2526 06e3 B1030000 		.4byte	.LLST30
 2527 06e7 12       		.uleb128 0x12
 2528 06e8 14000000 		.4byte	.LVL71
 2529 06ec 5E0A0000 		.4byte	0xa5e
 2530 06f0 12       		.uleb128 0x12
 2531 06f1 22000000 		.4byte	.LVL73
 2532 06f5 5E0A0000 		.4byte	0xa5e
 2533 06f9 00       		.byte	0
 2534 06fa 0F       		.uleb128 0xf
 2535 06fb 9A040000 		.4byte	.LASF65
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 101


 2536 06ff 01       		.byte	0x1
 2537 0700 160A     		.2byte	0xa16
 2538 0702 00000000 		.4byte	.LFB25
 2539 0706 14000000 		.4byte	.LFE25-.LFB25
 2540 070a 01       		.uleb128 0x1
 2541 070b 9C       		.byte	0x9c
 2542 070c 2A070000 		.4byte	0x72a
 2543 0710 10       		.uleb128 0x10
 2544 0711 60060000 		.4byte	.LASF66
 2545 0715 01       		.byte	0x1
 2546 0716 160A     		.2byte	0xa16
 2547 0718 77000000 		.4byte	0x77
 2548 071c CF030000 		.4byte	.LLST31
 2549 0720 12       		.uleb128 0x12
 2550 0721 0C000000 		.4byte	.LVL77
 2551 0725 5E0A0000 		.4byte	0xa5e
 2552 0729 00       		.byte	0
 2553 072a 22       		.uleb128 0x22
 2554 072b 80010000 		.4byte	.LASF67
 2555 072f 01       		.byte	0x1
 2556 0730 240A     		.2byte	0xa24
 2557 0732 00000000 		.4byte	.LFB26
 2558 0736 48000000 		.4byte	.LFE26-.LFB26
 2559 073a 01       		.uleb128 0x1
 2560 073b 9C       		.byte	0x9c
 2561 073c 51070000 		.4byte	0x751
 2562 0740 10       		.uleb128 0x10
 2563 0741 7B010000 		.4byte	.LASF32
 2564 0745 01       		.byte	0x1
 2565 0746 240A     		.2byte	0xa24
 2566 0748 83000000 		.4byte	0x83
 2567 074c F0030000 		.4byte	.LLST32
 2568 0750 00       		.byte	0
 2569 0751 22       		.uleb128 0x22
 2570 0752 44020000 		.4byte	.LASF68
 2571 0756 01       		.byte	0x1
 2572 0757 610A     		.2byte	0xa61
 2573 0759 00000000 		.4byte	.LFB28
 2574 075d 50000000 		.4byte	.LFE28-.LFB28
 2575 0761 01       		.uleb128 0x1
 2576 0762 9C       		.byte	0x9c
 2577 0763 FC070000 		.4byte	0x7fc
 2578 0767 23       		.uleb128 0x23
 2579 0768 6900     		.ascii	"i\000"
 2580 076a 01       		.byte	0x1
 2581 076b 630A     		.2byte	0xa63
 2582 076d 83000000 		.4byte	0x83
 2583 0771 11040000 		.4byte	.LLST33
 2584 0775 24       		.uleb128 0x24
 2585 0776 B6030000 		.4byte	0x3b6
 2586 077a 08000000 		.4byte	.LBB14
 2587 077e 00000000 		.4byte	.Ldebug_ranges0+0
 2588 0782 01       		.byte	0x1
 2589 0783 6A0A     		.2byte	0xa6a
 2590 0785 B4070000 		.4byte	0x7b4
 2591 0789 1D       		.uleb128 0x1d
 2592 078a D3030000 		.4byte	0x3d3
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 102


 2593 078e 06       		.uleb128 0x6
 2594 078f 03       		.byte	0x3
 2595 0790 00000000 		.4byte	CySysTickServiceCallbacks
 2596 0794 9F       		.byte	0x9f
 2597 0795 25       		.uleb128 0x25
 2598 0796 C7030000 		.4byte	0x3c7
 2599 079a 0F       		.byte	0xf
 2600 079b 26       		.uleb128 0x26
 2601 079c 00000000 		.4byte	.Ldebug_ranges0+0
 2602 07a0 27       		.uleb128 0x27
 2603 07a1 DF030000 		.4byte	0x3df
 2604 07a5 55040000 		.4byte	.LLST34
 2605 07a9 1F       		.uleb128 0x1f
 2606 07aa EB030000 		.4byte	0x3eb
 2607 07ae 00000020 		.4byte	0x20000000
 2608 07b2 00       		.byte	0
 2609 07b3 00       		.byte	0
 2610 07b4 24       		.uleb128 0x24
 2611 07b5 B3050000 		.4byte	0x5b3
 2612 07b9 22000000 		.4byte	.LBB20
 2613 07bd 20000000 		.4byte	.Ldebug_ranges0+0x20
 2614 07c1 01       		.byte	0x1
 2615 07c2 720A     		.2byte	0xa72
 2616 07c4 CF070000 		.4byte	0x7cf
 2617 07c8 25       		.uleb128 0x25
 2618 07c9 C0050000 		.4byte	0x5c0
 2619 07cd 0F       		.byte	0xf
 2620 07ce 00       		.byte	0
 2621 07cf 24       		.uleb128 0x24
 2622 07d0 03010000 		.4byte	0x103
 2623 07d4 24000000 		.4byte	.LBB24
 2624 07d8 40000000 		.4byte	.Ldebug_ranges0+0x40
 2625 07dc 01       		.byte	0x1
 2626 07dd 700A     		.2byte	0xa70
 2627 07df EB070000 		.4byte	0x7eb
 2628 07e3 1D       		.uleb128 0x1d
 2629 07e4 10010000 		.4byte	0x110
 2630 07e8 01       		.uleb128 0x1
 2631 07e9 50       		.byte	0x50
 2632 07ea 00       		.byte	0
 2633 07eb 28       		.uleb128 0x28
 2634 07ec 1D010000 		.4byte	0x11d
 2635 07f0 2A000000 		.4byte	.LBB29
 2636 07f4 04000000 		.4byte	.LBE29-.LBB29
 2637 07f8 01       		.byte	0x1
 2638 07f9 710A     		.2byte	0xa71
 2639 07fb 00       		.byte	0
 2640 07fc 21       		.uleb128 0x21
 2641 07fd 1A060000 		.4byte	.LASF69
 2642 0801 01       		.byte	0x1
 2643 0802 910A     		.2byte	0xa91
 2644 0804 00000000 		.4byte	.LFB30
 2645 0808 10000000 		.4byte	.LFE30-.LFB30
 2646 080c 01       		.uleb128 0x1
 2647 080d 9C       		.byte	0x9c
 2648 080e 21       		.uleb128 0x21
 2649 080f 3A010000 		.4byte	.LASF70
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 103


 2650 0813 01       		.byte	0x1
 2651 0814 A10A     		.2byte	0xaa1
 2652 0816 00000000 		.4byte	.LFB31
 2653 081a 10000000 		.4byte	.LFE31-.LFB31
 2654 081e 01       		.uleb128 0x1
 2655 081f 9C       		.byte	0x9c
 2656 0820 0F       		.uleb128 0xf
 2657 0821 D0040000 		.4byte	.LASF71
 2658 0825 01       		.byte	0x1
 2659 0826 800A     		.2byte	0xa80
 2660 0828 00000000 		.4byte	.LFB29
 2661 082c 18000000 		.4byte	.LFE29-.LFB29
 2662 0830 01       		.uleb128 0x1
 2663 0831 9C       		.byte	0x9c
 2664 0832 40080000 		.4byte	0x840
 2665 0836 12       		.uleb128 0x12
 2666 0837 06000000 		.4byte	.LVL91
 2667 083b 0E080000 		.4byte	0x80e
 2668 083f 00       		.byte	0
 2669 0840 0F       		.uleb128 0xf
 2670 0841 69030000 		.4byte	.LASF72
 2671 0845 01       		.byte	0x1
 2672 0846 440A     		.2byte	0xa44
 2673 0848 00000000 		.4byte	.LFB27
 2674 084c 1C000000 		.4byte	.LFE27-.LFB27
 2675 0850 01       		.uleb128 0x1
 2676 0851 9C       		.byte	0x9c
 2677 0852 69080000 		.4byte	0x869
 2678 0856 12       		.uleb128 0x12
 2679 0857 0E000000 		.4byte	.LVL92
 2680 085b 51070000 		.4byte	0x751
 2681 085f 12       		.uleb128 0x12
 2682 0860 16000000 		.4byte	.LVL93
 2683 0864 20080000 		.4byte	0x820
 2684 0868 00       		.byte	0
 2685 0869 21       		.uleb128 0x21
 2686 086a F1050000 		.4byte	.LASF73
 2687 086e 01       		.byte	0x1
 2688 086f B10A     		.2byte	0xab1
 2689 0871 00000000 		.4byte	.LFB32
 2690 0875 10000000 		.4byte	.LFE32-.LFB32
 2691 0879 01       		.uleb128 0x1
 2692 087a 9C       		.byte	0x9c
 2693 087b 1B       		.uleb128 0x1b
 2694 087c 03010000 		.4byte	0x103
 2695 0880 00000000 		.4byte	.LFB33
 2696 0884 10000000 		.4byte	.LFE33-.LFB33
 2697 0888 01       		.uleb128 0x1
 2698 0889 9C       		.byte	0x9c
 2699 088a 98080000 		.4byte	0x898
 2700 088e 1C       		.uleb128 0x1c
 2701 088f 10010000 		.4byte	0x110
 2702 0893 78040000 		.4byte	.LLST35
 2703 0897 00       		.byte	0
 2704 0898 29       		.uleb128 0x29
 2705 0899 9B010000 		.4byte	.LASF74
 2706 089d 01       		.byte	0x1
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 104


 2707 089e D20A     		.2byte	0xad2
 2708 08a0 83000000 		.4byte	0x83
 2709 08a4 00000000 		.4byte	.LFB34
 2710 08a8 10000000 		.4byte	.LFE34-.LFB34
 2711 08ac 01       		.uleb128 0x1
 2712 08ad 9C       		.byte	0x9c
 2713 08ae 29       		.uleb128 0x29
 2714 08af BE030000 		.4byte	.LASF75
 2715 08b3 01       		.byte	0x1
 2716 08b4 E20A     		.2byte	0xae2
 2717 08b6 83000000 		.4byte	0x83
 2718 08ba 00000000 		.4byte	.LFB35
 2719 08be 10000000 		.4byte	.LFE35-.LFB35
 2720 08c2 01       		.uleb128 0x1
 2721 08c3 9C       		.byte	0x9c
 2722 08c4 29       		.uleb128 0x29
 2723 08c5 66020000 		.4byte	.LASF76
 2724 08c9 01       		.byte	0x1
 2725 08ca 320B     		.2byte	0xb32
 2726 08cc 83000000 		.4byte	0x83
 2727 08d0 00000000 		.4byte	.LFB36
 2728 08d4 10000000 		.4byte	.LFE36-.LFB36
 2729 08d8 01       		.uleb128 0x1
 2730 08d9 9C       		.byte	0x9c
 2731 08da 2A       		.uleb128 0x2a
 2732 08db EB000000 		.4byte	0xeb
 2733 08df 00000000 		.4byte	.LFB40
 2734 08e3 24000000 		.4byte	.LFE40-.LFB40
 2735 08e7 01       		.uleb128 0x1
 2736 08e8 9C       		.byte	0x9c
 2737 08e9 0F090000 		.4byte	0x90f
 2738 08ed 2B       		.uleb128 0x2b
 2739 08ee F8000000 		.4byte	0xf8
 2740 08f2 2C       		.uleb128 0x2c
 2741 08f3 0C000000 		.4byte	.LBB34
 2742 08f7 10000000 		.4byte	.LBE34-.LBB34
 2743 08fb 05090000 		.4byte	0x905
 2744 08ff 2B       		.uleb128 0x2b
 2745 0900 F8000000 		.4byte	0xf8
 2746 0904 00       		.byte	0
 2747 0905 12       		.uleb128 0x12
 2748 0906 06000000 		.4byte	.LVL96
 2749 090a C4080000 		.4byte	0x8c4
 2750 090e 00       		.byte	0
 2751 090f 2D       		.uleb128 0x2d
 2752 0910 1D010000 		.4byte	0x11d
 2753 0914 00000000 		.4byte	.LFB37
 2754 0918 0C000000 		.4byte	.LFE37-.LFB37
 2755 091c 01       		.uleb128 0x1
 2756 091d 9C       		.byte	0x9c
 2757 091e 14       		.uleb128 0x14
 2758 091f AA050000 		.4byte	.LASF77
 2759 0923 01       		.byte	0x1
 2760 0924 620B     		.2byte	0xb62
 2761 0926 E0000000 		.4byte	0xe0
 2762 092a 00000000 		.4byte	.LFB38
 2763 092e 10000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 105


 2764 0932 01       		.uleb128 0x1
 2765 0933 9C       		.byte	0x9c
 2766 0934 65090000 		.4byte	0x965
 2767 0938 10       		.uleb128 0x10
 2768 0939 17030000 		.4byte	.LASF44
 2769 093d 01       		.byte	0x1
 2770 093e 620B     		.2byte	0xb62
 2771 0940 83000000 		.4byte	0x83
 2772 0944 99040000 		.4byte	.LLST36
 2773 0948 13       		.uleb128 0x13
 2774 0949 B5030000 		.4byte	.LASF78
 2775 094d 01       		.byte	0x1
 2776 094e 620B     		.2byte	0xb62
 2777 0950 E0000000 		.4byte	0xe0
 2778 0954 01       		.uleb128 0x1
 2779 0955 51       		.byte	0x51
 2780 0956 18       		.uleb128 0x18
 2781 0957 E0000000 		.4byte	.LASF79
 2782 095b 01       		.byte	0x1
 2783 095c 640B     		.2byte	0xb64
 2784 095e E0000000 		.4byte	0xe0
 2785 0962 01       		.uleb128 0x1
 2786 0963 50       		.byte	0x50
 2787 0964 00       		.byte	0
 2788 0965 14       		.uleb128 0x14
 2789 0966 C4010000 		.4byte	.LASF80
 2790 096a 01       		.byte	0x1
 2791 096b 7A0B     		.2byte	0xb7a
 2792 096d E0000000 		.4byte	0xe0
 2793 0971 00000000 		.4byte	.LFB39
 2794 0975 0C000000 		.4byte	.LFE39-.LFB39
 2795 0979 01       		.uleb128 0x1
 2796 097a 9C       		.byte	0x9c
 2797 097b 90090000 		.4byte	0x990
 2798 097f 10       		.uleb128 0x10
 2799 0980 17030000 		.4byte	.LASF44
 2800 0984 01       		.byte	0x1
 2801 0985 7A0B     		.2byte	0xb7a
 2802 0987 83000000 		.4byte	0x83
 2803 098b BA040000 		.4byte	.LLST37
 2804 098f 00       		.byte	0
 2805 0990 0F       		.uleb128 0xf
 2806 0991 58020000 		.4byte	.LASF81
 2807 0995 01       		.byte	0x1
 2808 0996 A70B     		.2byte	0xba7
 2809 0998 00000000 		.4byte	.LFB41
 2810 099c 70000000 		.4byte	.LFE41-.LFB41
 2811 09a0 01       		.uleb128 0x1
 2812 09a1 9C       		.byte	0x9c
 2813 09a2 B5090000 		.4byte	0x9b5
 2814 09a6 13       		.uleb128 0x13
 2815 09a7 E0050000 		.4byte	.LASF82
 2816 09ab 01       		.byte	0x1
 2817 09ac A70B     		.2byte	0xba7
 2818 09ae B5090000 		.4byte	0x9b5
 2819 09b2 01       		.uleb128 0x1
 2820 09b3 50       		.byte	0x50
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 106


 2821 09b4 00       		.byte	0
 2822 09b5 06       		.uleb128 0x6
 2823 09b6 04       		.byte	0x4
 2824 09b7 83000000 		.4byte	0x83
 2825 09bb 2E       		.uleb128 0x2e
 2826 09bc E0000000 		.4byte	0xe0
 2827 09c0 CB090000 		.4byte	0x9cb
 2828 09c4 2F       		.uleb128 0x2f
 2829 09c5 D9000000 		.4byte	0xd9
 2830 09c9 04       		.byte	0x4
 2831 09ca 00       		.byte	0
 2832 09cb 30       		.uleb128 0x30
 2833 09cc BF050000 		.4byte	.LASF83
 2834 09d0 01       		.byte	0x1
 2835 09d1 22       		.byte	0x22
 2836 09d2 BB090000 		.4byte	0x9bb
 2837 09d6 05       		.uleb128 0x5
 2838 09d7 03       		.byte	0x3
 2839 09d8 00000000 		.4byte	CySysTickCallbacks
 2840 09dc 31       		.uleb128 0x31
 2841 09dd D0030000 		.4byte	.LASF84
 2842 09e1 01       		.byte	0x1
 2843 09e2 1B       		.byte	0x1b
 2844 09e3 83000000 		.4byte	0x83
 2845 09e7 05       		.uleb128 0x5
 2846 09e8 03       		.byte	0x3
 2847 09e9 00000000 		.4byte	cydelayFreqHz
 2848 09ed 31       		.uleb128 0x31
 2849 09ee DF010000 		.4byte	.LASF85
 2850 09f2 01       		.byte	0x1
 2851 09f3 1C       		.byte	0x1c
 2852 09f4 83000000 		.4byte	0x83
 2853 09f8 05       		.uleb128 0x5
 2854 09f9 03       		.byte	0x3
 2855 09fa 00000000 		.4byte	cydelayFreqKhz
 2856 09fe 31       		.uleb128 0x31
 2857 09ff 0B060000 		.4byte	.LASF86
 2858 0a03 01       		.byte	0x1
 2859 0a04 1D       		.byte	0x1d
 2860 0a05 6B000000 		.4byte	0x6b
 2861 0a09 05       		.uleb128 0x5
 2862 0a0a 03       		.byte	0x3
 2863 0a0b 00000000 		.4byte	cydelayFreqMhz
 2864 0a0f 31       		.uleb128 0x31
 2865 0a10 37020000 		.4byte	.LASF87
 2866 0a14 01       		.byte	0x1
 2867 0a15 1E       		.byte	0x1e
 2868 0a16 83000000 		.4byte	0x83
 2869 0a1a 05       		.uleb128 0x5
 2870 0a1b 03       		.byte	0x3
 2871 0a1c 00000000 		.4byte	cydelay32kMs
 2872 0a20 31       		.uleb128 0x31
 2873 0a21 0C010000 		.4byte	.LASF88
 2874 0a25 01       		.byte	0x1
 2875 0a26 36       		.byte	0x36
 2876 0a27 83000000 		.4byte	0x83
 2877 0a2b 05       		.uleb128 0x5
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 107


 2878 0a2c 03       		.byte	0x3
 2879 0a2d 00000000 		.4byte	CySysTickInitVar
 2880 0a31 31       		.uleb128 0x31
 2881 0a32 C6000000 		.4byte	.LASF89
 2882 0a36 01       		.byte	0x1
 2883 0a37 5B       		.byte	0x5b
 2884 0a38 83000000 		.4byte	0x83
 2885 0a3c 05       		.uleb128 0x5
 2886 0a3d 03       		.byte	0x3
 2887 0a3e 00000000 		.4byte	CySysClkPumpConfig
 2888 0a42 32       		.uleb128 0x32
 2889 0a43 BA020000 		.4byte	.LASF97
 2890 0a47 03       		.byte	0x3
 2891 0a48 E5       		.byte	0xe5
 2892 0a49 6B000000 		.4byte	0x6b
 2893 0a4d 33       		.uleb128 0x33
 2894 0a4e F5030000 		.4byte	.LASF90
 2895 0a52 03       		.byte	0x3
 2896 0a53 E6       		.byte	0xe6
 2897 0a54 5E0A0000 		.4byte	0xa5e
 2898 0a58 34       		.uleb128 0x34
 2899 0a59 6B000000 		.4byte	0x6b
 2900 0a5d 00       		.byte	0
 2901 0a5e 35       		.uleb128 0x35
 2902 0a5f 39040000 		.4byte	.LASF98
 2903 0a63 03       		.byte	0x3
 2904 0a64 DC       		.byte	0xdc
 2905 0a65 34       		.uleb128 0x34
 2906 0a66 83000000 		.4byte	0x83
 2907 0a6a 00       		.byte	0
 2908 0a6b 00       		.byte	0
 2909              		.section	.debug_abbrev,"",%progbits
 2910              	.Ldebug_abbrev0:
 2911 0000 01       		.uleb128 0x1
 2912 0001 11       		.uleb128 0x11
 2913 0002 01       		.byte	0x1
 2914 0003 25       		.uleb128 0x25
 2915 0004 0E       		.uleb128 0xe
 2916 0005 13       		.uleb128 0x13
 2917 0006 0B       		.uleb128 0xb
 2918 0007 03       		.uleb128 0x3
 2919 0008 0E       		.uleb128 0xe
 2920 0009 1B       		.uleb128 0x1b
 2921 000a 0E       		.uleb128 0xe
 2922 000b 55       		.uleb128 0x55
 2923 000c 17       		.uleb128 0x17
 2924 000d 11       		.uleb128 0x11
 2925 000e 01       		.uleb128 0x1
 2926 000f 10       		.uleb128 0x10
 2927 0010 17       		.uleb128 0x17
 2928 0011 00       		.byte	0
 2929 0012 00       		.byte	0
 2930 0013 02       		.uleb128 0x2
 2931 0014 24       		.uleb128 0x24
 2932 0015 00       		.byte	0
 2933 0016 0B       		.uleb128 0xb
 2934 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 108


 2935 0018 3E       		.uleb128 0x3e
 2936 0019 0B       		.uleb128 0xb
 2937 001a 03       		.uleb128 0x3
 2938 001b 0E       		.uleb128 0xe
 2939 001c 00       		.byte	0
 2940 001d 00       		.byte	0
 2941 001e 03       		.uleb128 0x3
 2942 001f 24       		.uleb128 0x24
 2943 0020 00       		.byte	0
 2944 0021 0B       		.uleb128 0xb
 2945 0022 0B       		.uleb128 0xb
 2946 0023 3E       		.uleb128 0x3e
 2947 0024 0B       		.uleb128 0xb
 2948 0025 03       		.uleb128 0x3
 2949 0026 08       		.uleb128 0x8
 2950 0027 00       		.byte	0
 2951 0028 00       		.byte	0
 2952 0029 04       		.uleb128 0x4
 2953 002a 16       		.uleb128 0x16
 2954 002b 00       		.byte	0
 2955 002c 03       		.uleb128 0x3
 2956 002d 0E       		.uleb128 0xe
 2957 002e 3A       		.uleb128 0x3a
 2958 002f 0B       		.uleb128 0xb
 2959 0030 3B       		.uleb128 0x3b
 2960 0031 05       		.uleb128 0x5
 2961 0032 49       		.uleb128 0x49
 2962 0033 13       		.uleb128 0x13
 2963 0034 00       		.byte	0
 2964 0035 00       		.byte	0
 2965 0036 05       		.uleb128 0x5
 2966 0037 35       		.uleb128 0x35
 2967 0038 00       		.byte	0
 2968 0039 49       		.uleb128 0x49
 2969 003a 13       		.uleb128 0x13
 2970 003b 00       		.byte	0
 2971 003c 00       		.byte	0
 2972 003d 06       		.uleb128 0x6
 2973 003e 0F       		.uleb128 0xf
 2974 003f 00       		.byte	0
 2975 0040 0B       		.uleb128 0xb
 2976 0041 0B       		.uleb128 0xb
 2977 0042 49       		.uleb128 0x49
 2978 0043 13       		.uleb128 0x13
 2979 0044 00       		.byte	0
 2980 0045 00       		.byte	0
 2981 0046 07       		.uleb128 0x7
 2982 0047 15       		.uleb128 0x15
 2983 0048 00       		.byte	0
 2984 0049 27       		.uleb128 0x27
 2985 004a 19       		.uleb128 0x19
 2986 004b 00       		.byte	0
 2987 004c 00       		.byte	0
 2988 004d 08       		.uleb128 0x8
 2989 004e 16       		.uleb128 0x16
 2990 004f 00       		.byte	0
 2991 0050 03       		.uleb128 0x3
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 109


 2992 0051 0E       		.uleb128 0xe
 2993 0052 3A       		.uleb128 0x3a
 2994 0053 0B       		.uleb128 0xb
 2995 0054 3B       		.uleb128 0x3b
 2996 0055 0B       		.uleb128 0xb
 2997 0056 49       		.uleb128 0x49
 2998 0057 13       		.uleb128 0x13
 2999 0058 00       		.byte	0
 3000 0059 00       		.byte	0
 3001 005a 09       		.uleb128 0x9
 3002 005b 2E       		.uleb128 0x2e
 3003 005c 01       		.byte	0x1
 3004 005d 03       		.uleb128 0x3
 3005 005e 0E       		.uleb128 0xe
 3006 005f 3A       		.uleb128 0x3a
 3007 0060 0B       		.uleb128 0xb
 3008 0061 3B       		.uleb128 0x3b
 3009 0062 05       		.uleb128 0x5
 3010 0063 27       		.uleb128 0x27
 3011 0064 19       		.uleb128 0x19
 3012 0065 20       		.uleb128 0x20
 3013 0066 0B       		.uleb128 0xb
 3014 0067 01       		.uleb128 0x1
 3015 0068 13       		.uleb128 0x13
 3016 0069 00       		.byte	0
 3017 006a 00       		.byte	0
 3018 006b 0A       		.uleb128 0xa
 3019 006c 34       		.uleb128 0x34
 3020 006d 00       		.byte	0
 3021 006e 03       		.uleb128 0x3
 3022 006f 08       		.uleb128 0x8
 3023 0070 3A       		.uleb128 0x3a
 3024 0071 0B       		.uleb128 0xb
 3025 0072 3B       		.uleb128 0x3b
 3026 0073 05       		.uleb128 0x5
 3027 0074 49       		.uleb128 0x49
 3028 0075 13       		.uleb128 0x13
 3029 0076 00       		.byte	0
 3030 0077 00       		.byte	0
 3031 0078 0B       		.uleb128 0xb
 3032 0079 2E       		.uleb128 0x2e
 3033 007a 01       		.byte	0x1
 3034 007b 3F       		.uleb128 0x3f
 3035 007c 19       		.uleb128 0x19
 3036 007d 03       		.uleb128 0x3
 3037 007e 0E       		.uleb128 0xe
 3038 007f 3A       		.uleb128 0x3a
 3039 0080 0B       		.uleb128 0xb
 3040 0081 3B       		.uleb128 0x3b
 3041 0082 05       		.uleb128 0x5
 3042 0083 27       		.uleb128 0x27
 3043 0084 19       		.uleb128 0x19
 3044 0085 20       		.uleb128 0x20
 3045 0086 0B       		.uleb128 0xb
 3046 0087 01       		.uleb128 0x1
 3047 0088 13       		.uleb128 0x13
 3048 0089 00       		.byte	0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 110


 3049 008a 00       		.byte	0
 3050 008b 0C       		.uleb128 0xc
 3051 008c 05       		.uleb128 0x5
 3052 008d 00       		.byte	0
 3053 008e 03       		.uleb128 0x3
 3054 008f 0E       		.uleb128 0xe
 3055 0090 3A       		.uleb128 0x3a
 3056 0091 0B       		.uleb128 0xb
 3057 0092 3B       		.uleb128 0x3b
 3058 0093 05       		.uleb128 0x5
 3059 0094 49       		.uleb128 0x49
 3060 0095 13       		.uleb128 0x13
 3061 0096 00       		.byte	0
 3062 0097 00       		.byte	0
 3063 0098 0D       		.uleb128 0xd
 3064 0099 2E       		.uleb128 0x2e
 3065 009a 00       		.byte	0
 3066 009b 3F       		.uleb128 0x3f
 3067 009c 19       		.uleb128 0x19
 3068 009d 03       		.uleb128 0x3
 3069 009e 0E       		.uleb128 0xe
 3070 009f 3A       		.uleb128 0x3a
 3071 00a0 0B       		.uleb128 0xb
 3072 00a1 3B       		.uleb128 0x3b
 3073 00a2 05       		.uleb128 0x5
 3074 00a3 27       		.uleb128 0x27
 3075 00a4 19       		.uleb128 0x19
 3076 00a5 20       		.uleb128 0x20
 3077 00a6 0B       		.uleb128 0xb
 3078 00a7 00       		.byte	0
 3079 00a8 00       		.byte	0
 3080 00a9 0E       		.uleb128 0xe
 3081 00aa 2E       		.uleb128 0x2e
 3082 00ab 00       		.byte	0
 3083 00ac 3F       		.uleb128 0x3f
 3084 00ad 19       		.uleb128 0x19
 3085 00ae 03       		.uleb128 0x3
 3086 00af 0E       		.uleb128 0xe
 3087 00b0 3A       		.uleb128 0x3a
 3088 00b1 0B       		.uleb128 0xb
 3089 00b2 3B       		.uleb128 0x3b
 3090 00b3 0B       		.uleb128 0xb
 3091 00b4 27       		.uleb128 0x27
 3092 00b5 19       		.uleb128 0x19
 3093 00b6 11       		.uleb128 0x11
 3094 00b7 01       		.uleb128 0x1
 3095 00b8 12       		.uleb128 0x12
 3096 00b9 06       		.uleb128 0x6
 3097 00ba 40       		.uleb128 0x40
 3098 00bb 18       		.uleb128 0x18
 3099 00bc 9742     		.uleb128 0x2117
 3100 00be 19       		.uleb128 0x19
 3101 00bf 00       		.byte	0
 3102 00c0 00       		.byte	0
 3103 00c1 0F       		.uleb128 0xf
 3104 00c2 2E       		.uleb128 0x2e
 3105 00c3 01       		.byte	0x1
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 111


 3106 00c4 3F       		.uleb128 0x3f
 3107 00c5 19       		.uleb128 0x19
 3108 00c6 03       		.uleb128 0x3
 3109 00c7 0E       		.uleb128 0xe
 3110 00c8 3A       		.uleb128 0x3a
 3111 00c9 0B       		.uleb128 0xb
 3112 00ca 3B       		.uleb128 0x3b
 3113 00cb 05       		.uleb128 0x5
 3114 00cc 27       		.uleb128 0x27
 3115 00cd 19       		.uleb128 0x19
 3116 00ce 11       		.uleb128 0x11
 3117 00cf 01       		.uleb128 0x1
 3118 00d0 12       		.uleb128 0x12
 3119 00d1 06       		.uleb128 0x6
 3120 00d2 40       		.uleb128 0x40
 3121 00d3 18       		.uleb128 0x18
 3122 00d4 9742     		.uleb128 0x2117
 3123 00d6 19       		.uleb128 0x19
 3124 00d7 01       		.uleb128 0x1
 3125 00d8 13       		.uleb128 0x13
 3126 00d9 00       		.byte	0
 3127 00da 00       		.byte	0
 3128 00db 10       		.uleb128 0x10
 3129 00dc 05       		.uleb128 0x5
 3130 00dd 00       		.byte	0
 3131 00de 03       		.uleb128 0x3
 3132 00df 0E       		.uleb128 0xe
 3133 00e0 3A       		.uleb128 0x3a
 3134 00e1 0B       		.uleb128 0xb
 3135 00e2 3B       		.uleb128 0x3b
 3136 00e3 05       		.uleb128 0x5
 3137 00e4 49       		.uleb128 0x49
 3138 00e5 13       		.uleb128 0x13
 3139 00e6 02       		.uleb128 0x2
 3140 00e7 17       		.uleb128 0x17
 3141 00e8 00       		.byte	0
 3142 00e9 00       		.byte	0
 3143 00ea 11       		.uleb128 0x11
 3144 00eb 34       		.uleb128 0x34
 3145 00ec 00       		.byte	0
 3146 00ed 03       		.uleb128 0x3
 3147 00ee 0E       		.uleb128 0xe
 3148 00ef 3A       		.uleb128 0x3a
 3149 00f0 0B       		.uleb128 0xb
 3150 00f1 3B       		.uleb128 0x3b
 3151 00f2 05       		.uleb128 0x5
 3152 00f3 49       		.uleb128 0x49
 3153 00f4 13       		.uleb128 0x13
 3154 00f5 02       		.uleb128 0x2
 3155 00f6 17       		.uleb128 0x17
 3156 00f7 00       		.byte	0
 3157 00f8 00       		.byte	0
 3158 00f9 12       		.uleb128 0x12
 3159 00fa 898201   		.uleb128 0x4109
 3160 00fd 00       		.byte	0
 3161 00fe 11       		.uleb128 0x11
 3162 00ff 01       		.uleb128 0x1
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 112


 3163 0100 31       		.uleb128 0x31
 3164 0101 13       		.uleb128 0x13
 3165 0102 00       		.byte	0
 3166 0103 00       		.byte	0
 3167 0104 13       		.uleb128 0x13
 3168 0105 05       		.uleb128 0x5
 3169 0106 00       		.byte	0
 3170 0107 03       		.uleb128 0x3
 3171 0108 0E       		.uleb128 0xe
 3172 0109 3A       		.uleb128 0x3a
 3173 010a 0B       		.uleb128 0xb
 3174 010b 3B       		.uleb128 0x3b
 3175 010c 05       		.uleb128 0x5
 3176 010d 49       		.uleb128 0x49
 3177 010e 13       		.uleb128 0x13
 3178 010f 02       		.uleb128 0x2
 3179 0110 18       		.uleb128 0x18
 3180 0111 00       		.byte	0
 3181 0112 00       		.byte	0
 3182 0113 14       		.uleb128 0x14
 3183 0114 2E       		.uleb128 0x2e
 3184 0115 01       		.byte	0x1
 3185 0116 3F       		.uleb128 0x3f
 3186 0117 19       		.uleb128 0x19
 3187 0118 03       		.uleb128 0x3
 3188 0119 0E       		.uleb128 0xe
 3189 011a 3A       		.uleb128 0x3a
 3190 011b 0B       		.uleb128 0xb
 3191 011c 3B       		.uleb128 0x3b
 3192 011d 05       		.uleb128 0x5
 3193 011e 27       		.uleb128 0x27
 3194 011f 19       		.uleb128 0x19
 3195 0120 49       		.uleb128 0x49
 3196 0121 13       		.uleb128 0x13
 3197 0122 11       		.uleb128 0x11
 3198 0123 01       		.uleb128 0x1
 3199 0124 12       		.uleb128 0x12
 3200 0125 06       		.uleb128 0x6
 3201 0126 40       		.uleb128 0x40
 3202 0127 18       		.uleb128 0x18
 3203 0128 9742     		.uleb128 0x2117
 3204 012a 19       		.uleb128 0x19
 3205 012b 01       		.uleb128 0x1
 3206 012c 13       		.uleb128 0x13
 3207 012d 00       		.byte	0
 3208 012e 00       		.byte	0
 3209 012f 15       		.uleb128 0x15
 3210 0130 898201   		.uleb128 0x4109
 3211 0133 01       		.byte	0x1
 3212 0134 11       		.uleb128 0x11
 3213 0135 01       		.uleb128 0x1
 3214 0136 31       		.uleb128 0x31
 3215 0137 13       		.uleb128 0x13
 3216 0138 01       		.uleb128 0x1
 3217 0139 13       		.uleb128 0x13
 3218 013a 00       		.byte	0
 3219 013b 00       		.byte	0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 113


 3220 013c 16       		.uleb128 0x16
 3221 013d 8A8201   		.uleb128 0x410a
 3222 0140 00       		.byte	0
 3223 0141 02       		.uleb128 0x2
 3224 0142 18       		.uleb128 0x18
 3225 0143 9142     		.uleb128 0x2111
 3226 0145 18       		.uleb128 0x18
 3227 0146 00       		.byte	0
 3228 0147 00       		.byte	0
 3229 0148 17       		.uleb128 0x17
 3230 0149 898201   		.uleb128 0x4109
 3231 014c 01       		.byte	0x1
 3232 014d 11       		.uleb128 0x11
 3233 014e 01       		.uleb128 0x1
 3234 014f 31       		.uleb128 0x31
 3235 0150 13       		.uleb128 0x13
 3236 0151 00       		.byte	0
 3237 0152 00       		.byte	0
 3238 0153 18       		.uleb128 0x18
 3239 0154 34       		.uleb128 0x34
 3240 0155 00       		.byte	0
 3241 0156 03       		.uleb128 0x3
 3242 0157 0E       		.uleb128 0xe
 3243 0158 3A       		.uleb128 0x3a
 3244 0159 0B       		.uleb128 0xb
 3245 015a 3B       		.uleb128 0x3b
 3246 015b 05       		.uleb128 0x5
 3247 015c 49       		.uleb128 0x49
 3248 015d 13       		.uleb128 0x13
 3249 015e 02       		.uleb128 0x2
 3250 015f 18       		.uleb128 0x18
 3251 0160 00       		.byte	0
 3252 0161 00       		.byte	0
 3253 0162 19       		.uleb128 0x19
 3254 0163 2E       		.uleb128 0x2e
 3255 0164 01       		.byte	0x1
 3256 0165 3F       		.uleb128 0x3f
 3257 0166 19       		.uleb128 0x19
 3258 0167 03       		.uleb128 0x3
 3259 0168 0E       		.uleb128 0xe
 3260 0169 3A       		.uleb128 0x3a
 3261 016a 0B       		.uleb128 0xb
 3262 016b 3B       		.uleb128 0x3b
 3263 016c 05       		.uleb128 0x5
 3264 016d 27       		.uleb128 0x27
 3265 016e 19       		.uleb128 0x19
 3266 016f 49       		.uleb128 0x49
 3267 0170 13       		.uleb128 0x13
 3268 0171 20       		.uleb128 0x20
 3269 0172 0B       		.uleb128 0xb
 3270 0173 01       		.uleb128 0x1
 3271 0174 13       		.uleb128 0x13
 3272 0175 00       		.byte	0
 3273 0176 00       		.byte	0
 3274 0177 1A       		.uleb128 0x1a
 3275 0178 34       		.uleb128 0x34
 3276 0179 00       		.byte	0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 114


 3277 017a 03       		.uleb128 0x3
 3278 017b 0E       		.uleb128 0xe
 3279 017c 3A       		.uleb128 0x3a
 3280 017d 0B       		.uleb128 0xb
 3281 017e 3B       		.uleb128 0x3b
 3282 017f 05       		.uleb128 0x5
 3283 0180 49       		.uleb128 0x49
 3284 0181 13       		.uleb128 0x13
 3285 0182 00       		.byte	0
 3286 0183 00       		.byte	0
 3287 0184 1B       		.uleb128 0x1b
 3288 0185 2E       		.uleb128 0x2e
 3289 0186 01       		.byte	0x1
 3290 0187 31       		.uleb128 0x31
 3291 0188 13       		.uleb128 0x13
 3292 0189 11       		.uleb128 0x11
 3293 018a 01       		.uleb128 0x1
 3294 018b 12       		.uleb128 0x12
 3295 018c 06       		.uleb128 0x6
 3296 018d 40       		.uleb128 0x40
 3297 018e 18       		.uleb128 0x18
 3298 018f 9742     		.uleb128 0x2117
 3299 0191 19       		.uleb128 0x19
 3300 0192 01       		.uleb128 0x1
 3301 0193 13       		.uleb128 0x13
 3302 0194 00       		.byte	0
 3303 0195 00       		.byte	0
 3304 0196 1C       		.uleb128 0x1c
 3305 0197 05       		.uleb128 0x5
 3306 0198 00       		.byte	0
 3307 0199 31       		.uleb128 0x31
 3308 019a 13       		.uleb128 0x13
 3309 019b 02       		.uleb128 0x2
 3310 019c 17       		.uleb128 0x17
 3311 019d 00       		.byte	0
 3312 019e 00       		.byte	0
 3313 019f 1D       		.uleb128 0x1d
 3314 01a0 05       		.uleb128 0x5
 3315 01a1 00       		.byte	0
 3316 01a2 31       		.uleb128 0x31
 3317 01a3 13       		.uleb128 0x13
 3318 01a4 02       		.uleb128 0x2
 3319 01a5 18       		.uleb128 0x18
 3320 01a6 00       		.byte	0
 3321 01a7 00       		.byte	0
 3322 01a8 1E       		.uleb128 0x1e
 3323 01a9 34       		.uleb128 0x34
 3324 01aa 00       		.byte	0
 3325 01ab 31       		.uleb128 0x31
 3326 01ac 13       		.uleb128 0x13
 3327 01ad 02       		.uleb128 0x2
 3328 01ae 18       		.uleb128 0x18
 3329 01af 00       		.byte	0
 3330 01b0 00       		.byte	0
 3331 01b1 1F       		.uleb128 0x1f
 3332 01b2 34       		.uleb128 0x34
 3333 01b3 00       		.byte	0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 115


 3334 01b4 31       		.uleb128 0x31
 3335 01b5 13       		.uleb128 0x13
 3336 01b6 1C       		.uleb128 0x1c
 3337 01b7 06       		.uleb128 0x6
 3338 01b8 00       		.byte	0
 3339 01b9 00       		.byte	0
 3340 01ba 20       		.uleb128 0x20
 3341 01bb 34       		.uleb128 0x34
 3342 01bc 00       		.byte	0
 3343 01bd 03       		.uleb128 0x3
 3344 01be 0E       		.uleb128 0xe
 3345 01bf 3A       		.uleb128 0x3a
 3346 01c0 0B       		.uleb128 0xb
 3347 01c1 3B       		.uleb128 0x3b
 3348 01c2 05       		.uleb128 0x5
 3349 01c3 49       		.uleb128 0x49
 3350 01c4 13       		.uleb128 0x13
 3351 01c5 1C       		.uleb128 0x1c
 3352 01c6 06       		.uleb128 0x6
 3353 01c7 00       		.byte	0
 3354 01c8 00       		.byte	0
 3355 01c9 21       		.uleb128 0x21
 3356 01ca 2E       		.uleb128 0x2e
 3357 01cb 00       		.byte	0
 3358 01cc 3F       		.uleb128 0x3f
 3359 01cd 19       		.uleb128 0x19
 3360 01ce 03       		.uleb128 0x3
 3361 01cf 0E       		.uleb128 0xe
 3362 01d0 3A       		.uleb128 0x3a
 3363 01d1 0B       		.uleb128 0xb
 3364 01d2 3B       		.uleb128 0x3b
 3365 01d3 05       		.uleb128 0x5
 3366 01d4 27       		.uleb128 0x27
 3367 01d5 19       		.uleb128 0x19
 3368 01d6 11       		.uleb128 0x11
 3369 01d7 01       		.uleb128 0x1
 3370 01d8 12       		.uleb128 0x12
 3371 01d9 06       		.uleb128 0x6
 3372 01da 40       		.uleb128 0x40
 3373 01db 18       		.uleb128 0x18
 3374 01dc 9742     		.uleb128 0x2117
 3375 01de 19       		.uleb128 0x19
 3376 01df 00       		.byte	0
 3377 01e0 00       		.byte	0
 3378 01e1 22       		.uleb128 0x22
 3379 01e2 2E       		.uleb128 0x2e
 3380 01e3 01       		.byte	0x1
 3381 01e4 3F       		.uleb128 0x3f
 3382 01e5 19       		.uleb128 0x19
 3383 01e6 03       		.uleb128 0x3
 3384 01e7 0E       		.uleb128 0xe
 3385 01e8 3A       		.uleb128 0x3a
 3386 01e9 0B       		.uleb128 0xb
 3387 01ea 3B       		.uleb128 0x3b
 3388 01eb 05       		.uleb128 0x5
 3389 01ec 27       		.uleb128 0x27
 3390 01ed 19       		.uleb128 0x19
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 116


 3391 01ee 11       		.uleb128 0x11
 3392 01ef 01       		.uleb128 0x1
 3393 01f0 12       		.uleb128 0x12
 3394 01f1 06       		.uleb128 0x6
 3395 01f2 40       		.uleb128 0x40
 3396 01f3 18       		.uleb128 0x18
 3397 01f4 9642     		.uleb128 0x2116
 3398 01f6 19       		.uleb128 0x19
 3399 01f7 01       		.uleb128 0x1
 3400 01f8 13       		.uleb128 0x13
 3401 01f9 00       		.byte	0
 3402 01fa 00       		.byte	0
 3403 01fb 23       		.uleb128 0x23
 3404 01fc 34       		.uleb128 0x34
 3405 01fd 00       		.byte	0
 3406 01fe 03       		.uleb128 0x3
 3407 01ff 08       		.uleb128 0x8
 3408 0200 3A       		.uleb128 0x3a
 3409 0201 0B       		.uleb128 0xb
 3410 0202 3B       		.uleb128 0x3b
 3411 0203 05       		.uleb128 0x5
 3412 0204 49       		.uleb128 0x49
 3413 0205 13       		.uleb128 0x13
 3414 0206 02       		.uleb128 0x2
 3415 0207 17       		.uleb128 0x17
 3416 0208 00       		.byte	0
 3417 0209 00       		.byte	0
 3418 020a 24       		.uleb128 0x24
 3419 020b 1D       		.uleb128 0x1d
 3420 020c 01       		.byte	0x1
 3421 020d 31       		.uleb128 0x31
 3422 020e 13       		.uleb128 0x13
 3423 020f 52       		.uleb128 0x52
 3424 0210 01       		.uleb128 0x1
 3425 0211 55       		.uleb128 0x55
 3426 0212 17       		.uleb128 0x17
 3427 0213 58       		.uleb128 0x58
 3428 0214 0B       		.uleb128 0xb
 3429 0215 59       		.uleb128 0x59
 3430 0216 05       		.uleb128 0x5
 3431 0217 01       		.uleb128 0x1
 3432 0218 13       		.uleb128 0x13
 3433 0219 00       		.byte	0
 3434 021a 00       		.byte	0
 3435 021b 25       		.uleb128 0x25
 3436 021c 05       		.uleb128 0x5
 3437 021d 00       		.byte	0
 3438 021e 31       		.uleb128 0x31
 3439 021f 13       		.uleb128 0x13
 3440 0220 1C       		.uleb128 0x1c
 3441 0221 0B       		.uleb128 0xb
 3442 0222 00       		.byte	0
 3443 0223 00       		.byte	0
 3444 0224 26       		.uleb128 0x26
 3445 0225 0B       		.uleb128 0xb
 3446 0226 01       		.byte	0x1
 3447 0227 55       		.uleb128 0x55
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 117


 3448 0228 17       		.uleb128 0x17
 3449 0229 00       		.byte	0
 3450 022a 00       		.byte	0
 3451 022b 27       		.uleb128 0x27
 3452 022c 34       		.uleb128 0x34
 3453 022d 00       		.byte	0
 3454 022e 31       		.uleb128 0x31
 3455 022f 13       		.uleb128 0x13
 3456 0230 02       		.uleb128 0x2
 3457 0231 17       		.uleb128 0x17
 3458 0232 00       		.byte	0
 3459 0233 00       		.byte	0
 3460 0234 28       		.uleb128 0x28
 3461 0235 1D       		.uleb128 0x1d
 3462 0236 00       		.byte	0
 3463 0237 31       		.uleb128 0x31
 3464 0238 13       		.uleb128 0x13
 3465 0239 11       		.uleb128 0x11
 3466 023a 01       		.uleb128 0x1
 3467 023b 12       		.uleb128 0x12
 3468 023c 06       		.uleb128 0x6
 3469 023d 58       		.uleb128 0x58
 3470 023e 0B       		.uleb128 0xb
 3471 023f 59       		.uleb128 0x59
 3472 0240 05       		.uleb128 0x5
 3473 0241 00       		.byte	0
 3474 0242 00       		.byte	0
 3475 0243 29       		.uleb128 0x29
 3476 0244 2E       		.uleb128 0x2e
 3477 0245 00       		.byte	0
 3478 0246 3F       		.uleb128 0x3f
 3479 0247 19       		.uleb128 0x19
 3480 0248 03       		.uleb128 0x3
 3481 0249 0E       		.uleb128 0xe
 3482 024a 3A       		.uleb128 0x3a
 3483 024b 0B       		.uleb128 0xb
 3484 024c 3B       		.uleb128 0x3b
 3485 024d 05       		.uleb128 0x5
 3486 024e 27       		.uleb128 0x27
 3487 024f 19       		.uleb128 0x19
 3488 0250 49       		.uleb128 0x49
 3489 0251 13       		.uleb128 0x13
 3490 0252 11       		.uleb128 0x11
 3491 0253 01       		.uleb128 0x1
 3492 0254 12       		.uleb128 0x12
 3493 0255 06       		.uleb128 0x6
 3494 0256 40       		.uleb128 0x40
 3495 0257 18       		.uleb128 0x18
 3496 0258 9742     		.uleb128 0x2117
 3497 025a 19       		.uleb128 0x19
 3498 025b 00       		.byte	0
 3499 025c 00       		.byte	0
 3500 025d 2A       		.uleb128 0x2a
 3501 025e 2E       		.uleb128 0x2e
 3502 025f 01       		.byte	0x1
 3503 0260 31       		.uleb128 0x31
 3504 0261 13       		.uleb128 0x13
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 118


 3505 0262 11       		.uleb128 0x11
 3506 0263 01       		.uleb128 0x1
 3507 0264 12       		.uleb128 0x12
 3508 0265 06       		.uleb128 0x6
 3509 0266 40       		.uleb128 0x40
 3510 0267 18       		.uleb128 0x18
 3511 0268 9642     		.uleb128 0x2116
 3512 026a 19       		.uleb128 0x19
 3513 026b 01       		.uleb128 0x1
 3514 026c 13       		.uleb128 0x13
 3515 026d 00       		.byte	0
 3516 026e 00       		.byte	0
 3517 026f 2B       		.uleb128 0x2b
 3518 0270 34       		.uleb128 0x34
 3519 0271 00       		.byte	0
 3520 0272 31       		.uleb128 0x31
 3521 0273 13       		.uleb128 0x13
 3522 0274 00       		.byte	0
 3523 0275 00       		.byte	0
 3524 0276 2C       		.uleb128 0x2c
 3525 0277 0B       		.uleb128 0xb
 3526 0278 01       		.byte	0x1
 3527 0279 11       		.uleb128 0x11
 3528 027a 01       		.uleb128 0x1
 3529 027b 12       		.uleb128 0x12
 3530 027c 06       		.uleb128 0x6
 3531 027d 01       		.uleb128 0x1
 3532 027e 13       		.uleb128 0x13
 3533 027f 00       		.byte	0
 3534 0280 00       		.byte	0
 3535 0281 2D       		.uleb128 0x2d
 3536 0282 2E       		.uleb128 0x2e
 3537 0283 00       		.byte	0
 3538 0284 31       		.uleb128 0x31
 3539 0285 13       		.uleb128 0x13
 3540 0286 11       		.uleb128 0x11
 3541 0287 01       		.uleb128 0x1
 3542 0288 12       		.uleb128 0x12
 3543 0289 06       		.uleb128 0x6
 3544 028a 40       		.uleb128 0x40
 3545 028b 18       		.uleb128 0x18
 3546 028c 9742     		.uleb128 0x2117
 3547 028e 19       		.uleb128 0x19
 3548 028f 00       		.byte	0
 3549 0290 00       		.byte	0
 3550 0291 2E       		.uleb128 0x2e
 3551 0292 01       		.uleb128 0x1
 3552 0293 01       		.byte	0x1
 3553 0294 49       		.uleb128 0x49
 3554 0295 13       		.uleb128 0x13
 3555 0296 01       		.uleb128 0x1
 3556 0297 13       		.uleb128 0x13
 3557 0298 00       		.byte	0
 3558 0299 00       		.byte	0
 3559 029a 2F       		.uleb128 0x2f
 3560 029b 21       		.uleb128 0x21
 3561 029c 00       		.byte	0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 119


 3562 029d 49       		.uleb128 0x49
 3563 029e 13       		.uleb128 0x13
 3564 029f 2F       		.uleb128 0x2f
 3565 02a0 0B       		.uleb128 0xb
 3566 02a1 00       		.byte	0
 3567 02a2 00       		.byte	0
 3568 02a3 30       		.uleb128 0x30
 3569 02a4 34       		.uleb128 0x34
 3570 02a5 00       		.byte	0
 3571 02a6 03       		.uleb128 0x3
 3572 02a7 0E       		.uleb128 0xe
 3573 02a8 3A       		.uleb128 0x3a
 3574 02a9 0B       		.uleb128 0xb
 3575 02aa 3B       		.uleb128 0x3b
 3576 02ab 0B       		.uleb128 0xb
 3577 02ac 49       		.uleb128 0x49
 3578 02ad 13       		.uleb128 0x13
 3579 02ae 02       		.uleb128 0x2
 3580 02af 18       		.uleb128 0x18
 3581 02b0 00       		.byte	0
 3582 02b1 00       		.byte	0
 3583 02b2 31       		.uleb128 0x31
 3584 02b3 34       		.uleb128 0x34
 3585 02b4 00       		.byte	0
 3586 02b5 03       		.uleb128 0x3
 3587 02b6 0E       		.uleb128 0xe
 3588 02b7 3A       		.uleb128 0x3a
 3589 02b8 0B       		.uleb128 0xb
 3590 02b9 3B       		.uleb128 0x3b
 3591 02ba 0B       		.uleb128 0xb
 3592 02bb 49       		.uleb128 0x49
 3593 02bc 13       		.uleb128 0x13
 3594 02bd 3F       		.uleb128 0x3f
 3595 02be 19       		.uleb128 0x19
 3596 02bf 02       		.uleb128 0x2
 3597 02c0 18       		.uleb128 0x18
 3598 02c1 00       		.byte	0
 3599 02c2 00       		.byte	0
 3600 02c3 32       		.uleb128 0x32
 3601 02c4 2E       		.uleb128 0x2e
 3602 02c5 00       		.byte	0
 3603 02c6 3F       		.uleb128 0x3f
 3604 02c7 19       		.uleb128 0x19
 3605 02c8 03       		.uleb128 0x3
 3606 02c9 0E       		.uleb128 0xe
 3607 02ca 3A       		.uleb128 0x3a
 3608 02cb 0B       		.uleb128 0xb
 3609 02cc 3B       		.uleb128 0x3b
 3610 02cd 0B       		.uleb128 0xb
 3611 02ce 27       		.uleb128 0x27
 3612 02cf 19       		.uleb128 0x19
 3613 02d0 49       		.uleb128 0x49
 3614 02d1 13       		.uleb128 0x13
 3615 02d2 3C       		.uleb128 0x3c
 3616 02d3 19       		.uleb128 0x19
 3617 02d4 00       		.byte	0
 3618 02d5 00       		.byte	0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 120


 3619 02d6 33       		.uleb128 0x33
 3620 02d7 2E       		.uleb128 0x2e
 3621 02d8 01       		.byte	0x1
 3622 02d9 3F       		.uleb128 0x3f
 3623 02da 19       		.uleb128 0x19
 3624 02db 03       		.uleb128 0x3
 3625 02dc 0E       		.uleb128 0xe
 3626 02dd 3A       		.uleb128 0x3a
 3627 02de 0B       		.uleb128 0xb
 3628 02df 3B       		.uleb128 0x3b
 3629 02e0 0B       		.uleb128 0xb
 3630 02e1 27       		.uleb128 0x27
 3631 02e2 19       		.uleb128 0x19
 3632 02e3 3C       		.uleb128 0x3c
 3633 02e4 19       		.uleb128 0x19
 3634 02e5 01       		.uleb128 0x1
 3635 02e6 13       		.uleb128 0x13
 3636 02e7 00       		.byte	0
 3637 02e8 00       		.byte	0
 3638 02e9 34       		.uleb128 0x34
 3639 02ea 05       		.uleb128 0x5
 3640 02eb 00       		.byte	0
 3641 02ec 49       		.uleb128 0x49
 3642 02ed 13       		.uleb128 0x13
 3643 02ee 00       		.byte	0
 3644 02ef 00       		.byte	0
 3645 02f0 35       		.uleb128 0x35
 3646 02f1 2E       		.uleb128 0x2e
 3647 02f2 01       		.byte	0x1
 3648 02f3 3F       		.uleb128 0x3f
 3649 02f4 19       		.uleb128 0x19
 3650 02f5 03       		.uleb128 0x3
 3651 02f6 0E       		.uleb128 0xe
 3652 02f7 3A       		.uleb128 0x3a
 3653 02f8 0B       		.uleb128 0xb
 3654 02f9 3B       		.uleb128 0x3b
 3655 02fa 0B       		.uleb128 0xb
 3656 02fb 27       		.uleb128 0x27
 3657 02fc 19       		.uleb128 0x19
 3658 02fd 3C       		.uleb128 0x3c
 3659 02fe 19       		.uleb128 0x19
 3660 02ff 00       		.byte	0
 3661 0300 00       		.byte	0
 3662 0301 00       		.byte	0
 3663              		.section	.debug_loc,"",%progbits
 3664              	.Ldebug_loc0:
 3665              	.LLST0:
 3666 0000 00000000 		.4byte	.LVL0
 3667 0004 07000000 		.4byte	.LVL1-1
 3668 0008 0100     		.2byte	0x1
 3669 000a 50       		.byte	0x50
 3670 000b 07000000 		.4byte	.LVL1-1
 3671 000f 1A000000 		.4byte	.LVL5
 3672 0013 0100     		.2byte	0x1
 3673 0015 54       		.byte	0x54
 3674 0016 1A000000 		.4byte	.LVL5
 3675 001a 20000000 		.4byte	.LFE2
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 121


 3676 001e 0400     		.2byte	0x4
 3677 0020 F3       		.byte	0xf3
 3678 0021 01       		.uleb128 0x1
 3679 0022 50       		.byte	0x50
 3680 0023 9F       		.byte	0x9f
 3681 0024 00000000 		.4byte	0
 3682 0028 00000000 		.4byte	0
 3683              	.LLST1:
 3684 002c 08000000 		.4byte	.LVL1
 3685 0030 19000000 		.4byte	.LVL4-1
 3686 0034 0100     		.2byte	0x1
 3687 0036 50       		.byte	0x50
 3688 0037 00000000 		.4byte	0
 3689 003b 00000000 		.4byte	0
 3690              	.LLST2:
 3691 003f 10000000 		.4byte	.LVL2
 3692 0043 14000000 		.4byte	.LVL3
 3693 0047 0100     		.2byte	0x1
 3694 0049 52       		.byte	0x52
 3695 004a 14000000 		.4byte	.LVL3
 3696 004e 19000000 		.4byte	.LVL4-1
 3697 0052 0100     		.2byte	0x1
 3698 0054 53       		.byte	0x53
 3699 0055 00000000 		.4byte	0
 3700 0059 00000000 		.4byte	0
 3701              	.LLST3:
 3702 005d 06000000 		.4byte	.LVL7
 3703 0061 0D000000 		.4byte	.LVL9-1
 3704 0065 0100     		.2byte	0x1
 3705 0067 50       		.byte	0x50
 3706 0068 00000000 		.4byte	0
 3707 006c 00000000 		.4byte	0
 3708              	.LLST4:
 3709 0070 0A000000 		.4byte	.LVL8
 3710 0074 12000000 		.4byte	.LVL10
 3711 0078 0500     		.2byte	0x5
 3712 007a 74       		.byte	0x74
 3713 007b 00       		.sleb128 0
 3714 007c 33       		.byte	0x33
 3715 007d 1A       		.byte	0x1a
 3716 007e 9F       		.byte	0x9f
 3717 007f 12000000 		.4byte	.LVL10
 3718 0083 18000000 		.4byte	.LFE4
 3719 0087 0100     		.2byte	0x1
 3720 0089 50       		.byte	0x50
 3721 008a 00000000 		.4byte	0
 3722 008e 00000000 		.4byte	0
 3723              	.LLST5:
 3724 0092 00000000 		.4byte	.LVL11
 3725 0096 07000000 		.4byte	.LVL12-1
 3726 009a 0100     		.2byte	0x1
 3727 009c 50       		.byte	0x50
 3728 009d 07000000 		.4byte	.LVL12-1
 3729 00a1 1E000000 		.4byte	.LVL14
 3730 00a5 0100     		.2byte	0x1
 3731 00a7 54       		.byte	0x54
 3732 00a8 1E000000 		.4byte	.LVL14
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 122


 3733 00ac 24000000 		.4byte	.LFE5
 3734 00b0 0400     		.2byte	0x4
 3735 00b2 F3       		.byte	0xf3
 3736 00b3 01       		.uleb128 0x1
 3737 00b4 50       		.byte	0x50
 3738 00b5 9F       		.byte	0x9f
 3739 00b6 00000000 		.4byte	0
 3740 00ba 00000000 		.4byte	0
 3741              	.LLST6:
 3742 00be 08000000 		.4byte	.LVL12
 3743 00c2 1D000000 		.4byte	.LVL13-1
 3744 00c6 0100     		.2byte	0x1
 3745 00c8 50       		.byte	0x50
 3746 00c9 00000000 		.4byte	0
 3747 00cd 00000000 		.4byte	0
 3748              	.LLST7:
 3749 00d1 00000000 		.4byte	.LVL15
 3750 00d5 15000000 		.4byte	.LVL16-1
 3751 00d9 0100     		.2byte	0x1
 3752 00db 50       		.byte	0x50
 3753 00dc 15000000 		.4byte	.LVL16-1
 3754 00e0 6C000000 		.4byte	.LVL23
 3755 00e4 0100     		.2byte	0x1
 3756 00e6 54       		.byte	0x54
 3757 00e7 6C000000 		.4byte	.LVL23
 3758 00eb 70000000 		.4byte	.LVL24
 3759 00ef 0300     		.2byte	0x3
 3760 00f1 74       		.byte	0x74
 3761 00f2 18       		.sleb128 24
 3762 00f3 9F       		.byte	0x9f
 3763 00f4 70000000 		.4byte	.LVL24
 3764 00f8 98000000 		.4byte	.LFE6
 3765 00fc 0400     		.2byte	0x4
 3766 00fe F3       		.byte	0xf3
 3767 00ff 01       		.uleb128 0x1
 3768 0100 50       		.byte	0x50
 3769 0101 9F       		.byte	0x9f
 3770 0102 00000000 		.4byte	0
 3771 0106 00000000 		.4byte	0
 3772              	.LLST8:
 3773 010a 1A000000 		.4byte	.LVL17
 3774 010e 7E000000 		.4byte	.LVL25
 3775 0112 0100     		.2byte	0x1
 3776 0114 57       		.byte	0x57
 3777 0115 00000000 		.4byte	0
 3778 0119 00000000 		.4byte	0
 3779              	.LLST9:
 3780 011d 30000000 		.4byte	.LVL18
 3781 0121 36000000 		.4byte	.LVL19
 3782 0125 0100     		.2byte	0x1
 3783 0127 53       		.byte	0x53
 3784 0128 36000000 		.4byte	.LVL19
 3785 012c 3A000000 		.4byte	.LVL20
 3786 0130 0700     		.2byte	0x7
 3787 0132 0C       		.byte	0xc
 3788 0133 0C0F0340 		.4byte	0x40030f0c
 3789 0137 06       		.byte	0x6
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 123


 3790 0138 9F       		.byte	0x9f
 3791 0139 00000000 		.4byte	0
 3792 013d 00000000 		.4byte	0
 3793              	.LLST10:
 3794 0141 00000000 		.4byte	.LVL26
 3795 0145 07000000 		.4byte	.LVL27-1
 3796 0149 0100     		.2byte	0x1
 3797 014b 50       		.byte	0x50
 3798 014c 07000000 		.4byte	.LVL27-1
 3799 0150 0E000000 		.4byte	.LVL28
 3800 0154 0100     		.2byte	0x1
 3801 0156 54       		.byte	0x54
 3802 0157 0E000000 		.4byte	.LVL28
 3803 015b 24000000 		.4byte	.LFE7
 3804 015f 0400     		.2byte	0x4
 3805 0161 F3       		.byte	0xf3
 3806 0162 01       		.uleb128 0x1
 3807 0163 50       		.byte	0x50
 3808 0164 9F       		.byte	0x9f
 3809 0165 00000000 		.4byte	0
 3810 0169 00000000 		.4byte	0
 3811              	.LLST11:
 3812 016d 08000000 		.4byte	.LVL27
 3813 0171 1D000000 		.4byte	.LVL29-1
 3814 0175 0100     		.2byte	0x1
 3815 0177 50       		.byte	0x50
 3816 0178 00000000 		.4byte	0
 3817 017c 00000000 		.4byte	0
 3818              	.LLST12:
 3819 0180 00000000 		.4byte	.LVL30
 3820 0184 08000000 		.4byte	.LVL31
 3821 0188 0100     		.2byte	0x1
 3822 018a 50       		.byte	0x50
 3823 018b 08000000 		.4byte	.LVL31
 3824 018f 14000000 		.4byte	.LFE8
 3825 0193 0100     		.2byte	0x1
 3826 0195 52       		.byte	0x52
 3827 0196 00000000 		.4byte	0
 3828 019a 00000000 		.4byte	0
 3829              	.LLST13:
 3830 019e 0A000000 		.4byte	.LVL32
 3831 01a2 0C000000 		.4byte	.LVL33
 3832 01a6 0500     		.2byte	0x5
 3833 01a8 70       		.byte	0x70
 3834 01a9 00       		.sleb128 0
 3835 01aa 49       		.byte	0x49
 3836 01ab 1A       		.byte	0x1a
 3837 01ac 9F       		.byte	0x9f
 3838 01ad 0C000000 		.4byte	.LVL33
 3839 01b1 14000000 		.4byte	.LFE8
 3840 01b5 0100     		.2byte	0x1
 3841 01b7 50       		.byte	0x50
 3842 01b8 00000000 		.4byte	0
 3843 01bc 00000000 		.4byte	0
 3844              	.LLST14:
 3845 01c0 00000000 		.4byte	.LVL36
 3846 01c4 04000000 		.4byte	.LVL37
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 124


 3847 01c8 0100     		.2byte	0x1
 3848 01ca 50       		.byte	0x50
 3849 01cb 04000000 		.4byte	.LVL37
 3850 01cf 0E000000 		.4byte	.LFE11
 3851 01d3 0400     		.2byte	0x4
 3852 01d5 F3       		.byte	0xf3
 3853 01d6 01       		.uleb128 0x1
 3854 01d7 50       		.byte	0x50
 3855 01d8 9F       		.byte	0x9f
 3856 01d9 00000000 		.4byte	0
 3857 01dd 00000000 		.4byte	0
 3858              	.LLST15:
 3859 01e1 00000000 		.4byte	.LVL39
 3860 01e5 04000000 		.4byte	.LVL40
 3861 01e9 0100     		.2byte	0x1
 3862 01eb 50       		.byte	0x50
 3863 01ec 04000000 		.4byte	.LVL40
 3864 01f0 0C000000 		.4byte	.LFE12
 3865 01f4 0400     		.2byte	0x4
 3866 01f6 F3       		.byte	0xf3
 3867 01f7 01       		.uleb128 0x1
 3868 01f8 50       		.byte	0x50
 3869 01f9 9F       		.byte	0x9f
 3870 01fa 00000000 		.4byte	0
 3871 01fe 00000000 		.4byte	0
 3872              	.LLST16:
 3873 0202 00000000 		.4byte	.LVL41
 3874 0206 04000000 		.4byte	.LVL42
 3875 020a 0100     		.2byte	0x1
 3876 020c 50       		.byte	0x50
 3877 020d 04000000 		.4byte	.LVL42
 3878 0211 10000000 		.4byte	.LFE13
 3879 0215 0400     		.2byte	0x4
 3880 0217 F3       		.byte	0xf3
 3881 0218 01       		.uleb128 0x1
 3882 0219 50       		.byte	0x50
 3883 021a 9F       		.byte	0x9f
 3884 021b 00000000 		.4byte	0
 3885 021f 00000000 		.4byte	0
 3886              	.LLST17:
 3887 0223 00000000 		.4byte	.LVL44
 3888 0227 04000000 		.4byte	.LVL45
 3889 022b 0100     		.2byte	0x1
 3890 022d 50       		.byte	0x50
 3891 022e 04000000 		.4byte	.LVL45
 3892 0232 10000000 		.4byte	.LFE14
 3893 0236 0400     		.2byte	0x4
 3894 0238 F3       		.byte	0xf3
 3895 0239 01       		.uleb128 0x1
 3896 023a 50       		.byte	0x50
 3897 023b 9F       		.byte	0x9f
 3898 023c 00000000 		.4byte	0
 3899 0240 00000000 		.4byte	0
 3900              	.LLST18:
 3901 0244 00000000 		.4byte	.LVL46
 3902 0248 09000000 		.4byte	.LVL48-1
 3903 024c 0100     		.2byte	0x1
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 125


 3904 024e 50       		.byte	0x50
 3905 024f 09000000 		.4byte	.LVL48-1
 3906 0253 30000000 		.4byte	.LFE15
 3907 0257 0400     		.2byte	0x4
 3908 0259 F3       		.byte	0xf3
 3909 025a 01       		.uleb128 0x1
 3910 025b 50       		.byte	0x50
 3911 025c 9F       		.byte	0x9f
 3912 025d 00000000 		.4byte	0
 3913 0261 00000000 		.4byte	0
 3914              	.LLST19:
 3915 0265 00000000 		.4byte	.LVL46
 3916 0269 09000000 		.4byte	.LVL48-1
 3917 026d 0100     		.2byte	0x1
 3918 026f 51       		.byte	0x51
 3919 0270 09000000 		.4byte	.LVL48-1
 3920 0274 30000000 		.4byte	.LFE15
 3921 0278 0400     		.2byte	0x4
 3922 027a F3       		.byte	0xf3
 3923 027b 01       		.uleb128 0x1
 3924 027c 51       		.byte	0x51
 3925 027d 9F       		.byte	0x9f
 3926 027e 00000000 		.4byte	0
 3927 0282 00000000 		.4byte	0
 3928              	.LLST20:
 3929 0286 0A000000 		.4byte	.LVL48
 3930 028a 29000000 		.4byte	.LVL53-1
 3931 028e 0100     		.2byte	0x1
 3932 0290 50       		.byte	0x50
 3933 0291 00000000 		.4byte	0
 3934 0295 00000000 		.4byte	0
 3935              	.LLST21:
 3936 0299 04000000 		.4byte	.LVL47
 3937 029d 16000000 		.4byte	.LVL49
 3938 02a1 0C00     		.2byte	0xc
 3939 02a3 74       		.byte	0x74
 3940 02a4 00       		.sleb128 0
 3941 02a5 33       		.byte	0x33
 3942 02a6 1A       		.byte	0x1a
 3943 02a7 08       		.byte	0x8
 3944 02a8 FF       		.byte	0xff
 3945 02a9 1A       		.byte	0x1a
 3946 02aa 33       		.byte	0x33
 3947 02ab 24       		.byte	0x24
 3948 02ac 23       		.byte	0x23
 3949 02ad 06       		.uleb128 0x6
 3950 02ae 9F       		.byte	0x9f
 3951 02af 00000000 		.4byte	0
 3952 02b3 00000000 		.4byte	0
 3953              	.LLST22:
 3954 02b7 20000000 		.4byte	.LVL50
 3955 02bb 29000000 		.4byte	.LVL53-1
 3956 02bf 0100     		.2byte	0x1
 3957 02c1 51       		.byte	0x51
 3958 02c2 00000000 		.4byte	0
 3959 02c6 00000000 		.4byte	0
 3960              	.LLST23:
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 126


 3961 02ca 00000000 		.4byte	.LVL54
 3962 02ce 18000000 		.4byte	.LVL57
 3963 02d2 0100     		.2byte	0x1
 3964 02d4 50       		.byte	0x50
 3965 02d5 18000000 		.4byte	.LVL57
 3966 02d9 20000000 		.4byte	.LFE16
 3967 02dd 0400     		.2byte	0x4
 3968 02df F3       		.byte	0xf3
 3969 02e0 01       		.uleb128 0x1
 3970 02e1 50       		.byte	0x50
 3971 02e2 9F       		.byte	0x9f
 3972 02e3 00000000 		.4byte	0
 3973 02e7 00000000 		.4byte	0
 3974              	.LLST24:
 3975 02eb 0A000000 		.4byte	.LVL55
 3976 02ef 16000000 		.4byte	.LVL56
 3977 02f3 0F00     		.2byte	0xf
 3978 02f5 71       		.byte	0x71
 3979 02f6 00       		.sleb128 0
 3980 02f7 70       		.byte	0x70
 3981 02f8 00       		.sleb128 0
 3982 02f9 33       		.byte	0x33
 3983 02fa 1A       		.byte	0x1a
 3984 02fb 08       		.byte	0x8
 3985 02fc FF       		.byte	0xff
 3986 02fd 1A       		.byte	0x1a
 3987 02fe 33       		.byte	0x33
 3988 02ff 24       		.byte	0x24
 3989 0300 23       		.byte	0x23
 3990 0301 06       		.uleb128 0x6
 3991 0302 25       		.byte	0x25
 3992 0303 9F       		.byte	0x9f
 3993 0304 00000000 		.4byte	0
 3994 0308 00000000 		.4byte	0
 3995              	.LLST25:
 3996 030c 00000000 		.4byte	.LVL58
 3997 0310 04000000 		.4byte	.LVL59
 3998 0314 0100     		.2byte	0x1
 3999 0316 50       		.byte	0x50
 4000 0317 04000000 		.4byte	.LVL59
 4001 031b 14000000 		.4byte	.LFE17
 4002 031f 0400     		.2byte	0x4
 4003 0321 F3       		.byte	0xf3
 4004 0322 01       		.uleb128 0x1
 4005 0323 50       		.byte	0x50
 4006 0324 9F       		.byte	0x9f
 4007 0325 00000000 		.4byte	0
 4008 0329 00000000 		.4byte	0
 4009              	.LLST26:
 4010 032d 00000000 		.4byte	.LVL60
 4011 0331 06000000 		.4byte	.LVL61
 4012 0335 0100     		.2byte	0x1
 4013 0337 50       		.byte	0x50
 4014 0338 06000000 		.4byte	.LVL61
 4015 033c 18000000 		.4byte	.LFE18
 4016 0340 0400     		.2byte	0x4
 4017 0342 F3       		.byte	0xf3
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 127


 4018 0343 01       		.uleb128 0x1
 4019 0344 50       		.byte	0x50
 4020 0345 9F       		.byte	0x9f
 4021 0346 00000000 		.4byte	0
 4022 034a 00000000 		.4byte	0
 4023              	.LLST27:
 4024 034e 00000000 		.4byte	.LVL62
 4025 0352 04000000 		.4byte	.LVL63
 4026 0356 0100     		.2byte	0x1
 4027 0358 50       		.byte	0x50
 4028 0359 04000000 		.4byte	.LVL63
 4029 035d 14000000 		.4byte	.LFE19
 4030 0361 0400     		.2byte	0x4
 4031 0363 F3       		.byte	0xf3
 4032 0364 01       		.uleb128 0x1
 4033 0365 50       		.byte	0x50
 4034 0366 9F       		.byte	0x9f
 4035 0367 00000000 		.4byte	0
 4036 036b 00000000 		.4byte	0
 4037              	.LLST28:
 4038 036f 00000000 		.4byte	.LVL64
 4039 0373 04000000 		.4byte	.LVL65
 4040 0377 0100     		.2byte	0x1
 4041 0379 50       		.byte	0x50
 4042 037a 04000000 		.4byte	.LVL65
 4043 037e 14000000 		.4byte	.LFE20
 4044 0382 0400     		.2byte	0x4
 4045 0384 F3       		.byte	0xf3
 4046 0385 01       		.uleb128 0x1
 4047 0386 50       		.byte	0x50
 4048 0387 9F       		.byte	0x9f
 4049 0388 00000000 		.4byte	0
 4050 038c 00000000 		.4byte	0
 4051              	.LLST29:
 4052 0390 00000000 		.4byte	.LVL66
 4053 0394 04000000 		.4byte	.LVL67
 4054 0398 0100     		.2byte	0x1
 4055 039a 50       		.byte	0x50
 4056 039b 04000000 		.4byte	.LVL67
 4057 039f 14000000 		.4byte	.LFE21
 4058 03a3 0400     		.2byte	0x4
 4059 03a5 F3       		.byte	0xf3
 4060 03a6 01       		.uleb128 0x1
 4061 03a7 50       		.byte	0x50
 4062 03a8 9F       		.byte	0x9f
 4063 03a9 00000000 		.4byte	0
 4064 03ad 00000000 		.4byte	0
 4065              	.LLST30:
 4066 03b1 00000000 		.4byte	.LVL69
 4067 03b5 04000000 		.4byte	.LVL70
 4068 03b9 0100     		.2byte	0x1
 4069 03bb 50       		.byte	0x50
 4070 03bc 04000000 		.4byte	.LVL70
 4071 03c0 22000000 		.4byte	.LVL74
 4072 03c4 0100     		.2byte	0x1
 4073 03c6 54       		.byte	0x54
 4074 03c7 00000000 		.4byte	0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 128


 4075 03cb 00000000 		.4byte	0
 4076              	.LLST31:
 4077 03cf 00000000 		.4byte	.LVL75
 4078 03d3 08000000 		.4byte	.LVL76
 4079 03d7 0100     		.2byte	0x1
 4080 03d9 50       		.byte	0x50
 4081 03da 08000000 		.4byte	.LVL76
 4082 03de 14000000 		.4byte	.LFE25
 4083 03e2 0400     		.2byte	0x4
 4084 03e4 F3       		.byte	0xf3
 4085 03e5 01       		.uleb128 0x1
 4086 03e6 50       		.byte	0x50
 4087 03e7 9F       		.byte	0x9f
 4088 03e8 00000000 		.4byte	0
 4089 03ec 00000000 		.4byte	0
 4090              	.LLST32:
 4091 03f0 00000000 		.4byte	.LVL78
 4092 03f4 18000000 		.4byte	.LVL79
 4093 03f8 0100     		.2byte	0x1
 4094 03fa 50       		.byte	0x50
 4095 03fb 18000000 		.4byte	.LVL79
 4096 03ff 48000000 		.4byte	.LFE26
 4097 0403 0400     		.2byte	0x4
 4098 0405 F3       		.byte	0xf3
 4099 0406 01       		.uleb128 0x1
 4100 0407 50       		.byte	0x50
 4101 0408 9F       		.byte	0x9f
 4102 0409 00000000 		.4byte	0
 4103 040d 00000000 		.4byte	0
 4104              	.LLST33:
 4105 0411 00000000 		.4byte	.LVL82
 4106 0415 0C000000 		.4byte	.LVL83
 4107 0419 0200     		.2byte	0x2
 4108 041b 30       		.byte	0x30
 4109 041c 9F       		.byte	0x9f
 4110 041d 0C000000 		.4byte	.LVL83
 4111 0421 10000000 		.4byte	.LVL84
 4112 0425 0200     		.2byte	0x2
 4113 0427 31       		.byte	0x31
 4114 0428 9F       		.byte	0x9f
 4115 0429 10000000 		.4byte	.LVL84
 4116 042d 12000000 		.4byte	.LVL85
 4117 0431 0200     		.2byte	0x2
 4118 0433 32       		.byte	0x32
 4119 0434 9F       		.byte	0x9f
 4120 0435 12000000 		.4byte	.LVL85
 4121 0439 14000000 		.4byte	.LVL86
 4122 043d 0200     		.2byte	0x2
 4123 043f 33       		.byte	0x33
 4124 0440 9F       		.byte	0x9f
 4125 0441 14000000 		.4byte	.LVL86
 4126 0445 50000000 		.4byte	.LFE28
 4127 0449 0200     		.2byte	0x2
 4128 044b 35       		.byte	0x35
 4129 044c 9F       		.byte	0x9f
 4130 044d 00000000 		.4byte	0
 4131 0451 00000000 		.4byte	0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 129


 4132              	.LLST34:
 4133 0455 14000000 		.4byte	.LVL86
 4134 0459 16000000 		.4byte	.LVL87
 4135 045d 0500     		.2byte	0x5
 4136 045f 0C       		.byte	0xc
 4137 0460 3C000020 		.4byte	0x2000003c
 4138 0464 16000000 		.4byte	.LVL87
 4139 0468 1A000000 		.4byte	.LVL88
 4140 046c 0200     		.2byte	0x2
 4141 046e 73       		.byte	0x73
 4142 046f 00       		.sleb128 0
 4143 0470 00000000 		.4byte	0
 4144 0474 00000000 		.4byte	0
 4145              	.LLST35:
 4146 0478 00000000 		.4byte	.LVL94
 4147 047c 04000000 		.4byte	.LVL95
 4148 0480 0100     		.2byte	0x1
 4149 0482 50       		.byte	0x50
 4150 0483 04000000 		.4byte	.LVL95
 4151 0487 10000000 		.4byte	.LFE33
 4152 048b 0400     		.2byte	0x4
 4153 048d F3       		.byte	0xf3
 4154 048e 01       		.uleb128 0x1
 4155 048f 50       		.byte	0x50
 4156 0490 9F       		.byte	0x9f
 4157 0491 00000000 		.4byte	0
 4158 0495 00000000 		.4byte	0
 4159              	.LLST36:
 4160 0499 00000000 		.4byte	.LVL98
 4161 049d 06000000 		.4byte	.LVL99
 4162 04a1 0100     		.2byte	0x1
 4163 04a3 50       		.byte	0x50
 4164 04a4 06000000 		.4byte	.LVL99
 4165 04a8 10000000 		.4byte	.LFE38
 4166 04ac 0400     		.2byte	0x4
 4167 04ae F3       		.byte	0xf3
 4168 04af 01       		.uleb128 0x1
 4169 04b0 50       		.byte	0x50
 4170 04b1 9F       		.byte	0x9f
 4171 04b2 00000000 		.4byte	0
 4172 04b6 00000000 		.4byte	0
 4173              	.LLST37:
 4174 04ba 00000000 		.4byte	.LVL100
 4175 04be 04000000 		.4byte	.LVL101
 4176 04c2 0100     		.2byte	0x1
 4177 04c4 50       		.byte	0x50
 4178 04c5 04000000 		.4byte	.LVL101
 4179 04c9 0C000000 		.4byte	.LFE39
 4180 04cd 0400     		.2byte	0x4
 4181 04cf F3       		.byte	0xf3
 4182 04d0 01       		.uleb128 0x1
 4183 04d1 50       		.byte	0x50
 4184 04d2 9F       		.byte	0x9f
 4185 04d3 00000000 		.4byte	0
 4186 04d7 00000000 		.4byte	0
 4187              		.section	.debug_aranges,"",%progbits
 4188 0000 64010000 		.4byte	0x164
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 130


 4189 0004 0200     		.2byte	0x2
 4190 0006 00000000 		.4byte	.Ldebug_info0
 4191 000a 04       		.byte	0x4
 4192 000b 00       		.byte	0
 4193 000c 0000     		.2byte	0
 4194 000e 0000     		.2byte	0
 4195 0010 00000000 		.4byte	.LFB0
 4196 0014 14000000 		.4byte	.LFE0-.LFB0
 4197 0018 00000000 		.4byte	.LFB1
 4198 001c 10000000 		.4byte	.LFE1-.LFB1
 4199 0020 00000000 		.4byte	.LFB2
 4200 0024 20000000 		.4byte	.LFE2-.LFB2
 4201 0028 00000000 		.4byte	.LFB3
 4202 002c 30000000 		.4byte	.LFE3-.LFB3
 4203 0030 00000000 		.4byte	.LFB4
 4204 0034 18000000 		.4byte	.LFE4-.LFB4
 4205 0038 00000000 		.4byte	.LFB5
 4206 003c 24000000 		.4byte	.LFE5-.LFB5
 4207 0040 00000000 		.4byte	.LFB6
 4208 0044 98000000 		.4byte	.LFE6-.LFB6
 4209 0048 00000000 		.4byte	.LFB7
 4210 004c 24000000 		.4byte	.LFE7-.LFB7
 4211 0050 00000000 		.4byte	.LFB8
 4212 0054 14000000 		.4byte	.LFE8-.LFB8
 4213 0058 00000000 		.4byte	.LFB9
 4214 005c 10000000 		.4byte	.LFE9-.LFB9
 4215 0060 00000000 		.4byte	.LFB10
 4216 0064 0C000000 		.4byte	.LFE10-.LFB10
 4217 0068 00000000 		.4byte	.LFB11
 4218 006c 0E000000 		.4byte	.LFE11-.LFB11
 4219 0070 00000000 		.4byte	.LFB12
 4220 0074 0C000000 		.4byte	.LFE12-.LFB12
 4221 0078 00000000 		.4byte	.LFB13
 4222 007c 10000000 		.4byte	.LFE13-.LFB13
 4223 0080 00000000 		.4byte	.LFB14
 4224 0084 10000000 		.4byte	.LFE14-.LFB14
 4225 0088 00000000 		.4byte	.LFB15
 4226 008c 30000000 		.4byte	.LFE15-.LFB15
 4227 0090 00000000 		.4byte	.LFB16
 4228 0094 20000000 		.4byte	.LFE16-.LFB16
 4229 0098 00000000 		.4byte	.LFB17
 4230 009c 14000000 		.4byte	.LFE17-.LFB17
 4231 00a0 00000000 		.4byte	.LFB18
 4232 00a4 18000000 		.4byte	.LFE18-.LFB18
 4233 00a8 00000000 		.4byte	.LFB19
 4234 00ac 14000000 		.4byte	.LFE19-.LFB19
 4235 00b0 00000000 		.4byte	.LFB20
 4236 00b4 14000000 		.4byte	.LFE20-.LFB20
 4237 00b8 00000000 		.4byte	.LFB21
 4238 00bc 14000000 		.4byte	.LFE21-.LFB21
 4239 00c0 00000000 		.4byte	.LFB22
 4240 00c4 04000000 		.4byte	.LFE22-.LFB22
 4241 00c8 00000000 		.4byte	.LFB23
 4242 00cc 18000000 		.4byte	.LFE23-.LFB23
 4243 00d0 00000000 		.4byte	.LFB24
 4244 00d4 2C000000 		.4byte	.LFE24-.LFB24
 4245 00d8 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 131


 4246 00dc 14000000 		.4byte	.LFE25-.LFB25
 4247 00e0 00000000 		.4byte	.LFB26
 4248 00e4 48000000 		.4byte	.LFE26-.LFB26
 4249 00e8 00000000 		.4byte	.LFB28
 4250 00ec 50000000 		.4byte	.LFE28-.LFB28
 4251 00f0 00000000 		.4byte	.LFB30
 4252 00f4 10000000 		.4byte	.LFE30-.LFB30
 4253 00f8 00000000 		.4byte	.LFB31
 4254 00fc 10000000 		.4byte	.LFE31-.LFB31
 4255 0100 00000000 		.4byte	.LFB29
 4256 0104 18000000 		.4byte	.LFE29-.LFB29
 4257 0108 00000000 		.4byte	.LFB27
 4258 010c 1C000000 		.4byte	.LFE27-.LFB27
 4259 0110 00000000 		.4byte	.LFB32
 4260 0114 10000000 		.4byte	.LFE32-.LFB32
 4261 0118 00000000 		.4byte	.LFB33
 4262 011c 10000000 		.4byte	.LFE33-.LFB33
 4263 0120 00000000 		.4byte	.LFB34
 4264 0124 10000000 		.4byte	.LFE34-.LFB34
 4265 0128 00000000 		.4byte	.LFB35
 4266 012c 10000000 		.4byte	.LFE35-.LFB35
 4267 0130 00000000 		.4byte	.LFB36
 4268 0134 10000000 		.4byte	.LFE36-.LFB36
 4269 0138 00000000 		.4byte	.LFB40
 4270 013c 24000000 		.4byte	.LFE40-.LFB40
 4271 0140 00000000 		.4byte	.LFB37
 4272 0144 0C000000 		.4byte	.LFE37-.LFB37
 4273 0148 00000000 		.4byte	.LFB38
 4274 014c 10000000 		.4byte	.LFE38-.LFB38
 4275 0150 00000000 		.4byte	.LFB39
 4276 0154 0C000000 		.4byte	.LFE39-.LFB39
 4277 0158 00000000 		.4byte	.LFB41
 4278 015c 70000000 		.4byte	.LFE41-.LFB41
 4279 0160 00000000 		.4byte	0
 4280 0164 00000000 		.4byte	0
 4281              		.section	.debug_ranges,"",%progbits
 4282              	.Ldebug_ranges0:
 4283 0000 08000000 		.4byte	.LBB14
 4284 0004 0A000000 		.4byte	.LBE14
 4285 0008 14000000 		.4byte	.LBB18
 4286 000c 16000000 		.4byte	.LBE18
 4287 0010 18000000 		.4byte	.LBB19
 4288 0014 1A000000 		.4byte	.LBE19
 4289 0018 00000000 		.4byte	0
 4290 001c 00000000 		.4byte	0
 4291 0020 22000000 		.4byte	.LBB20
 4292 0024 24000000 		.4byte	.LBE20
 4293 0028 26000000 		.4byte	.LBB27
 4294 002c 28000000 		.4byte	.LBE27
 4295 0030 2E000000 		.4byte	.LBB31
 4296 0034 32000000 		.4byte	.LBE31
 4297 0038 00000000 		.4byte	0
 4298 003c 00000000 		.4byte	0
 4299 0040 24000000 		.4byte	.LBB24
 4300 0044 26000000 		.4byte	.LBE24
 4301 0048 28000000 		.4byte	.LBB28
 4302 004c 2A000000 		.4byte	.LBE28
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 132


 4303 0050 00000000 		.4byte	0
 4304 0054 00000000 		.4byte	0
 4305 0058 00000000 		.4byte	.LFB0
 4306 005c 14000000 		.4byte	.LFE0
 4307 0060 00000000 		.4byte	.LFB1
 4308 0064 10000000 		.4byte	.LFE1
 4309 0068 00000000 		.4byte	.LFB2
 4310 006c 20000000 		.4byte	.LFE2
 4311 0070 00000000 		.4byte	.LFB3
 4312 0074 30000000 		.4byte	.LFE3
 4313 0078 00000000 		.4byte	.LFB4
 4314 007c 18000000 		.4byte	.LFE4
 4315 0080 00000000 		.4byte	.LFB5
 4316 0084 24000000 		.4byte	.LFE5
 4317 0088 00000000 		.4byte	.LFB6
 4318 008c 98000000 		.4byte	.LFE6
 4319 0090 00000000 		.4byte	.LFB7
 4320 0094 24000000 		.4byte	.LFE7
 4321 0098 00000000 		.4byte	.LFB8
 4322 009c 14000000 		.4byte	.LFE8
 4323 00a0 00000000 		.4byte	.LFB9
 4324 00a4 10000000 		.4byte	.LFE9
 4325 00a8 00000000 		.4byte	.LFB10
 4326 00ac 0C000000 		.4byte	.LFE10
 4327 00b0 00000000 		.4byte	.LFB11
 4328 00b4 0E000000 		.4byte	.LFE11
 4329 00b8 00000000 		.4byte	.LFB12
 4330 00bc 0C000000 		.4byte	.LFE12
 4331 00c0 00000000 		.4byte	.LFB13
 4332 00c4 10000000 		.4byte	.LFE13
 4333 00c8 00000000 		.4byte	.LFB14
 4334 00cc 10000000 		.4byte	.LFE14
 4335 00d0 00000000 		.4byte	.LFB15
 4336 00d4 30000000 		.4byte	.LFE15
 4337 00d8 00000000 		.4byte	.LFB16
 4338 00dc 20000000 		.4byte	.LFE16
 4339 00e0 00000000 		.4byte	.LFB17
 4340 00e4 14000000 		.4byte	.LFE17
 4341 00e8 00000000 		.4byte	.LFB18
 4342 00ec 18000000 		.4byte	.LFE18
 4343 00f0 00000000 		.4byte	.LFB19
 4344 00f4 14000000 		.4byte	.LFE19
 4345 00f8 00000000 		.4byte	.LFB20
 4346 00fc 14000000 		.4byte	.LFE20
 4347 0100 00000000 		.4byte	.LFB21
 4348 0104 14000000 		.4byte	.LFE21
 4349 0108 00000000 		.4byte	.LFB22
 4350 010c 04000000 		.4byte	.LFE22
 4351 0110 00000000 		.4byte	.LFB23
 4352 0114 18000000 		.4byte	.LFE23
 4353 0118 00000000 		.4byte	.LFB24
 4354 011c 2C000000 		.4byte	.LFE24
 4355 0120 00000000 		.4byte	.LFB25
 4356 0124 14000000 		.4byte	.LFE25
 4357 0128 00000000 		.4byte	.LFB26
 4358 012c 48000000 		.4byte	.LFE26
 4359 0130 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 133


 4360 0134 50000000 		.4byte	.LFE28
 4361 0138 00000000 		.4byte	.LFB30
 4362 013c 10000000 		.4byte	.LFE30
 4363 0140 00000000 		.4byte	.LFB31
 4364 0144 10000000 		.4byte	.LFE31
 4365 0148 00000000 		.4byte	.LFB29
 4366 014c 18000000 		.4byte	.LFE29
 4367 0150 00000000 		.4byte	.LFB27
 4368 0154 1C000000 		.4byte	.LFE27
 4369 0158 00000000 		.4byte	.LFB32
 4370 015c 10000000 		.4byte	.LFE32
 4371 0160 00000000 		.4byte	.LFB33
 4372 0164 10000000 		.4byte	.LFE33
 4373 0168 00000000 		.4byte	.LFB34
 4374 016c 10000000 		.4byte	.LFE34
 4375 0170 00000000 		.4byte	.LFB35
 4376 0174 10000000 		.4byte	.LFE35
 4377 0178 00000000 		.4byte	.LFB36
 4378 017c 10000000 		.4byte	.LFE36
 4379 0180 00000000 		.4byte	.LFB40
 4380 0184 24000000 		.4byte	.LFE40
 4381 0188 00000000 		.4byte	.LFB37
 4382 018c 0C000000 		.4byte	.LFE37
 4383 0190 00000000 		.4byte	.LFB38
 4384 0194 10000000 		.4byte	.LFE38
 4385 0198 00000000 		.4byte	.LFB39
 4386 019c 0C000000 		.4byte	.LFE39
 4387 01a0 00000000 		.4byte	.LFB41
 4388 01a4 70000000 		.4byte	.LFE41
 4389 01a8 00000000 		.4byte	0
 4390 01ac 00000000 		.4byte	0
 4391              		.section	.debug_line,"",%progbits
 4392              	.Ldebug_line0:
 4393 0000 73040000 		.section	.debug_str,"MS",%progbits,1
 4393      02004D00 
 4393      00000201 
 4393      FB0E0D00 
 4393      01010101 
 4394              	.LASF47:
 4395 0000 72616D56 		.ascii	"ramVectorTable\000"
 4395      6563746F 
 4395      72546162 
 4395      6C6500
 4396              	.LASF10:
 4397 000f 75696E74 		.ascii	"uint16\000"
 4397      313600
 4398              	.LASF91:
 4399 0016 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4399      4320342E 
 4399      392E3320 
 4399      32303135 
 4399      30333033 
 4400 0049 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4400      20726576 
 4400      6973696F 
 4400      6E203232 
 4400      31323230 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 134


 4401 007c 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 4401      66756E63 
 4401      74696F6E 
 4401      2D736563 
 4401      74696F6E 
 4402              	.LASF40:
 4403 00a4 696E7453 		.ascii	"intState\000"
 4403      74617465 
 4403      00
 4404              	.LASF24:
 4405 00ad 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4405      73436C6B 
 4405      57726974 
 4405      65486663 
 4405      6C6B4469 
 4406              	.LASF89:
 4407 00c6 43795379 		.ascii	"CySysClkPumpConfig\000"
 4407      73436C6B 
 4407      50756D70 
 4407      436F6E66 
 4407      696700
 4408              	.LASF46:
 4409 00d9 6F6C6449 		.ascii	"oldIsr\000"
 4409      737200
 4410              	.LASF79:
 4411 00e0 72657456 		.ascii	"retVal\000"
 4411      616C00
 4412              	.LASF39:
 4413 00e7 43794469 		.ascii	"CyDisableInts\000"
 4413      7361626C 
 4413      65496E74 
 4413      7300
 4414              	.LASF7:
 4415 00f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4415      206C6F6E 
 4415      6720756E 
 4415      7369676E 
 4415      65642069 
 4416              	.LASF88:
 4417 010c 43795379 		.ascii	"CySysTickInitVar\000"
 4417      73546963 
 4417      6B496E69 
 4417      74566172 
 4417      00
 4418              	.LASF41:
 4419 011d 4379456E 		.ascii	"CyEnableInts\000"
 4419      61626C65 
 4419      496E7473 
 4419      00
 4420              	.LASF62:
 4421 012a 4379536F 		.ascii	"CySoftwareReset\000"
 4421      66747761 
 4421      72655265 
 4421      73657400 
 4422              	.LASF70:
 4423 013a 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4423      73546963 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 135


 4423      6B456E61 
 4423      626C6549 
 4423      6E746572 
 4424              	.LASF57:
 4425 0153 4379496E 		.ascii	"CyIntGetState\000"
 4425      74476574 
 4425      53746174 
 4425      6500
 4426              	.LASF6:
 4427 0161 6C6F6E67 		.ascii	"long long int\000"
 4427      206C6F6E 
 4427      6720696E 
 4427      7400
 4428              	.LASF0:
 4429 016f 7369676E 		.ascii	"signed char\000"
 4429      65642063 
 4429      68617200 
 4430              	.LASF32:
 4431 017b 66726571 		.ascii	"freq\000"
 4431      00
 4432              	.LASF67:
 4433 0180 43794465 		.ascii	"CyDelayFreq\000"
 4433      6C617946 
 4433      72657100 
 4434              	.LASF22:
 4435 018c 696E7465 		.ascii	"interruptState\000"
 4435      72727570 
 4435      74537461 
 4435      746500
 4436              	.LASF74:
 4437 019b 43795379 		.ascii	"CySysTickGetReload\000"
 4437      73546963 
 4437      6B476574 
 4437      52656C6F 
 4437      616400
 4438              	.LASF4:
 4439 01ae 6C6F6E67 		.ascii	"long int\000"
 4439      20696E74 
 4439      00
 4440              	.LASF58:
 4441 01b7 4379496E 		.ascii	"CyIntDisable\000"
 4441      74446973 
 4441      61626C65 
 4441      00
 4442              	.LASF80:
 4443 01c4 43795379 		.ascii	"CySysTickGetCallback\000"
 4443      73546963 
 4443      6B476574 
 4443      43616C6C 
 4443      6261636B 
 4444              	.LASF9:
 4445 01d9 75696E74 		.ascii	"uint8\000"
 4445      3800
 4446              	.LASF85:
 4447 01df 63796465 		.ascii	"cydelayFreqKhz\000"
 4447      6C617946 
 4447      7265714B 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 136


 4447      687A00
 4448              	.LASF27:
 4449 01ee 656E6162 		.ascii	"enable\000"
 4449      6C6500
 4450              	.LASF13:
 4451 01f5 646F7562 		.ascii	"double\000"
 4451      6C6500
 4452              	.LASF53:
 4453 01fc 73686966 		.ascii	"shift\000"
 4453      7400
 4454              	.LASF11:
 4455 0202 75696E74 		.ascii	"uint32\000"
 4455      333200
 4456              	.LASF42:
 4457 0209 6D61736B 		.ascii	"mask\000"
 4457      00
 4458              	.LASF35:
 4459 020e 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4459      73436C6B 
 4459      47657453 
 4459      7973636C 
 4459      6B536F75 
 4460              	.LASF54:
 4461 0226 4379496E 		.ascii	"CyIntGetPriority\000"
 4461      74476574 
 4461      5072696F 
 4461      72697479 
 4461      00
 4462              	.LASF87:
 4463 0237 63796465 		.ascii	"cydelay32kMs\000"
 4463      6C617933 
 4463      326B4D73 
 4463      00
 4464              	.LASF68:
 4465 0244 43795379 		.ascii	"CySysTickInit\000"
 4465      73546963 
 4465      6B496E69 
 4465      7400
 4466              	.LASF43:
 4467 0252 76616C75 		.ascii	"value\000"
 4467      6500
 4468              	.LASF81:
 4469 0258 43794765 		.ascii	"CyGetUniqueId\000"
 4469      74556E69 
 4469      71756549 
 4469      6400
 4470              	.LASF76:
 4471 0266 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4471      73546963 
 4471      6B476574 
 4471      436F756E 
 4471      74466C61 
 4472              	.LASF8:
 4473 027c 756E7369 		.ascii	"unsigned int\000"
 4473      676E6564 
 4473      20696E74 
 4473      00
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 137


 4474              	.LASF95:
 4475 0289 43795379 		.ascii	"CySysTickClear\000"
 4475      73546963 
 4475      6B436C65 
 4475      617200
 4476              	.LASF5:
 4477 0298 6C6F6E67 		.ascii	"long unsigned int\000"
 4477      20756E73 
 4477      69676E65 
 4477      6420696E 
 4477      7400
 4478              	.LASF21:
 4479 02aa 43795379 		.ascii	"CySysClkImoStop\000"
 4479      73436C6B 
 4479      496D6F53 
 4479      746F7000 
 4480              	.LASF97:
 4481 02ba 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4481      74657243 
 4481      72697469 
 4481      63616C53 
 4481      65637469 
 4482              	.LASF59:
 4483 02d1 4379496E 		.ascii	"CyIntSetPending\000"
 4483      74536574 
 4483      50656E64 
 4483      696E6700 
 4484              	.LASF36:
 4485 02e1 43795379 		.ascii	"CySysGetResetReason\000"
 4485      73476574 
 4485      52657365 
 4485      74526561 
 4485      736F6E00 
 4486              	.LASF3:
 4487 02f5 73686F72 		.ascii	"short unsigned int\000"
 4487      7420756E 
 4487      7369676E 
 4487      65642069 
 4487      6E7400
 4488              	.LASF49:
 4489 0308 4379496E 		.ascii	"CyIntSetVector\000"
 4489      74536574 
 4489      56656374 
 4489      6F7200
 4490              	.LASF44:
 4491 0317 6E756D62 		.ascii	"number\000"
 4491      657200
 4492              	.LASF52:
 4493 031e 7072696F 		.ascii	"priority\000"
 4493      72697479 
 4493      00
 4494              	.LASF31:
 4495 0327 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4495      73436C6B 
 4495      57726974 
 4495      65496D6F 
 4495      46726571 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 138


 4496              	.LASF96:
 4497 033c 4379496E 		.ascii	"CyIntSetSysVector\000"
 4497      74536574 
 4497      53797356 
 4497      6563746F 
 4497      7200
 4498              	.LASF25:
 4499 034e 43795379 		.ascii	"CySysEnablePumpClock\000"
 4499      73456E61 
 4499      626C6550 
 4499      756D7043 
 4499      6C6F636B 
 4500              	.LASF16:
 4501 0363 72656733 		.ascii	"reg32\000"
 4501      3200
 4502              	.LASF72:
 4503 0369 43795379 		.ascii	"CySysTickStart\000"
 4503      73546963 
 4503      6B537461 
 4503      727400
 4504              	.LASF38:
 4505 0378 72657475 		.ascii	"returnStatus\000"
 4505      726E5374 
 4505      61747573 
 4505      00
 4506              	.LASF18:
 4507 0385 73697A65 		.ascii	"sizetype\000"
 4507      74797065 
 4507      00
 4508              	.LASF60:
 4509 038e 4379496E 		.ascii	"CyIntClearPending\000"
 4509      74436C65 
 4509      61725065 
 4509      6E64696E 
 4509      6700
 4510              	.LASF45:
 4511 03a0 61646472 		.ascii	"address\000"
 4511      65737300 
 4512              	.LASF28:
 4513 03a8 73797363 		.ascii	"sysclkSource\000"
 4513      6C6B536F 
 4513      75726365 
 4513      00
 4514              	.LASF78:
 4515 03b5 66756E63 		.ascii	"function\000"
 4515      74696F6E 
 4515      00
 4516              	.LASF75:
 4517 03be 43795379 		.ascii	"CySysTickGetValue\000"
 4517      73546963 
 4517      6B476574 
 4517      56616C75 
 4517      6500
 4518              	.LASF84:
 4519 03d0 63796465 		.ascii	"cydelayFreqHz\000"
 4519      6C617946 
 4519      72657148 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 139


 4519      7A00
 4520              	.LASF51:
 4521 03de 4379496E 		.ascii	"CyIntSetPriority\000"
 4521      74536574 
 4521      5072696F 
 4521      72697479 
 4521      00
 4522              	.LASF12:
 4523 03ef 666C6F61 		.ascii	"float\000"
 4523      7400
 4524              	.LASF90:
 4525 03f5 43794578 		.ascii	"CyExitCriticalSection\000"
 4525      69744372 
 4525      69746963 
 4525      616C5365 
 4525      6374696F 
 4526              	.LASF19:
 4527 040b 63795379 		.ascii	"cySysTickCallback\000"
 4527      73546963 
 4527      6B43616C 
 4527      6C626163 
 4527      6B00
 4528              	.LASF50:
 4529 041d 4379496E 		.ascii	"CyIntGetVector\000"
 4529      74476574 
 4529      56656374 
 4529      6F7200
 4530              	.LASF64:
 4531 042c 6D696C6C 		.ascii	"milliseconds\000"
 4531      69736563 
 4531      6F6E6473 
 4531      00
 4532              	.LASF98:
 4533 0439 43794465 		.ascii	"CyDelayCycles\000"
 4533      6C617943 
 4533      79636C65 
 4533      7300
 4534              	.LASF15:
 4535 0447 72656738 		.ascii	"reg8\000"
 4535      00
 4536              	.LASF61:
 4537 044c 43794861 		.ascii	"CyHalt\000"
 4537      6C7400
 4538              	.LASF1:
 4539 0453 756E7369 		.ascii	"unsigned char\000"
 4539      676E6564 
 4539      20636861 
 4539      7200
 4540              	.LASF37:
 4541 0461 72656173 		.ascii	"reason\000"
 4541      6F6E00
 4542              	.LASF2:
 4543 0468 73686F72 		.ascii	"short int\000"
 4543      7420696E 
 4543      7400
 4544              	.LASF56:
 4545 0472 4379496E 		.ascii	"CyIntEnable\000"
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 140


 4545      74456E61 
 4545      626C6500 
 4546              	.LASF48:
 4547 047e 4379496E 		.ascii	"CyIntGetSysVector\000"
 4547      74476574 
 4547      53797356 
 4547      6563746F 
 4547      7200
 4548              	.LASF26:
 4549 0490 636C6B53 		.ascii	"clkSelect\000"
 4549      656C6563 
 4549      7400
 4550              	.LASF65:
 4551 049a 43794465 		.ascii	"CyDelayUs\000"
 4551      6C617955 
 4551      7300
 4552              	.LASF94:
 4553 04a4 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4553      73546963 
 4553      6B536572 
 4553      76696365 
 4553      43616C6C 
 4554              	.LASF14:
 4555 04be 63686172 		.ascii	"char\000"
 4555      00
 4556              	.LASF17:
 4557 04c3 63796973 		.ascii	"cyisraddress\000"
 4557      72616464 
 4557      72657373 
 4557      00
 4558              	.LASF71:
 4559 04d0 43795379 		.ascii	"CySysTickEnable\000"
 4559      73546963 
 4559      6B456E61 
 4559      626C6500 
 4560              	.LASF34:
 4561 04e0 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 4561      73436C6B 
 4561      57726974 
 4561      65486663 
 4561      6C6B4469 
 4562              	.LASF93:
 4563 04f6 433A5C55 		.ascii	"C:\\Users\\Tim Chen\\Desktop\\Test proximity auto t"
 4563      73657273 
 4563      5C54696D 
 4563      20436865 
 4563      6E5C4465 
 4564 0525 756E696E 		.ascii	"uning\\MH-8W_Proximity_Board_V9_20170619\\MH-8W_PRO"
 4564      675C4D48 
 4564      2D38575F 
 4564      50726F78 
 4564      696D6974 
 4565 0556 58494D49 		.ascii	"XIMITY.cydsn\\Bootloader_V01\\Bootloader_PSoC4_Exam"
 4565      54592E63 
 4565      7964736E 
 4565      5C426F6F 
 4565      746C6F61 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 141


 4566 0587 706C6530 		.ascii	"ple01.cydsn\000"
 4566      312E6379 
 4566      64736E00 
 4567              	.LASF29:
 4568 0593 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4568      73436C6B 
 4568      57726974 
 4568      65537973 
 4568      636C6B44 
 4569              	.LASF77:
 4570 05aa 43795379 		.ascii	"CySysTickSetCallback\000"
 4570      73546963 
 4570      6B536574 
 4570      43616C6C 
 4570      6261636B 
 4571              	.LASF83:
 4572 05bf 43795379 		.ascii	"CySysTickCallbacks\000"
 4572      73546963 
 4572      6B43616C 
 4572      6C626163 
 4572      6B7300
 4573              	.LASF33:
 4574 05d2 696D6F54 		.ascii	"imoTrim1Value\000"
 4574      72696D31 
 4574      56616C75 
 4574      6500
 4575              	.LASF82:
 4576 05e0 756E6971 		.ascii	"uniqueId\000"
 4576      75654964 
 4576      00
 4577              	.LASF63:
 4578 05e9 43794465 		.ascii	"CyDelay\000"
 4578      6C617900 
 4579              	.LASF73:
 4580 05f1 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4580      73546963 
 4580      6B446973 
 4580      61626C65 
 4580      496E7465 
 4581              	.LASF86:
 4582 060b 63796465 		.ascii	"cydelayFreqMhz\000"
 4582      6C617946 
 4582      7265714D 
 4582      687A00
 4583              	.LASF69:
 4584 061a 43795379 		.ascii	"CySysTickStop\000"
 4584      73546963 
 4584      6B53746F 
 4584      7000
 4585              	.LASF30:
 4586 0628 64697669 		.ascii	"divider\000"
 4586      64657200 
 4587              	.LASF20:
 4588 0630 43795379 		.ascii	"CySysClkImoStart\000"
 4588      73436C6B 
 4588      496D6F53 
 4588      74617274 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccsTM2Uc.s 			page 142


 4588      00
 4589              	.LASF92:
 4590 0641 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4590      72617465 
 4590      645F536F 
 4590      75726365 
 4590      5C50536F 
 4591              	.LASF66:
 4592 0660 6D696372 		.ascii	"microseconds\000"
 4592      6F736563 
 4592      6F6E6473 
 4592      00
 4593              	.LASF23:
 4594 066d 746D7052 		.ascii	"tmpReg\000"
 4594      656700
 4595              	.LASF55:
 4596 0674 43795379 		.ascii	"CySysTickSetReload\000"
 4596      73546963 
 4596      6B536574 
 4596      52656C6F 
 4596      616400
 4597              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
