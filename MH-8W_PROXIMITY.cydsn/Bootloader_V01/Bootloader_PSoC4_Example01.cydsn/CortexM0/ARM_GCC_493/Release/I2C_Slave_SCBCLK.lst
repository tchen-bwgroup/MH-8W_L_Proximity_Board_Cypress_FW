ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_Slave_SCBCLK.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2C_Slave_SCBCLK_StartEx,"ax",%progbits
  18              		.align	1
  19              		.global	I2C_Slave_SCBCLK_StartEx
  20              		.code	16
  21              		.thumb_func
  22              		.type	I2C_Slave_SCBCLK_StartEx, %function
  23              	I2C_Slave_SCBCLK_StartEx:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\I2C_Slave_SCBCLK.c"
   1:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * File Name: I2C_Slave_SCBCLK.c
   3:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Version 2.20
   4:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
   5:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  Description:
   6:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
   8:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  Note:
   9:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  12:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** ********************************************************************************
  13:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
  19:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #include "I2C_Slave_SCBCLK.h"
  21:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
  22:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #if defined CYREG_PERI_DIV_CMD
  23:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
  24:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Function Name: I2C_Slave_SCBCLK_StartEx
  26:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** ********************************************************************************
  27:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  28:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Summary:
  29:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  Starts the clock, aligned to the specified running clock.
  30:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  31:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Parameters:
  32:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 2


  33:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *    clock is started.
  34:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  35:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Returns:
  36:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  None
  37:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  38:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** void I2C_Slave_SCBCLK_StartEx(uint32 alignClkDiv)
  40:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  28              	.LVL0:
  29              	.L2:
  41:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     /* Make sure any previous start command has finished. */
  42:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     while((I2C_Slave_SCBCLK_CMD_REG & I2C_Slave_SCBCLK_CMD_ENABLE_MASK) != 0u)
  30              		.loc 1 42 0 discriminator 1
  31 0000 044B     		ldr	r3, .L4
  32 0002 1A68     		ldr	r2, [r3]
  33 0004 002A     		cmp	r2, #0
  34 0006 FBDB     		blt	.L2
  43:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     {
  44:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     }
  45:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     
  46:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     I2C_Slave_SCBCLK_CMD_REG =
  48:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         ((uint32)I2C_Slave_SCBCLK__DIV_ID << I2C_Slave_SCBCLK_CMD_DIV_SHIFT)|
  49:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         (alignClkDiv << I2C_Slave_SCBCLK_CMD_PA_DIV_SHIFT) |
  35              		.loc 1 49 0
  36 0008 034A     		ldr	r2, .L4+4
  37 000a 0002     		lsl	r0, r0, #8
  38              	.LVL1:
  39 000c 1043     		orr	r0, r2
  47:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         ((uint32)I2C_Slave_SCBCLK__DIV_ID << I2C_Slave_SCBCLK_CMD_DIV_SHIFT)|
  40              		.loc 1 47 0
  41 000e 1860     		str	r0, [r3]
  50:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         (uint32)I2C_Slave_SCBCLK_CMD_ENABLE_MASK;
  51:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** }
  42              		.loc 1 51 0
  43              		@ sp needed
  44 0010 7047     		bx	lr
  45              	.L5:
  46 0012 C046     		.align	2
  47              	.L4:
  48 0014 00000140 		.word	1073807360
  49 0018 40000080 		.word	-2147483584
  50              		.cfi_endproc
  51              	.LFE0:
  52              		.size	I2C_Slave_SCBCLK_StartEx, .-I2C_Slave_SCBCLK_StartEx
  53              		.section	.text.I2C_Slave_SCBCLK_Stop,"ax",%progbits
  54              		.align	1
  55              		.global	I2C_Slave_SCBCLK_Stop
  56              		.code	16
  57              		.thumb_func
  58              		.type	I2C_Slave_SCBCLK_Stop, %function
  59              	I2C_Slave_SCBCLK_Stop:
  60              	.LFB1:
  52:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
  53:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #else
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 3


  54:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
  55:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** /*******************************************************************************
  56:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Function Name: I2C_Slave_SCBCLK_Start
  57:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** ********************************************************************************
  58:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  59:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Summary:
  60:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  Starts the clock.
  61:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  62:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Parameters:
  63:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  None
  64:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  65:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Returns:
  66:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  None
  67:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  68:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *******************************************************************************/
  69:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
  70:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** void I2C_Slave_SCBCLK_Start(void)
  71:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** {
  72:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     /* Set the bit to enable the clock. */
  73:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     I2C_Slave_SCBCLK_ENABLE_REG |= I2C_Slave_SCBCLK__ENABLE_MASK;
  74:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** }
  75:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
  76:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
  78:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
  79:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Function Name: I2C_Slave_SCBCLK_Stop
  81:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** ********************************************************************************
  82:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  83:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Summary:
  84:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  Stops the clock and returns immediately. This API does not require the
  85:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  source clock to be running but may return before the hardware is actually
  86:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  disabled.
  87:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  88:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Parameters:
  89:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  None
  90:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  91:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Returns:
  92:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  None
  93:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
  94:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** void I2C_Slave_SCBCLK_Stop(void)
  96:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** {
  61              		.loc 1 96 0
  62              		.cfi_startproc
  63              	.L7:
  97:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #if defined CYREG_PERI_DIV_CMD
  98:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
  99:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     /* Make sure any previous start command has finished. */
 100:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     while((I2C_Slave_SCBCLK_CMD_REG & I2C_Slave_SCBCLK_CMD_ENABLE_MASK) != 0u)
  64              		.loc 1 100 0 discriminator 1
  65 0000 034B     		ldr	r3, .L8
  66 0002 1A68     		ldr	r2, [r3]
  67 0004 002A     		cmp	r2, #0
  68 0006 FBDB     		blt	.L7
 101:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     {
 102:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     }
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 4


 103:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     
 104:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     I2C_Slave_SCBCLK_CMD_REG =
  69              		.loc 1 105 0
  70 0008 024A     		ldr	r2, .L8+4
 106:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         ((uint32)I2C_Slave_SCBCLK__DIV_ID << I2C_Slave_SCBCLK_CMD_DIV_SHIFT)|
 107:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         ((uint32)I2C_Slave_SCBCLK_CMD_DISABLE_MASK);
 108:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
 109:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #else
 110:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
 111:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     /* Clear the bit to disable the clock. */
 112:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     I2C_Slave_SCBCLK_ENABLE_REG &= (uint32)(~I2C_Slave_SCBCLK__ENABLE_MASK);
 113:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     
 114:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** }
  71              		.loc 1 115 0
  72              		@ sp needed
 105:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         ((uint32)I2C_Slave_SCBCLK__DIV_ID << I2C_Slave_SCBCLK_CMD_DIV_SHIFT)|
  73              		.loc 1 105 0
  74 000a 1A60     		str	r2, [r3]
  75              		.loc 1 115 0
  76 000c 7047     		bx	lr
  77              	.L9:
  78 000e C046     		.align	2
  79              	.L8:
  80 0010 00000140 		.word	1073807360
  81 0014 40000040 		.word	1073741888
  82              		.cfi_endproc
  83              	.LFE1:
  84              		.size	I2C_Slave_SCBCLK_Stop, .-I2C_Slave_SCBCLK_Stop
  85              		.section	.text.I2C_Slave_SCBCLK_SetFractionalDividerRegister,"ax",%progbits
  86              		.align	1
  87              		.global	I2C_Slave_SCBCLK_SetFractionalDividerRegister
  88              		.code	16
  89              		.thumb_func
  90              		.type	I2C_Slave_SCBCLK_SetFractionalDividerRegister, %function
  91              	I2C_Slave_SCBCLK_SetFractionalDividerRegister:
  92              	.LFB2:
 116:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
 117:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
 118:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Function Name: I2C_Slave_SCBCLK_SetFractionalDividerRegister
 120:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** ********************************************************************************
 121:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
 122:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Summary:
 123:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  Modifies the clock divider and the fractional divider.
 124:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
 125:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Parameters:
 126:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Returns:
 131:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  None
 132:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
 133:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** void I2C_Slave_SCBCLK_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 5


 135:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** {
  93              		.loc 1 135 0
  94              		.cfi_startproc
  95              	.LVL2:
 136:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     uint32 maskVal;
 137:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     uint32 regVal;
 138:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     
 139:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #if defined (I2C_Slave_SCBCLK__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     
 141:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 	/* get all but divider bits */
 142:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     maskVal = I2C_Slave_SCBCLK_DIV_REG & 
 143:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****                     (uint32)(~(uint32)(I2C_Slave_SCBCLK_DIV_INT_MASK | I2C_Slave_SCBCLK_DIV_FRAC_MA
 144:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     regVal = maskVal |
 146:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  I2C_Slave_SCBCLK_DIV_INT_SHIFT) & I2C_Slave_SCBCLK_DIV_INT
 147:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         ((uint32)((uint32)clkFractional << I2C_Slave_SCBCLK_DIV_FRAC_SHIFT) & I2C_Slave_SCBCLK_DIV_
  96              		.loc 1 147 0
  97 0000 FF22     		mov	r2, #255
 142:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****                     (uint32)(~(uint32)(I2C_Slave_SCBCLK_DIV_INT_MASK | I2C_Slave_SCBCLK_DIV_FRAC_MA
  98              		.loc 1 142 0
  99 0002 0723     		mov	r3, #7
 135:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     uint32 maskVal;
 100              		.loc 1 135 0
 101 0004 30B5     		push	{r4, r5, lr}
 102              		.cfi_def_cfa_offset 12
 103              		.cfi_offset 4, -12
 104              		.cfi_offset 5, -8
 105              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****                     (uint32)(~(uint32)(I2C_Slave_SCBCLK_DIV_INT_MASK | I2C_Slave_SCBCLK_DIV_FRAC_MA
 106              		.loc 1 142 0
 107 0006 054C     		ldr	r4, .L11
 108              		.loc 1 147 0
 109 0008 C900     		lsl	r1, r1, #3
 110              	.LVL3:
 142:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****                     (uint32)(~(uint32)(I2C_Slave_SCBCLK_DIV_INT_MASK | I2C_Slave_SCBCLK_DIV_FRAC_MA
 111              		.loc 1 142 0
 112 000a 2568     		ldr	r5, [r4]
 113              	.LVL4:
 146:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         ((uint32)((uint32)clkFractional << I2C_Slave_SCBCLK_DIV_FRAC_SHIFT) & I2C_Slave_SCBCLK_DIV_
 114              		.loc 1 146 0
 115 000c 0002     		lsl	r0, r0, #8
 116              	.LVL5:
 117              		.loc 1 147 0
 118 000e 1140     		and	r1, r2
 142:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****                     (uint32)(~(uint32)(I2C_Slave_SCBCLK_DIV_INT_MASK | I2C_Slave_SCBCLK_DIV_FRAC_MA
 119              		.loc 1 142 0
 120 0010 2B40     		and	r3, r5
 121              	.LVL6:
 122 0012 0143     		orr	r1, r0
 145:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  I2C_Slave_SCBCLK_DIV_INT_SHIFT) & I2C_Slave_SCBCLK_DIV_INT
 123              		.loc 1 145 0
 124 0014 1943     		orr	r1, r3
 125              	.LVL7:
 148:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     
 149:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #else
 150:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     /* get all but integer divider bits */
 151:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     maskVal = I2C_Slave_SCBCLK_DIV_REG & (uint32)(~(uint32)I2C_Slave_SCBCLK__DIVIDER_MASK);
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 6


 152:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     /* combine mask and new divider val into 32-bit value */
 153:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     regVal = clkDivider | maskVal;
 154:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     
 155:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #endif /* I2C_Slave_SCBCLK__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
 157:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     I2C_Slave_SCBCLK_DIV_REG = regVal;
 126              		.loc 1 157 0
 127 0016 2160     		str	r1, [r4]
 158:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** }
 128              		.loc 1 158 0
 129              		@ sp needed
 130 0018 30BD     		pop	{r4, r5, pc}
 131              	.L12:
 132 001a C046     		.align	2
 133              	.L11:
 134 001c 00030140 		.word	1073808128
 135              		.cfi_endproc
 136              	.LFE2:
 137              		.size	I2C_Slave_SCBCLK_SetFractionalDividerRegister, .-I2C_Slave_SCBCLK_SetFractionalDividerRegist
 138              		.section	.text.I2C_Slave_SCBCLK_GetDividerRegister,"ax",%progbits
 139              		.align	1
 140              		.global	I2C_Slave_SCBCLK_GetDividerRegister
 141              		.code	16
 142              		.thumb_func
 143              		.type	I2C_Slave_SCBCLK_GetDividerRegister, %function
 144              	I2C_Slave_SCBCLK_GetDividerRegister:
 145              	.LFB3:
 159:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
 160:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
 161:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** /*******************************************************************************
 162:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Function Name: I2C_Slave_SCBCLK_GetDividerRegister
 163:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** ********************************************************************************
 164:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
 165:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Summary:
 166:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  Gets the clock divider register value.
 167:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
 168:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Parameters:
 169:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  None
 170:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
 171:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Returns:
 172:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  divide by 2, the return value will be 1.
 174:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
 175:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *******************************************************************************/
 176:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** uint16 I2C_Slave_SCBCLK_GetDividerRegister(void)
 177:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** {
 146              		.loc 1 177 0
 147              		.cfi_startproc
 178:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     return (uint16)((I2C_Slave_SCBCLK_DIV_REG & I2C_Slave_SCBCLK_DIV_INT_MASK)
 148              		.loc 1 178 0
 149 0000 024B     		ldr	r3, .L14
 179:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         >> I2C_Slave_SCBCLK_DIV_INT_SHIFT);
 180:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** }
 150              		.loc 1 180 0
 151              		@ sp needed
 178:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     return (uint16)((I2C_Slave_SCBCLK_DIV_REG & I2C_Slave_SCBCLK_DIV_INT_MASK)
 152              		.loc 1 178 0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 7


 153 0002 1868     		ldr	r0, [r3]
 179:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         >> I2C_Slave_SCBCLK_DIV_INT_SHIFT);
 154              		.loc 1 179 0
 155 0004 000A     		lsr	r0, r0, #8
 178:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     return (uint16)((I2C_Slave_SCBCLK_DIV_REG & I2C_Slave_SCBCLK_DIV_INT_MASK)
 156              		.loc 1 178 0
 157 0006 80B2     		uxth	r0, r0
 158              		.loc 1 180 0
 159 0008 7047     		bx	lr
 160              	.L15:
 161 000a C046     		.align	2
 162              	.L14:
 163 000c 00030140 		.word	1073808128
 164              		.cfi_endproc
 165              	.LFE3:
 166              		.size	I2C_Slave_SCBCLK_GetDividerRegister, .-I2C_Slave_SCBCLK_GetDividerRegister
 167              		.section	.text.I2C_Slave_SCBCLK_GetFractionalDividerRegister,"ax",%progbits
 168              		.align	1
 169              		.global	I2C_Slave_SCBCLK_GetFractionalDividerRegister
 170              		.code	16
 171              		.thumb_func
 172              		.type	I2C_Slave_SCBCLK_GetFractionalDividerRegister, %function
 173              	I2C_Slave_SCBCLK_GetFractionalDividerRegister:
 174              	.LFB4:
 181:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
 182:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** 
 183:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** /*******************************************************************************
 184:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Function Name: I2C_Slave_SCBCLK_GetFractionalDividerRegister
 185:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** ********************************************************************************
 186:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
 187:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Summary:
 188:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  Gets the clock fractional divider register value.
 189:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
 190:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Parameters:
 191:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  None
 192:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
 193:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** * Returns:
 194:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  Fractional Divide value of the clock
 195:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *  0 if the fractional divider is not in use.
 196:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *
 197:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** *******************************************************************************/
 198:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** uint8 I2C_Slave_SCBCLK_GetFractionalDividerRegister(void)
 199:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** {
 175              		.loc 1 199 0
 176              		.cfi_startproc
 200:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #if defined (I2C_Slave_SCBCLK__FRAC_MASK)
 201:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     /* return fractional divider bits */
 202:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     return (uint8)((I2C_Slave_SCBCLK_DIV_REG & I2C_Slave_SCBCLK_DIV_FRAC_MASK)
 203:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****         >> I2C_Slave_SCBCLK_DIV_FRAC_SHIFT);
 204:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #else
 205:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c ****     return 0u;
 206:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** #endif /* I2C_Slave_SCBCLK__FRAC_MASK */
 207:Generated_Source\PSoC4/I2C_Slave_SCBCLK.c **** }
 177              		.loc 1 207 0
 178 0000 0020     		mov	r0, #0
 179              		@ sp needed
 180 0002 7047     		bx	lr
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 8


 181              		.cfi_endproc
 182              	.LFE4:
 183              		.size	I2C_Slave_SCBCLK_GetFractionalDividerRegister, .-I2C_Slave_SCBCLK_GetFractionalDividerRegist
 184              		.text
 185              	.Letext0:
 186              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 187              		.section	.debug_info,"",%progbits
 188              	.Ldebug_info0:
 189 0000 62010000 		.4byte	0x162
 190 0004 0400     		.2byte	0x4
 191 0006 00000000 		.4byte	.Ldebug_abbrev0
 192 000a 04       		.byte	0x4
 193 000b 01       		.uleb128 0x1
 194 000c 06000000 		.4byte	.LASF25
 195 0010 01       		.byte	0x1
 196 0011 DF010000 		.4byte	.LASF26
 197 0015 B2000000 		.4byte	.LASF27
 198 0019 00000000 		.4byte	.Ldebug_ranges0+0
 199 001d 00000000 		.4byte	0
 200 0021 00000000 		.4byte	.Ldebug_line0
 201 0025 02       		.uleb128 0x2
 202 0026 01       		.byte	0x1
 203 0027 06       		.byte	0x6
 204 0028 C3020000 		.4byte	.LASF0
 205 002c 02       		.uleb128 0x2
 206 002d 01       		.byte	0x1
 207 002e 08       		.byte	0x8
 208 002f 55010000 		.4byte	.LASF1
 209 0033 02       		.uleb128 0x2
 210 0034 02       		.byte	0x2
 211 0035 05       		.byte	0x5
 212 0036 7C020000 		.4byte	.LASF2
 213 003a 02       		.uleb128 0x2
 214 003b 02       		.byte	0x2
 215 003c 07       		.byte	0x7
 216 003d 99010000 		.4byte	.LASF3
 217 0041 02       		.uleb128 0x2
 218 0042 04       		.byte	0x4
 219 0043 05       		.byte	0x5
 220 0044 BA020000 		.4byte	.LASF4
 221 0048 02       		.uleb128 0x2
 222 0049 04       		.byte	0x4
 223 004a 07       		.byte	0x7
 224 004b 87010000 		.4byte	.LASF5
 225 004f 02       		.uleb128 0x2
 226 0050 08       		.byte	0x8
 227 0051 05       		.byte	0x5
 228 0052 69020000 		.4byte	.LASF6
 229 0056 02       		.uleb128 0x2
 230 0057 08       		.byte	0x8
 231 0058 07       		.byte	0x7
 232 0059 24020000 		.4byte	.LASF7
 233 005d 03       		.uleb128 0x3
 234 005e 04       		.byte	0x4
 235 005f 05       		.byte	0x5
 236 0060 696E7400 		.ascii	"int\000"
 237 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 9


 238 0065 04       		.byte	0x4
 239 0066 07       		.byte	0x7
 240 0067 17020000 		.4byte	.LASF8
 241 006b 04       		.uleb128 0x4
 242 006c B4020000 		.4byte	.LASF9
 243 0070 02       		.byte	0x2
 244 0071 B901     		.2byte	0x1b9
 245 0073 2C000000 		.4byte	0x2c
 246 0077 04       		.uleb128 0x4
 247 0078 09020000 		.4byte	.LASF10
 248 007c 02       		.byte	0x2
 249 007d BA01     		.2byte	0x1ba
 250 007f 3A000000 		.4byte	0x3a
 251 0083 04       		.uleb128 0x4
 252 0084 10020000 		.4byte	.LASF11
 253 0088 02       		.byte	0x2
 254 0089 BB01     		.2byte	0x1bb
 255 008b 48000000 		.4byte	0x48
 256 008f 02       		.uleb128 0x2
 257 0090 04       		.byte	0x4
 258 0091 04       		.byte	0x4
 259 0092 4F010000 		.4byte	.LASF12
 260 0096 02       		.uleb128 0x2
 261 0097 08       		.byte	0x8
 262 0098 04       		.byte	0x4
 263 0099 B7010000 		.4byte	.LASF13
 264 009d 02       		.uleb128 0x2
 265 009e 01       		.byte	0x1
 266 009f 08       		.byte	0x8
 267 00a0 77020000 		.4byte	.LASF14
 268 00a4 04       		.uleb128 0x4
 269 00a5 00000000 		.4byte	.LASF15
 270 00a9 02       		.byte	0x2
 271 00aa 6502     		.2byte	0x265
 272 00ac B0000000 		.4byte	0xb0
 273 00b0 05       		.uleb128 0x5
 274 00b1 83000000 		.4byte	0x83
 275 00b5 06       		.uleb128 0x6
 276 00b6 CF020000 		.4byte	.LASF16
 277 00ba 01       		.byte	0x1
 278 00bb 27       		.byte	0x27
 279 00bc 00000000 		.4byte	.LFB0
 280 00c0 1C000000 		.4byte	.LFE0-.LFB0
 281 00c4 01       		.uleb128 0x1
 282 00c5 9C       		.byte	0x9c
 283 00c6 DA000000 		.4byte	0xda
 284 00ca 07       		.uleb128 0x7
 285 00cb C5010000 		.4byte	.LASF18
 286 00cf 01       		.byte	0x1
 287 00d0 27       		.byte	0x27
 288 00d1 83000000 		.4byte	0x83
 289 00d5 00000000 		.4byte	.LLST0
 290 00d9 00       		.byte	0
 291 00da 08       		.uleb128 0x8
 292 00db 9C000000 		.4byte	.LASF28
 293 00df 01       		.byte	0x1
 294 00e0 5F       		.byte	0x5f
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 10


 295 00e1 00000000 		.4byte	.LFB1
 296 00e5 18000000 		.4byte	.LFE1-.LFB1
 297 00e9 01       		.uleb128 0x1
 298 00ea 9C       		.byte	0x9c
 299 00eb 06       		.uleb128 0x6
 300 00ec 86020000 		.4byte	.LASF17
 301 00f0 01       		.byte	0x1
 302 00f1 86       		.byte	0x86
 303 00f2 00000000 		.4byte	.LFB2
 304 00f6 20000000 		.4byte	.LFE2-.LFB2
 305 00fa 01       		.uleb128 0x1
 306 00fb 9C       		.byte	0x9c
 307 00fc 3B010000 		.4byte	0x13b
 308 0100 07       		.uleb128 0x7
 309 0101 AC010000 		.4byte	.LASF19
 310 0105 01       		.byte	0x1
 311 0106 86       		.byte	0x86
 312 0107 77000000 		.4byte	0x77
 313 010b 21000000 		.4byte	.LLST1
 314 010f 07       		.uleb128 0x7
 315 0110 D1010000 		.4byte	.LASF20
 316 0114 01       		.byte	0x1
 317 0115 86       		.byte	0x86
 318 0116 6B000000 		.4byte	0x6b
 319 011a 42000000 		.4byte	.LLST2
 320 011e 09       		.uleb128 0x9
 321 011f 94000000 		.4byte	.LASF21
 322 0123 01       		.byte	0x1
 323 0124 88       		.byte	0x88
 324 0125 83000000 		.4byte	0x83
 325 0129 63000000 		.4byte	.LLST3
 326 012d 0A       		.uleb128 0xa
 327 012e BE010000 		.4byte	.LASF22
 328 0132 01       		.byte	0x1
 329 0133 89       		.byte	0x89
 330 0134 83000000 		.4byte	0x83
 331 0138 01       		.uleb128 0x1
 332 0139 51       		.byte	0x51
 333 013a 00       		.byte	0
 334 013b 0B       		.uleb128 0xb
 335 013c 63010000 		.4byte	.LASF23
 336 0140 01       		.byte	0x1
 337 0141 B0       		.byte	0xb0
 338 0142 77000000 		.4byte	0x77
 339 0146 00000000 		.4byte	.LFB3
 340 014a 10000000 		.4byte	.LFE3-.LFB3
 341 014e 01       		.uleb128 0x1
 342 014f 9C       		.byte	0x9c
 343 0150 0B       		.uleb128 0xb
 344 0151 3B020000 		.4byte	.LASF24
 345 0155 01       		.byte	0x1
 346 0156 C6       		.byte	0xc6
 347 0157 6B000000 		.4byte	0x6b
 348 015b 00000000 		.4byte	.LFB4
 349 015f 04000000 		.4byte	.LFE4-.LFB4
 350 0163 01       		.uleb128 0x1
 351 0164 9C       		.byte	0x9c
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 11


 352 0165 00       		.byte	0
 353              		.section	.debug_abbrev,"",%progbits
 354              	.Ldebug_abbrev0:
 355 0000 01       		.uleb128 0x1
 356 0001 11       		.uleb128 0x11
 357 0002 01       		.byte	0x1
 358 0003 25       		.uleb128 0x25
 359 0004 0E       		.uleb128 0xe
 360 0005 13       		.uleb128 0x13
 361 0006 0B       		.uleb128 0xb
 362 0007 03       		.uleb128 0x3
 363 0008 0E       		.uleb128 0xe
 364 0009 1B       		.uleb128 0x1b
 365 000a 0E       		.uleb128 0xe
 366 000b 55       		.uleb128 0x55
 367 000c 17       		.uleb128 0x17
 368 000d 11       		.uleb128 0x11
 369 000e 01       		.uleb128 0x1
 370 000f 10       		.uleb128 0x10
 371 0010 17       		.uleb128 0x17
 372 0011 00       		.byte	0
 373 0012 00       		.byte	0
 374 0013 02       		.uleb128 0x2
 375 0014 24       		.uleb128 0x24
 376 0015 00       		.byte	0
 377 0016 0B       		.uleb128 0xb
 378 0017 0B       		.uleb128 0xb
 379 0018 3E       		.uleb128 0x3e
 380 0019 0B       		.uleb128 0xb
 381 001a 03       		.uleb128 0x3
 382 001b 0E       		.uleb128 0xe
 383 001c 00       		.byte	0
 384 001d 00       		.byte	0
 385 001e 03       		.uleb128 0x3
 386 001f 24       		.uleb128 0x24
 387 0020 00       		.byte	0
 388 0021 0B       		.uleb128 0xb
 389 0022 0B       		.uleb128 0xb
 390 0023 3E       		.uleb128 0x3e
 391 0024 0B       		.uleb128 0xb
 392 0025 03       		.uleb128 0x3
 393 0026 08       		.uleb128 0x8
 394 0027 00       		.byte	0
 395 0028 00       		.byte	0
 396 0029 04       		.uleb128 0x4
 397 002a 16       		.uleb128 0x16
 398 002b 00       		.byte	0
 399 002c 03       		.uleb128 0x3
 400 002d 0E       		.uleb128 0xe
 401 002e 3A       		.uleb128 0x3a
 402 002f 0B       		.uleb128 0xb
 403 0030 3B       		.uleb128 0x3b
 404 0031 05       		.uleb128 0x5
 405 0032 49       		.uleb128 0x49
 406 0033 13       		.uleb128 0x13
 407 0034 00       		.byte	0
 408 0035 00       		.byte	0
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 12


 409 0036 05       		.uleb128 0x5
 410 0037 35       		.uleb128 0x35
 411 0038 00       		.byte	0
 412 0039 49       		.uleb128 0x49
 413 003a 13       		.uleb128 0x13
 414 003b 00       		.byte	0
 415 003c 00       		.byte	0
 416 003d 06       		.uleb128 0x6
 417 003e 2E       		.uleb128 0x2e
 418 003f 01       		.byte	0x1
 419 0040 3F       		.uleb128 0x3f
 420 0041 19       		.uleb128 0x19
 421 0042 03       		.uleb128 0x3
 422 0043 0E       		.uleb128 0xe
 423 0044 3A       		.uleb128 0x3a
 424 0045 0B       		.uleb128 0xb
 425 0046 3B       		.uleb128 0x3b
 426 0047 0B       		.uleb128 0xb
 427 0048 27       		.uleb128 0x27
 428 0049 19       		.uleb128 0x19
 429 004a 11       		.uleb128 0x11
 430 004b 01       		.uleb128 0x1
 431 004c 12       		.uleb128 0x12
 432 004d 06       		.uleb128 0x6
 433 004e 40       		.uleb128 0x40
 434 004f 18       		.uleb128 0x18
 435 0050 9742     		.uleb128 0x2117
 436 0052 19       		.uleb128 0x19
 437 0053 01       		.uleb128 0x1
 438 0054 13       		.uleb128 0x13
 439 0055 00       		.byte	0
 440 0056 00       		.byte	0
 441 0057 07       		.uleb128 0x7
 442 0058 05       		.uleb128 0x5
 443 0059 00       		.byte	0
 444 005a 03       		.uleb128 0x3
 445 005b 0E       		.uleb128 0xe
 446 005c 3A       		.uleb128 0x3a
 447 005d 0B       		.uleb128 0xb
 448 005e 3B       		.uleb128 0x3b
 449 005f 0B       		.uleb128 0xb
 450 0060 49       		.uleb128 0x49
 451 0061 13       		.uleb128 0x13
 452 0062 02       		.uleb128 0x2
 453 0063 17       		.uleb128 0x17
 454 0064 00       		.byte	0
 455 0065 00       		.byte	0
 456 0066 08       		.uleb128 0x8
 457 0067 2E       		.uleb128 0x2e
 458 0068 00       		.byte	0
 459 0069 3F       		.uleb128 0x3f
 460 006a 19       		.uleb128 0x19
 461 006b 03       		.uleb128 0x3
 462 006c 0E       		.uleb128 0xe
 463 006d 3A       		.uleb128 0x3a
 464 006e 0B       		.uleb128 0xb
 465 006f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 13


 466 0070 0B       		.uleb128 0xb
 467 0071 27       		.uleb128 0x27
 468 0072 19       		.uleb128 0x19
 469 0073 11       		.uleb128 0x11
 470 0074 01       		.uleb128 0x1
 471 0075 12       		.uleb128 0x12
 472 0076 06       		.uleb128 0x6
 473 0077 40       		.uleb128 0x40
 474 0078 18       		.uleb128 0x18
 475 0079 9742     		.uleb128 0x2117
 476 007b 19       		.uleb128 0x19
 477 007c 00       		.byte	0
 478 007d 00       		.byte	0
 479 007e 09       		.uleb128 0x9
 480 007f 34       		.uleb128 0x34
 481 0080 00       		.byte	0
 482 0081 03       		.uleb128 0x3
 483 0082 0E       		.uleb128 0xe
 484 0083 3A       		.uleb128 0x3a
 485 0084 0B       		.uleb128 0xb
 486 0085 3B       		.uleb128 0x3b
 487 0086 0B       		.uleb128 0xb
 488 0087 49       		.uleb128 0x49
 489 0088 13       		.uleb128 0x13
 490 0089 02       		.uleb128 0x2
 491 008a 17       		.uleb128 0x17
 492 008b 00       		.byte	0
 493 008c 00       		.byte	0
 494 008d 0A       		.uleb128 0xa
 495 008e 34       		.uleb128 0x34
 496 008f 00       		.byte	0
 497 0090 03       		.uleb128 0x3
 498 0091 0E       		.uleb128 0xe
 499 0092 3A       		.uleb128 0x3a
 500 0093 0B       		.uleb128 0xb
 501 0094 3B       		.uleb128 0x3b
 502 0095 0B       		.uleb128 0xb
 503 0096 49       		.uleb128 0x49
 504 0097 13       		.uleb128 0x13
 505 0098 02       		.uleb128 0x2
 506 0099 18       		.uleb128 0x18
 507 009a 00       		.byte	0
 508 009b 00       		.byte	0
 509 009c 0B       		.uleb128 0xb
 510 009d 2E       		.uleb128 0x2e
 511 009e 00       		.byte	0
 512 009f 3F       		.uleb128 0x3f
 513 00a0 19       		.uleb128 0x19
 514 00a1 03       		.uleb128 0x3
 515 00a2 0E       		.uleb128 0xe
 516 00a3 3A       		.uleb128 0x3a
 517 00a4 0B       		.uleb128 0xb
 518 00a5 3B       		.uleb128 0x3b
 519 00a6 0B       		.uleb128 0xb
 520 00a7 27       		.uleb128 0x27
 521 00a8 19       		.uleb128 0x19
 522 00a9 49       		.uleb128 0x49
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 14


 523 00aa 13       		.uleb128 0x13
 524 00ab 11       		.uleb128 0x11
 525 00ac 01       		.uleb128 0x1
 526 00ad 12       		.uleb128 0x12
 527 00ae 06       		.uleb128 0x6
 528 00af 40       		.uleb128 0x40
 529 00b0 18       		.uleb128 0x18
 530 00b1 9742     		.uleb128 0x2117
 531 00b3 19       		.uleb128 0x19
 532 00b4 00       		.byte	0
 533 00b5 00       		.byte	0
 534 00b6 00       		.byte	0
 535              		.section	.debug_loc,"",%progbits
 536              	.Ldebug_loc0:
 537              	.LLST0:
 538 0000 00000000 		.4byte	.LVL0
 539 0004 0C000000 		.4byte	.LVL1
 540 0008 0100     		.2byte	0x1
 541 000a 50       		.byte	0x50
 542 000b 0C000000 		.4byte	.LVL1
 543 000f 1C000000 		.4byte	.LFE0
 544 0013 0400     		.2byte	0x4
 545 0015 F3       		.byte	0xf3
 546 0016 01       		.uleb128 0x1
 547 0017 50       		.byte	0x50
 548 0018 9F       		.byte	0x9f
 549 0019 00000000 		.4byte	0
 550 001d 00000000 		.4byte	0
 551              	.LLST1:
 552 0021 00000000 		.4byte	.LVL2
 553 0025 0E000000 		.4byte	.LVL5
 554 0029 0100     		.2byte	0x1
 555 002b 50       		.byte	0x50
 556 002c 0E000000 		.4byte	.LVL5
 557 0030 20000000 		.4byte	.LFE2
 558 0034 0400     		.2byte	0x4
 559 0036 F3       		.byte	0xf3
 560 0037 01       		.uleb128 0x1
 561 0038 50       		.byte	0x50
 562 0039 9F       		.byte	0x9f
 563 003a 00000000 		.4byte	0
 564 003e 00000000 		.4byte	0
 565              	.LLST2:
 566 0042 00000000 		.4byte	.LVL2
 567 0046 0A000000 		.4byte	.LVL3
 568 004a 0100     		.2byte	0x1
 569 004c 51       		.byte	0x51
 570 004d 0A000000 		.4byte	.LVL3
 571 0051 20000000 		.4byte	.LFE2
 572 0055 0400     		.2byte	0x4
 573 0057 F3       		.byte	0xf3
 574 0058 01       		.uleb128 0x1
 575 0059 51       		.byte	0x51
 576 005a 9F       		.byte	0x9f
 577 005b 00000000 		.4byte	0
 578 005f 00000000 		.4byte	0
 579              	.LLST3:
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 15


 580 0063 0C000000 		.4byte	.LVL4
 581 0067 12000000 		.4byte	.LVL6
 582 006b 0500     		.2byte	0x5
 583 006d 75       		.byte	0x75
 584 006e 00       		.sleb128 0
 585 006f 37       		.byte	0x37
 586 0070 1A       		.byte	0x1a
 587 0071 9F       		.byte	0x9f
 588 0072 12000000 		.4byte	.LVL6
 589 0076 20000000 		.4byte	.LFE2
 590 007a 0100     		.2byte	0x1
 591 007c 53       		.byte	0x53
 592 007d 00000000 		.4byte	0
 593 0081 00000000 		.4byte	0
 594              		.section	.debug_aranges,"",%progbits
 595 0000 3C000000 		.4byte	0x3c
 596 0004 0200     		.2byte	0x2
 597 0006 00000000 		.4byte	.Ldebug_info0
 598 000a 04       		.byte	0x4
 599 000b 00       		.byte	0
 600 000c 0000     		.2byte	0
 601 000e 0000     		.2byte	0
 602 0010 00000000 		.4byte	.LFB0
 603 0014 1C000000 		.4byte	.LFE0-.LFB0
 604 0018 00000000 		.4byte	.LFB1
 605 001c 18000000 		.4byte	.LFE1-.LFB1
 606 0020 00000000 		.4byte	.LFB2
 607 0024 20000000 		.4byte	.LFE2-.LFB2
 608 0028 00000000 		.4byte	.LFB3
 609 002c 10000000 		.4byte	.LFE3-.LFB3
 610 0030 00000000 		.4byte	.LFB4
 611 0034 04000000 		.4byte	.LFE4-.LFB4
 612 0038 00000000 		.4byte	0
 613 003c 00000000 		.4byte	0
 614              		.section	.debug_ranges,"",%progbits
 615              	.Ldebug_ranges0:
 616 0000 00000000 		.4byte	.LFB0
 617 0004 1C000000 		.4byte	.LFE0
 618 0008 00000000 		.4byte	.LFB1
 619 000c 18000000 		.4byte	.LFE1
 620 0010 00000000 		.4byte	.LFB2
 621 0014 20000000 		.4byte	.LFE2
 622 0018 00000000 		.4byte	.LFB3
 623 001c 10000000 		.4byte	.LFE3
 624 0020 00000000 		.4byte	.LFB4
 625 0024 04000000 		.4byte	.LFE4
 626 0028 00000000 		.4byte	0
 627 002c 00000000 		.4byte	0
 628              		.section	.debug_line,"",%progbits
 629              	.Ldebug_line0:
 630 0000 D2000000 		.section	.debug_str,"MS",%progbits,1
 630      02004D00 
 630      00000201 
 630      FB0E0D00 
 630      01010101 
 631              	.LASF15:
 632 0000 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 16


 632      3200
 633              	.LASF25:
 634 0006 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 634      4320342E 
 634      392E3320 
 634      32303135 
 634      30333033 
 635 0039 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 635      20726576 
 635      6973696F 
 635      6E203232 
 635      31323230 
 636 006c 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 636      66756E63 
 636      74696F6E 
 636      2D736563 
 636      74696F6E 
 637              	.LASF21:
 638 0094 6D61736B 		.ascii	"maskVal\000"
 638      56616C00 
 639              	.LASF28:
 640 009c 4932435F 		.ascii	"I2C_Slave_SCBCLK_Stop\000"
 640      536C6176 
 640      655F5343 
 640      42434C4B 
 640      5F53746F 
 641              	.LASF27:
 642 00b2 433A5C55 		.ascii	"C:\\Users\\Tim Chen\\Desktop\\Test proximity auto t"
 642      73657273 
 642      5C54696D 
 642      20436865 
 642      6E5C4465 
 643 00e1 756E696E 		.ascii	"uning\\MH-8W_Proximity_Board_V9_20170619\\MH-8W_PRO"
 643      675C4D48 
 643      2D38575F 
 643      50726F78 
 643      696D6974 
 644 0112 58494D49 		.ascii	"XIMITY.cydsn\\Bootloader_V01\\Bootloader_PSoC4_Exam"
 644      54592E63 
 644      7964736E 
 644      5C426F6F 
 644      746C6F61 
 645 0143 706C6530 		.ascii	"ple01.cydsn\000"
 645      312E6379 
 645      64736E00 
 646              	.LASF12:
 647 014f 666C6F61 		.ascii	"float\000"
 647      7400
 648              	.LASF1:
 649 0155 756E7369 		.ascii	"unsigned char\000"
 649      676E6564 
 649      20636861 
 649      7200
 650              	.LASF23:
 651 0163 4932435F 		.ascii	"I2C_Slave_SCBCLK_GetDividerRegister\000"
 651      536C6176 
 651      655F5343 
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 17


 651      42434C4B 
 651      5F476574 
 652              	.LASF5:
 653 0187 6C6F6E67 		.ascii	"long unsigned int\000"
 653      20756E73 
 653      69676E65 
 653      6420696E 
 653      7400
 654              	.LASF3:
 655 0199 73686F72 		.ascii	"short unsigned int\000"
 655      7420756E 
 655      7369676E 
 655      65642069 
 655      6E7400
 656              	.LASF19:
 657 01ac 636C6B44 		.ascii	"clkDivider\000"
 657      69766964 
 657      657200
 658              	.LASF13:
 659 01b7 646F7562 		.ascii	"double\000"
 659      6C6500
 660              	.LASF22:
 661 01be 72656756 		.ascii	"regVal\000"
 661      616C00
 662              	.LASF18:
 663 01c5 616C6967 		.ascii	"alignClkDiv\000"
 663      6E436C6B 
 663      44697600 
 664              	.LASF20:
 665 01d1 636C6B46 		.ascii	"clkFractional\000"
 665      72616374 
 665      696F6E61 
 665      6C00
 666              	.LASF26:
 667 01df 47656E65 		.ascii	"Generated_Source\\PSoC4\\I2C_Slave_SCBCLK.c\000"
 667      72617465 
 667      645F536F 
 667      75726365 
 667      5C50536F 
 668              	.LASF10:
 669 0209 75696E74 		.ascii	"uint16\000"
 669      313600
 670              	.LASF11:
 671 0210 75696E74 		.ascii	"uint32\000"
 671      333200
 672              	.LASF8:
 673 0217 756E7369 		.ascii	"unsigned int\000"
 673      676E6564 
 673      20696E74 
 673      00
 674              	.LASF7:
 675 0224 6C6F6E67 		.ascii	"long long unsigned int\000"
 675      206C6F6E 
 675      6720756E 
 675      7369676E 
 675      65642069 
 676              	.LASF24:
ARM GAS  C:\Users\TIMCHE~1\AppData\Local\Temp\ccohsFNc.s 			page 18


 677 023b 4932435F 		.ascii	"I2C_Slave_SCBCLK_GetFractionalDividerRegister\000"
 677      536C6176 
 677      655F5343 
 677      42434C4B 
 677      5F476574 
 678              	.LASF6:
 679 0269 6C6F6E67 		.ascii	"long long int\000"
 679      206C6F6E 
 679      6720696E 
 679      7400
 680              	.LASF14:
 681 0277 63686172 		.ascii	"char\000"
 681      00
 682              	.LASF2:
 683 027c 73686F72 		.ascii	"short int\000"
 683      7420696E 
 683      7400
 684              	.LASF17:
 685 0286 4932435F 		.ascii	"I2C_Slave_SCBCLK_SetFractionalDividerRegister\000"
 685      536C6176 
 685      655F5343 
 685      42434C4B 
 685      5F536574 
 686              	.LASF9:
 687 02b4 75696E74 		.ascii	"uint8\000"
 687      3800
 688              	.LASF4:
 689 02ba 6C6F6E67 		.ascii	"long int\000"
 689      20696E74 
 689      00
 690              	.LASF0:
 691 02c3 7369676E 		.ascii	"signed char\000"
 691      65642063 
 691      68617200 
 692              	.LASF16:
 693 02cf 4932435F 		.ascii	"I2C_Slave_SCBCLK_StartEx\000"
 693      536C6176 
 693      655F5343 
 693      42434C4B 
 693      5F537461 
 694              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
